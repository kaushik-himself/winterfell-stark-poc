{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0","program":"/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","winter_fri","--edition=2021","/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=9decb77369600f6f","-C","extra-filename=-9decb77369600f6f","--out-dir","/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","-L","dependency=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","--extern","crypto=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_crypto-5ce773de4a24102d.rmeta","--extern","math=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_math-caa6979d5adfb8a1.rmeta","--extern","utils=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_utils-7e9ca64107c5b293.rmeta","--cap-lints","allow","-L","native=/Users/verloop/web3/winterfell-nft/target/rls/debug/build/blake3-92387bdc436ce863/out","-L","native=/Users/verloop/web3/winterfell-nft/target/rls/debug/build/blake3-92387bdc436ce863/out","--error-format=json","--sysroot","/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_fri-9decb77369600f6f.rmeta"},"prelude":{"crate_id":{"name":"winter_fri","disambiguator":[8240717306310797145,0]},"crate_root":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src","external_crates":[{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","num":18,"id":{"name":"winter_math","disambiguator":[7939711538366881299,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","num":19,"id":{"name":"winter_utils","disambiguator":[6543379861855309929,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":20,"id":{"name":"winter_crypto","disambiguator":[8941282792384159007,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":21,"id":{"name":"sha3","disambiguator":[7268035942060313992,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":22,"id":{"name":"digest","disambiguator":[7578323278360302728,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":23,"id":{"name":"generic_array","disambiguator":[8836281415988858016,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":24,"id":{"name":"typenum","disambiguator":[18344174592359653307,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":25,"id":{"name":"crypto_common","disambiguator":[7493296314554171395,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":26,"id":{"name":"block_buffer","disambiguator":[11768130926017568546,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":27,"id":{"name":"subtle","disambiguator":[4511373288773010580,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":28,"id":{"name":"keccak","disambiguator":[9107484285738289293,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":29,"id":{"name":"blake3","disambiguator":[16313067414413823840,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":30,"id":{"name":"arrayref","disambiguator":[15621369136658719922,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":31,"id":{"name":"arrayvec","disambiguator":[8238203197434002581,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":32,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","num":33,"id":{"name":"constant_time_eq","disambiguator":[4478672943650019765,0]}}],"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":182,"byte_end":4338,"line_start":6,"line_end":87,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4065,"byte_end":4085,"line_start":73,"line_end":73,"column_start":18,"column_end":38},"alias_span":null,"name":"DefaultProverChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4087,"byte_end":4096,"line_start":73,"line_end":73,"column_start":40,"column_end":49},"alias_span":null,"name":"FriProver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4098,"byte_end":4111,"line_start":73,"line_end":73,"column_start":51,"column_end":64},"alias_span":null,"name":"ProverChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4148,"byte_end":4170,"line_start":76,"line_end":76,"column_start":20,"column_end":42},"alias_span":null,"name":"DefaultVerifierChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4172,"byte_end":4183,"line_start":76,"line_end":76,"column_start":44,"column_end":55},"alias_span":null,"name":"FriVerifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4185,"byte_end":4200,"line_start":76,"line_end":76,"column_start":57,"column_end":72},"alias_span":null,"name":"VerifierChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4234,"byte_end":4244,"line_start":79,"line_end":79,"column_start":18,"column_end":28},"alias_span":null,"name":"FriOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4273,"byte_end":4281,"line_start":82,"line_end":82,"column_start":16,"column_end":24},"alias_span":null,"name":"FriProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4312,"byte_end":4325,"line_start":85,"line_end":85,"column_start":17,"column_end":30},"alias_span":null,"name":"VerifierError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":182,"byte_end":4338,"line_start":6,"line_end":87,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":46},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":502},{"krate":0,"index":505}],"decl_id":null,"docs":" This crate contains an implementation of the FRI protocol used by the Winterfell STARK prover\n and verifier.","sig":null,"attributes":[{"value":"/ This crate contains an implementation of the FRI protocol used by the Winterfell STARK prover","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":182,"byte_end":279,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ and verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":280,"byte_end":297,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":298,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ FRI stands for Fast Reed-Solomon Interactive Oracle Proof of Proximity, and is used in the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":302,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ STARK protocol for low-degree testing. Specifically, given a commitment to a set of evaluations","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":397,"byte_end":496,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ of some function over domain *D*, the verifier can be convinced that the function is a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":497,"byte_end":587,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"/ polynomial of degree at most *d*, by making a small number of queries to the commitment.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":588,"byte_end":680,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":681,"byte_end":684,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Proof generation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":685,"byte_end":707,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ FRI proofs are generated by a [FriProver] in two steps:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":708,"byte_end":767,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":768,"byte_end":771,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ 1. First, the commit phase of the protocol is executed via","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":772,"byte_end":834,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/    [build_layers()](prover::FriProver::build_layers()) function. During this phase, the degree","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":835,"byte_end":933,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/    of the polynomial is repeatedly reduced by applying a degree-respecting projection, until","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":934,"byte_end":1030,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/    the size of the domain over which the polynomial is evaluated falls under","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1031,"byte_end":1111,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/    `max_remainder_size` parameter. While performing the reduction, the prover writes a set of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1112,"byte_end":1209,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/    layer commitments into the [ProverChannel]. These commitments should be recorded and sent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1210,"byte_end":1306,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/    to the verifier as they will be needed during the proof verification procedure.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1307,"byte_end":1393,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/ 2. Then, the query phase of the protocol is executed via","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1394,"byte_end":1454,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/    [build_proof()](prover::FriProver::build_proof()) function. The output of this function is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1455,"byte_end":1552,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/    an instance of the [FriProof] struct. When FRI is executed as a part of the STARK protocol,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1553,"byte_end":1651,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/    FRI proof is included into a STARK proof.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1652,"byte_end":1700,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1701,"byte_end":1704,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ When the crate is compiled with `concurrent` feature enabled, proof generation will be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1705,"byte_end":1795,"line_start":29,"line_end":29,"column_start":1,"column_end":91}},{"value":"/ performed in multiple threads (usually, as many threads as there are logical cores on the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1796,"byte_end":1889,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ machine). The number of threads can be configured via `RAYON_NUM_THREADS` environment variable.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1890,"byte_end":1989,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1990,"byte_end":1993,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Proof verification","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":1994,"byte_end":2018,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ FRI proofs are verified by a [FriVerifier] as follows:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2019,"byte_end":2077,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/ 1. First, a FRI proof needs to be converted into a [VerifierChannel]. This crate provides a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2078,"byte_end":2173,"line_start":35,"line_end":35,"column_start":1,"column_end":96}},{"value":"/    default implementation of the verifier channel, but when FRI proof verification is executed","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2174,"byte_end":2272,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/    as a part of the larger STARK protocol, STARK verifier handles this conversion.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2273,"byte_end":2359,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ 2. Then, a [FriVerifier] should be instantiated (via [new()](FriVerifier::new()) function).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2360,"byte_end":2455,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/    This will execute the commit phase of the FRI protocol from the verifier's perspective -","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2456,"byte_end":2551,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/    i.e., the verifier will read FRI layer commitments from the channel, and generates","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2552,"byte_end":2641,"line_start":40,"line_end":40,"column_start":1,"column_end":90}},{"value":"/    random values needed for layer folding.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2642,"byte_end":2688,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ 3. Finally, the query phase of the FRI protocol should be executed via","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2689,"byte_end":2763,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/    [verify()](FriVerifier::verify()) function. Note that query values at the first FRI layer","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2764,"byte_end":2860,"line_start":43,"line_end":43,"column_start":1,"column_end":97}},{"value":"/    are provided to the [verify()](FriVerifier::verify()) function directly. The values at","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2861,"byte_end":2954,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/    remaining layers, the verifier reads from the specified verifier channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":2955,"byte_end":3035,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3036,"byte_end":3039,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Protocol parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3040,"byte_end":3065,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/ The current implementation supports executing FRI protocol with dynamically configurable","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3066,"byte_end":3158,"line_start":48,"line_end":48,"column_start":1,"column_end":93}},{"value":"/ parameters including:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3159,"byte_end":3184,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3185,"byte_end":3188,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ * Base STARK field,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3189,"byte_end":3212,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ * Extension field,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3213,"byte_end":3235,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/ * Domain blowup factor,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3236,"byte_end":3263,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/ * Hash function (used for Merkle tree commitments),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3264,"byte_end":3319,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ * Folding factor (used for degree reduction for each FRI layer),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3320,"byte_end":3388,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ * Maximum size of the last FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3389,"byte_end":3430,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3431,"byte_end":3434,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3435,"byte_end":3451,"line_start":58,"line_end":58,"column_start":1,"column_end":17}},{"value":"/ * StarkWare's blog post on [Low Degree Testing](https://medium.com/starkware/low-degree-testing-f7614f5172db)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3452,"byte_end":3565,"line_start":59,"line_end":59,"column_start":1,"column_end":114}},{"value":"/ * [Fast Reed-Solomon Interactive Oracle Proofs of Proximity](https://eccc.weizmann.ac.il/report/2017/134/)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3566,"byte_end":3676,"line_start":60,"line_end":60,"column_start":1,"column_end":111}},{"value":"/ * [DEEP-FRI: Sampling Outside the Box Improves Soundness](https://eprint.iacr.org/2019/336)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3677,"byte_end":3772,"line_start":61,"line_end":61,"column_start":1,"column_end":96}},{"value":"/ * Swastik Kooparty's [talk on DEEP-FRI](https://www.youtube.com/watch?v=txo_kPSn59Y&list=PLcIyXLwiPilWvjvNkhMn283LV370Pk5CT&index=6)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":3773,"byte_end":3909,"line_start":62,"line_end":62,"column_start":1,"column_end":137}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"folding","qualname":"::folding","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" Contains functions for folding FRI layers.","sig":null,"attributes":[{"value":"/ Contains functions for folding FRI layers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":4522,"byte_end":4568,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":4569,"byte_end":4572,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is exposed publicly primarily for benchmarking and documentation purposes. The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":4573,"byte_end":4667,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ functions contained here are not intended to be used by the end-user of the crate.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":4668,"byte_end":4754,"line_start":9,"line_end":9,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8507,"byte_end":8516,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"apply_drp","qualname":"::folding::apply_drp","value":"pub fn apply_drp<B, E, const N: usize>(&[[E; ]], B, E) -> Vec<E> where\nB: StarkField, E: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Applies degree-respecting projection to evaluations of a polynomial.","sig":null,"attributes":[{"value":"/ Applies degree-respecting projection to evaluations of a polynomial.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5148,"byte_end":5220,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5221,"byte_end":5224,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This process reduces the  degree of the polynomial implied by the `evaluations` by `N`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5225,"byte_end":5316,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/ For example, for `N` = 4, this is equivalent to the following:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5317,"byte_end":5383,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ - Let `evaluations` contain the evaluations of polynomial *f*(x) of degree *k*.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5384,"byte_end":5467,"line_start":27,"line_end":27,"column_start":1,"column_end":84}},{"value":"/ - Group coefficients of *f* so that *f*(x) = a(x) + x * b(x) + x^2 * c(x) + x^3 * d(x)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5468,"byte_end":5558,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ - Compute random linear combination of polynomials a, b, c, d as","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5559,"byte_end":5627,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/   *f'*(x) = a + α * b + α^2 * c + α^3 * d, where α is an element drawn uniformly at random from","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5628,"byte_end":5731,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/   the entire field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5732,"byte_end":5755,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ - evaluate f'(x) on a domain which consists of x^4 from the original domain (and thus is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5756,"byte_end":5848,"line_start":32,"line_end":32,"column_start":1,"column_end":93}},{"value":"/   1/4 the size).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5849,"byte_end":5869,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5870,"byte_end":5873,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ However, the reduction is performed without converting the polynomials into coefficient form.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5874,"byte_end":5971,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ That is, we can go directly form evaluations to folded evaluations. For this, for each","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":5972,"byte_end":6062,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ evaluation in the folded domain, we need `N` evaluations in the source domain. For example,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6063,"byte_end":6158,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ for the case of `N` = 4, to compute the evaluation of *f'*(x) we need to have evaluations of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6159,"byte_end":6255,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/ *f*(x) from the source domain at x^{1/4}, x^{2/4}, x^{3/4}, x.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6256,"byte_end":6322,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6323,"byte_end":6326,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This function expect the `evaluations` to be already in a transposed form such that all","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6327,"byte_end":6418,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ evaluations needed to compute a single evaluation in the folded domain are next to each other.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6419,"byte_end":6517,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6518,"byte_end":6521,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The example below shows the equivalence of performing the projection via coefficient form and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6522,"byte_end":6619,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ via evaluation form for `N` = 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6620,"byte_end":6656,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6657,"byte_end":6664,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use math::{StarkField, FieldElement, fields::f128::BaseElement, get_power_series_with_offset, polynom};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6665,"byte_end":6774,"line_start":47,"line_end":47,"column_start":1,"column_end":110}},{"value":"/ # use rand_utils::{rand_value, rand_vector};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6775,"byte_end":6823,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ # use utils::transpose_slice;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6824,"byte_end":6857,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ # use winter_fri::folding::apply_drp;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6858,"byte_end":6899,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/ // generate random alpha","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6900,"byte_end":6928,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ let alpha: BaseElement = rand_value();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6929,"byte_end":6971,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6972,"byte_end":6975,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // degree 7 polynomial f(x)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":6976,"byte_end":7007,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ let poly: Vec<BaseElement> = rand_vector(8);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7008,"byte_end":7056,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7057,"byte_end":7060,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // f'(x) = g(x) + alpha * h(x) such that g(x) consists of even coefficients of f(x) and h(x)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7061,"byte_end":7157,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ // consists of odd coefficients of f(x). This is equivalent to using `folding_factor = 2`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7158,"byte_end":7252,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/ let mut folded_poly = Vec::new();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7253,"byte_end":7290,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ for i in 0..poly.len() / 2 {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7291,"byte_end":7323,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/     folded_poly.push(poly[2 * i] + alpha * poly[2 * i + 1]);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7324,"byte_end":7388,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7389,"byte_end":7394,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7395,"byte_end":7398,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // build a domain of 32 elements","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7399,"byte_end":7435,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/ let n = 32_usize;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7436,"byte_end":7457,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ let offset = BaseElement::GENERATOR;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7458,"byte_end":7498,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/ let g = BaseElement::get_root_of_unity(n.trailing_zeros());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7499,"byte_end":7562,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ let domain = get_power_series_with_offset(g, offset, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7563,"byte_end":7623,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7624,"byte_end":7627,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // build a folded domain of half the size, such that x in the source domain maps to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7628,"byte_end":7715,"line_start":70,"line_end":70,"column_start":1,"column_end":88}},{"value":"/ // x^2 in the folded domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7716,"byte_end":7748,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ let g = BaseElement::get_root_of_unity((n / 2).trailing_zeros());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7749,"byte_end":7818,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/ let folded_domain = get_power_series_with_offset(g, offset.exp(2), n / 2);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7819,"byte_end":7897,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7898,"byte_end":7901,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomials over their respective domains","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7902,"byte_end":7963,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/ let evaluations = polynom::eval_many(&poly, &domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":7964,"byte_end":8021,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/ let folded_evaluations = polynom::eval_many(&folded_poly, &folded_domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8022,"byte_end":8100,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8101,"byte_end":8104,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // use DRP to perform folding without converting polynomials into coefficient form","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8105,"byte_end":8191,"line_start":79,"line_end":79,"column_start":1,"column_end":87}},{"value":"/ let transposed_evaluations = transpose_slice::<BaseElement, 2>(&evaluations);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8192,"byte_end":8273,"line_start":80,"line_end":80,"column_start":1,"column_end":82}},{"value":"/ let drp_evaluations = apply_drp(&transposed_evaluations, offset, alpha);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8274,"byte_end":8350,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8351,"byte_end":8354,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // applying DRP should be equivalent to folding polynomials in coefficient form","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8355,"byte_end":8438,"line_start":83,"line_end":83,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(folded_evaluations, drp_evaluations);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8439,"byte_end":8491,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":8492,"byte_end":8499,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11697,"byte_end":11711,"line_start":159,"line_end":159,"column_start":8,"column_end":22},"name":"fold_positions","qualname":"::folding::fold_positions","value":"pub fn fold_positions(&[usize], usize, usize) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Maps positions in the source domain, to positions in the folded domain.","sig":null,"attributes":[{"value":"/ Maps positions in the source domain, to positions in the folded domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":9825,"byte_end":9900,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":9901,"byte_end":9904,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The size of the folded domain is reduced by the `folding_factor` as compared to the size of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":9905,"byte_end":10004,"line_start":124,"line_end":124,"column_start":1,"column_end":100}},{"value":"/ source domain. Thus, the original positions may fall outside of the folded domain. To map","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10005,"byte_end":10098,"line_start":125,"line_end":125,"column_start":1,"column_end":94}},{"value":"/ positions in the source domain to positions in the folded domain, we simply compute","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10099,"byte_end":10186,"line_start":126,"line_end":126,"column_start":1,"column_end":88}},{"value":"/ `new_position = old_position % folded_domain_size` and discard duplicates.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10187,"byte_end":10265,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10266,"byte_end":10269,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10270,"byte_end":10277,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ # use winter_fri::folding::fold_positions;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10278,"byte_end":10324,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ let positions = [1, 9, 12, 20];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10325,"byte_end":10360,"line_start":131,"line_end":131,"column_start":1,"column_end":36}},{"value":"/ let folded_positions = fold_positions(&positions, 32, 4);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10361,"byte_end":10422,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10423,"byte_end":10426,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ // 1 and 9 should map to 1; 12 and 20 should map to 4","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10427,"byte_end":10484,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(vec![1, 4], folded_positions);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10485,"byte_end":10530,"line_start":135,"line_end":135,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10531,"byte_end":10538,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10539,"byte_end":10542,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The domains we usually work with have the following form: c, c * ω, c * ω^2, ..., c * ω^(*n*-1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10543,"byte_end":10646,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ where *n* is the size of the domain, ω is *n*th root of unity, and c is the domain offset. Thus,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10647,"byte_end":10748,"line_start":139,"line_end":139,"column_start":1,"column_end":101}},{"value":"/ the procedure described above maps c * ω^*i* to (c * ω^*i*)^*k*, where *k* is the folding factor.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10749,"byte_end":10852,"line_start":140,"line_end":140,"column_start":1,"column_end":102}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10853,"byte_end":10860,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ # use math::{fields::f128::BaseElement, StarkField, FieldElement, get_power_series_with_offset};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10861,"byte_end":10961,"line_start":142,"line_end":142,"column_start":1,"column_end":101}},{"value":"/ // build a domain of size 32","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10962,"byte_end":10994,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/ let n = 32usize;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":10995,"byte_end":11015,"line_start":144,"line_end":144,"column_start":1,"column_end":21}},{"value":"/ let c = BaseElement::GENERATOR;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11016,"byte_end":11051,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ let g = BaseElement::get_root_of_unity(n.trailing_zeros());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11052,"byte_end":11115,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/ let source_domain = get_power_series_with_offset(g, c, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11116,"byte_end":11178,"line_start":147,"line_end":147,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11179,"byte_end":11182,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // build a domain of size 8 (folding_factor = 4)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11183,"byte_end":11235,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/ let g = BaseElement::get_root_of_unity((n / 4).trailing_zeros());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11236,"byte_end":11305,"line_start":150,"line_end":150,"column_start":1,"column_end":70}},{"value":"/ let folded_domain = get_power_series_with_offset(g, c.exp(4_u32.into()), (n / 4));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11306,"byte_end":11392,"line_start":151,"line_end":151,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11393,"byte_end":11396,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ // position 1 in the source domain maps to position 1 in the folded domain","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11397,"byte_end":11475,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(folded_domain[1], source_domain[1].exp(4));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11476,"byte_end":11534,"line_start":154,"line_end":154,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11535,"byte_end":11538,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ // position 9 in the source domain also maps to position 1 in the folded domain","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11539,"byte_end":11622,"line_start":156,"line_end":156,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(folded_domain[1], source_domain[9].exp(4));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11623,"byte_end":11681,"line_start":157,"line_end":157,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/folding/mod.rs","byte_start":11682,"byte_end":11689,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27706,"byte_end":27719,"line_start":23,"line_end":23,"column_start":11,"column_end":24},"name":"ProverChannel","qualname":"::prover::channel::ProverChannel","value":"ProverChannel<E: FieldElement>","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" Defines an interface for a channel over which a prover communicates with a verifier.","sig":null,"attributes":[{"value":"/ Defines an interface for a channel over which a prover communicates with a verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27081,"byte_end":27169,"line_start":14,"line_end":14,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27170,"byte_end":27173,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The prover uses this channel to send commitments to FRI layer polynomials to the verifier, and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27174,"byte_end":27272,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ then to draw a random value α from the channel after each commitment is sent. The prover then","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27273,"byte_end":27371,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ uses this α to construct the next FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27372,"byte_end":27421,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27422,"byte_end":27425,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In the interactive version of the protocol, the verifier chooses α uniformly at random from","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27426,"byte_end":27522,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ the entire field. In the non-interactive version, the α is drawn pseudo-randomly based on the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27523,"byte_end":27621,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ commitments the prover has written into the channel up to this point.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27622,"byte_end":27695,"line_start":22,"line_end":22,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":124},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27826,"byte_end":27832,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Hasher","qualname":"::prover::channel::ProverChannel::Hasher","value":"type Hasher: Hasher;","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Hash function used by the prover to commit to polynomial evaluations.\n","sig":null,"attributes":[{"value":"/ Hash function used by the prover to commit to polynomial evaluations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27743,"byte_end":27816,"line_start":24,"line_end":24,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28435,"byte_end":28451,"line_start":35,"line_end":35,"column_start":8,"column_end":24},"name":"commit_fri_layer","qualname":"::prover::channel::ProverChannel::commit_fri_layer","value":"pub fn commit_fri_layer(&mut Self,\n                        <<Self as ProverChannel<E>>::Hasher as\n                        Hasher>::Digest)","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Sends a layer commitment to the verifier.","sig":null,"attributes":[{"value":"/ Sends a layer commitment to the verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27847,"byte_end":27892,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27897,"byte_end":27900,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ A layer commitment is a root of a Merkle tree built from evaluations of a polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27905,"byte_end":27993,"line_start":29,"line_end":29,"column_start":5,"column_end":93}},{"value":"/ at a given layer. The Merkle tree is built by first transposing evaluations into a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":27998,"byte_end":28084,"line_start":30,"line_end":30,"column_start":5,"column_end":91}},{"value":"/ two-dimensional matrix where each row contains values needed to compute a single","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28089,"byte_end":28173,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ value of the next FRI layer, and then putting each row of the matrix into a single","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28178,"byte_end":28264,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ leaf of the Merkle tree. Thus, the number of elements grouped into a single leaf is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28269,"byte_end":28356,"line_start":33,"line_end":33,"column_start":5,"column_end":92}},{"value":"/ equal to the `folding_factor` used for FRI layer construction.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28361,"byte_end":28427,"line_start":34,"line_end":34,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28969,"byte_end":28983,"line_start":47,"line_end":47,"column_start":8,"column_end":22},"name":"draw_fri_alpha","qualname":"::prover::channel::ProverChannel::draw_fri_alpha","value":"pub fn draw_fri_alpha(&mut Self) -> E","parent":{"krate":0,"index":122},"children":[],"decl_id":null,"docs":" Returns a random α drawn uniformly at random from the entire field.","sig":null,"attributes":[{"value":"/ Returns a random α drawn uniformly at random from the entire field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28560,"byte_end":28632,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28637,"byte_end":28640,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The prover uses this α to build the next FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28645,"byte_end":28701,"line_start":42,"line_end":42,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28706,"byte_end":28709,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ While in the interactive version of the protocol the verifier send a random α to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28714,"byte_end":28803,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/ prover, in the non-interactive version, the α is pseudo-randomly generated based on the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28808,"byte_end":28900,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ values the prover previously wrote into the channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":28905,"byte_end":28961,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":127},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29356,"byte_end":29376,"line_start":57,"line_end":57,"column_start":12,"column_end":32},"name":"DefaultProverChannel","qualname":"::prover::channel::DefaultProverChannel","value":"DefaultProverChannel {  }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" Provides a default implementation of the [ProverChannel] trait.","sig":null,"attributes":[{"value":"/ Provides a default implementation of the [ProverChannel] trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29146,"byte_end":29213,"line_start":53,"line_end":53,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29214,"byte_end":29217,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Though this implementation is intended primarily for testing purposes, it can be used in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29218,"byte_end":29310,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/ production use cases as well.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29311,"byte_end":29344,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29924,"byte_end":29927,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultProverChannel<B, E, H>>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new prover channel instantiated from the specified parameters.","sig":null,"attributes":[{"value":"/ Returns a new prover channel instantiated from the specified parameters.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29691,"byte_end":29767,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29772,"byte_end":29775,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29780,"byte_end":29792,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29797,"byte_end":29811,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/ * `domain_size` is smaller than 8 or is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29816,"byte_end":29879,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ * `num_queries` is zero.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29884,"byte_end":29912,"line_start":71,"line_end":71,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":31128,"byte_end":31148,"line_start":106,"line_end":106,"column_start":12,"column_end":32},"name":"draw_query_positions","qualname":"<DefaultProverChannel<B, E, H>>::draw_query_positions","value":"pub fn draw_query_positions(&mut Self) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Draws a set of positions at which the polynomial evaluations committed at the first FRI\n layer should be queried.","sig":null,"attributes":[{"value":"/ Draws a set of positions at which the polynomial evaluations committed at the first FRI","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30617,"byte_end":30708,"line_start":96,"line_end":96,"column_start":5,"column_end":96}},{"value":"/ layer should be queried.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30713,"byte_end":30741,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30746,"byte_end":30749,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The positions are pseudo-randomly generated based on the values the prover has written","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30754,"byte_end":30844,"line_start":99,"line_end":99,"column_start":5,"column_end":95}},{"value":"/ into this channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30849,"byte_end":30871,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30876,"byte_end":30879,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30884,"byte_end":30896,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ Panics if the specified number of unique positions could not be drawn from the specified","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30901,"byte_end":30993,"line_start":103,"line_end":103,"column_start":5,"column_end":97}},{"value":"/ domain. Both number of queried positions and domain size are specified during","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":30998,"byte_end":31079,"line_start":104,"line_end":104,"column_start":5,"column_end":86}},{"value":"/ construction of the channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":31084,"byte_end":31116,"line_start":105,"line_end":105,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":31424,"byte_end":31441,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"layer_commitments","qualname":"<DefaultProverChannel<B, E, H>>::layer_commitments","value":"pub fn layer_commitments(&Self) -> &[H::Digest]","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of FRI layer commitments written by the prover into this channel.\n","sig":null,"attributes":[{"value":"/ Returns a list of FRI layer commitments written by the prover into this channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":31328,"byte_end":31412,"line_start":112,"line_end":112,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17460,"byte_end":17469,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"FriProver","qualname":"::prover::FriProver","value":"FriProver {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" Implements the prover component of the FRI protocol.","sig":null,"attributes":[{"value":"/ Implements the prover component of the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13364,"byte_end":13420,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13421,"byte_end":13424,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Given evaluations of a function *f* over domain *D* (`evaluations`), a FRI prover generates","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13425,"byte_end":13520,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ a proof that *f* is a polynomial of some bounded degree *d*, such that *d* < |*D*| / 2. The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13521,"byte_end":13616,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/ proof is succinct: it exponentially smaller than `evaluations` and the verifier can verify it","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13617,"byte_end":13714,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ exponentially faster than it would have taken them to read all `evaluations`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13715,"byte_end":13796,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13797,"byte_end":13800,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The prover is parametrized with the following types:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13801,"byte_end":13857,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13858,"byte_end":13861,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ * `B` specifies the base field of the STARK protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13862,"byte_end":13919,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ * `E` specifies the field in which the FRI protocol is executed. This can be the same as the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":13920,"byte_end":14016,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/   base field `B`, but it can also be an extension of the base field in cases when the base","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14017,"byte_end":14111,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/   field is too small to provide desired security level for the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14112,"byte_end":14192,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ * `C` specifies the type used to simulate prover-verifier interaction.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14193,"byte_end":14267,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ * `H` specifies the hash function used to build layer Merkle trees. The same hash function","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14268,"byte_end":14362,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/   must be used in the prover channel to generate pseudo random values.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14363,"byte_end":14437,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14438,"byte_end":14441,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Proof generation is performed in two phases: commit phase and query phase.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14442,"byte_end":14520,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14521,"byte_end":14524,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Commit phase","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14525,"byte_end":14543,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ During the commit phase, which is executed via [build_layers()](FriProver::build_layers())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14544,"byte_end":14638,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/ function, the prover repeatedly applies a degree-respecting projection (DRP) to `evaluations`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14639,"byte_end":14736,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ (see [folding](crate::folding)). With every application of the DRP, the degree of the function","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14737,"byte_end":14835,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ *f* (and size of the domain over which it is evaluated) is reduced by the `folding_factor`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14836,"byte_end":14930,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/ until the remaining evaluations fit into a vector of at most `max_remainder_size` elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":14931,"byte_end":15026,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15027,"byte_end":15030,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ At each layer of reduction, the prover commits to the current set of evaluations. This is done","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15031,"byte_end":15129,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ by building a Merkle tree from the evaluations and sending the root of the tree to the verifier","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15130,"byte_end":15229,"line_start":53,"line_end":53,"column_start":1,"column_end":100}},{"value":"/ (via [ProverChannel]). The Merkle tree is build in such a way that all evaluations needed to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15230,"byte_end":15326,"line_start":54,"line_end":54,"column_start":1,"column_end":97}},{"value":"/ compute a single value in the next FRI layer are grouped into the same leaf (the number of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15327,"byte_end":15421,"line_start":55,"line_end":55,"column_start":1,"column_end":95}},{"value":"/ evaluations needed to compute a single element in the next FRI layer is equal to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15422,"byte_end":15510,"line_start":56,"line_end":56,"column_start":1,"column_end":89}},{"value":"/ `folding_factor`). This allows us to decommit all these values using a single Merkle","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15511,"byte_end":15599,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/ authentication path.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15600,"byte_end":15624,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15625,"byte_end":15628,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ After committing to the set of evaluations at the current layer, the prover draws a random","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15629,"byte_end":15723,"line_start":60,"line_end":60,"column_start":1,"column_end":95}},{"value":"/ field element α from the channel, and uses it to build the next FRI layer. In the interactive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15724,"byte_end":15822,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/ version of the protocol, the verifier draws α uniformly at random from the entire field and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15823,"byte_end":15919,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ sends it to the prover. In the non-interactive version, α is pseudo-randomly generated based","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":15920,"byte_end":16017,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ on the values the prover has written into the channel up to that point.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16018,"byte_end":16093,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16094,"byte_end":16097,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The prover keeps all FRI layers (consisting of evaluations and corresponding Merkle trees) in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16098,"byte_end":16195,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ its internal state.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16196,"byte_end":16219,"line_start":67,"line_end":67,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16220,"byte_end":16223,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Query phase","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16224,"byte_end":16241,"line_start":69,"line_end":69,"column_start":1,"column_end":18}},{"value":"/ In the query phase, which is executed via [build_proof()](FriProver::build_proof()) function,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16242,"byte_end":16339,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ the prover receives a set of positions in the domain *D* from the verifier. The prover then","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16340,"byte_end":16435,"line_start":71,"line_end":71,"column_start":1,"column_end":96}},{"value":"/ decommits evaluations corresponding to these positions across all FRI layers (except for the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16436,"byte_end":16532,"line_start":72,"line_end":72,"column_start":1,"column_end":97}},{"value":"/ remainder layer) and builds a [FriProof] from these evaluations. The remainder is included in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16533,"byte_end":16630,"line_start":73,"line_end":73,"column_start":1,"column_end":98}},{"value":"/ the proof in its entirety.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16631,"byte_end":16661,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16662,"byte_end":16665,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ In the interactive version of the protocol, the verifier draws the position uniformly at","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16666,"byte_end":16758,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ random from domain *D*. In the non-interactive version, the positions are pseudo-randomly","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16759,"byte_end":16852,"line_start":77,"line_end":77,"column_start":1,"column_end":94}},{"value":"/ selected based on the values the prover has written into the channel up to that point.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16853,"byte_end":16943,"line_start":78,"line_end":78,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16944,"byte_end":16947,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Since the positions are drawn from domain *D*, they apply directly only to the first FRI","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":16948,"byte_end":17040,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"/ layer. To map these positions to the positions in all subsequent layers, the prover uses","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17041,"byte_end":17133,"line_start":81,"line_end":81,"column_start":1,"column_end":93}},{"value":"/ [fold_positions] procedure.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17134,"byte_end":17165,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17166,"byte_end":17169,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ After the proof is generated, the prover deletes all internally stored FRI layers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17170,"byte_end":17256,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17257,"byte_end":17260,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Calling [build_layers()](FriProver::build_layers()) when the internal state is dirty, or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17261,"byte_end":17353,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ calling [build_proof()](FriProver::build_proof()) on a clean state will result in a panic.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":17354,"byte_end":17448,"line_start":87,"line_end":87,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18382,"byte_end":18385,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<FriProver<B, E, C, H>>::new","value":"pub fn new(FriOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new FRI prover instantiated with the provided `options`.\n","sig":null,"attributes":[{"value":"/ Returns a new FRI prover instantiated with the provided `options`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18300,"byte_end":18370,"line_start":118,"line_end":118,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18719,"byte_end":18733,"line_start":131,"line_end":131,"column_start":12,"column_end":26},"name":"folding_factor","qualname":"<FriProver<B, E, C, H>>::folding_factor","value":"pub fn folding_factor(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns folding factor for this prover.\n","sig":null,"attributes":[{"value":"/ Returns folding factor for this prover.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18664,"byte_end":18707,"line_start":130,"line_end":130,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18897,"byte_end":18910,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"domain_offset","qualname":"<FriProver<B, E, C, H>>::domain_offset","value":"pub fn domain_offset(&Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Returns offset of the domain over which FRI protocol is executed by this prover.\n","sig":null,"attributes":[{"value":"/ Returns offset of the domain over which FRI protocol is executed by this prover.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18801,"byte_end":18885,"line_start":135,"line_end":135,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19119,"byte_end":19129,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"num_layers","qualname":"<FriProver<B, E, C, H>>::num_layers","value":"pub fn num_layers(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns number of FRI layers computed during the last execution of the\n [build_layers()](FriProver::build_layers()) method.\n","sig":null,"attributes":[{"value":"/ Returns number of FRI layers computed during the last execution of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18973,"byte_end":19047,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ [build_layers()](FriProver::build_layers()) method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19052,"byte_end":19107,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19245,"byte_end":19250,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"reset","qualname":"<FriProver<B, E, C, H>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears a vector of internally stored layers.\n","sig":null,"attributes":[{"value":"/ Clears a vector of internally stored layers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19185,"byte_end":19233,"line_start":146,"line_end":146,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":20289,"byte_end":20301,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"build_layers","qualname":"<FriProver<B, E, C, H>>::build_layers","value":"pub fn build_layers(&mut Self, &mut C, Vec<E>)","parent":null,"children":[],"decl_id":null,"docs":" Executes the commit phase of the FRI protocol.","sig":null,"attributes":[{"value":"/ Executes the commit phase of the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19424,"byte_end":19474,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19479,"byte_end":19482,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ During this phase we repeatedly apply a degree-respecting projection (DRP) to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19487,"byte_end":19572,"line_start":155,"line_end":155,"column_start":5,"column_end":90}},{"value":"/ `evaluations` which contain evaluations some function *f* over domain *D*. With every","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19577,"byte_end":19666,"line_start":156,"line_end":156,"column_start":5,"column_end":94}},{"value":"/ application of the DRP the degree of the function (and size of the domain) is reduced by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19671,"byte_end":19763,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ `folding_factor` until the remaining evaluations can fit into a vector of at most","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19768,"byte_end":19853,"line_start":158,"line_end":158,"column_start":5,"column_end":90}},{"value":"/ `max_remainder_size`. At each layer of reduction the current evaluations are committed to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19858,"byte_end":19951,"line_start":159,"line_end":159,"column_start":5,"column_end":98}},{"value":"/ using a Merkle tree, and the root of this tree is written into the channel. After this the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":19956,"byte_end":20050,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ prover draws a random field element α from the channel, and uses it in the next application","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":20055,"byte_end":20151,"line_start":161,"line_end":161,"column_start":5,"column_end":100}},{"value":"/ of the DRP.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":20156,"byte_end":20171,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":20176,"byte_end":20179,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":20184,"byte_end":20196,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/ Panics if the prover state is dirty (the vector of layers is not empty).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":20201,"byte_end":20277,"line_start":165,"line_end":165,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23602,"byte_end":23613,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"build_proof","qualname":"<FriProver<B, E, C, H>>::build_proof","value":"pub fn build_proof(&mut Self, &[usize]) -> FriProof","parent":null,"children":[],"decl_id":null,"docs":" Executes query phase of FRI protocol.","sig":null,"attributes":[{"value":"/ Executes query phase of FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23097,"byte_end":23138,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23143,"byte_end":23146,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ For each of the provided `positions`, corresponding evaluations from each of the layers","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23151,"byte_end":23242,"line_start":223,"line_end":223,"column_start":5,"column_end":96}},{"value":"/ (excluding the remainder layer) are recorded into the proof together with Merkle","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23247,"byte_end":23331,"line_start":224,"line_end":224,"column_start":5,"column_end":89}},{"value":"/ authentication paths from the root of layer commitment trees. For the remainder, we include","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23336,"byte_end":23431,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ the whole set of evaluations into the proof.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23436,"byte_end":23484,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23489,"byte_end":23492,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23497,"byte_end":23509,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/ Panics is the prover state is clean (no FRI layers have been build yet).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":23514,"byte_end":23590,"line_start":229,"line_end":229,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":299},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49302,"byte_end":49317,"line_start":22,"line_end":22,"column_start":11,"column_end":26},"name":"VerifierChannel","qualname":"::verifier::channel::VerifierChannel","value":"VerifierChannel<E: FieldElement>","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":311}],"decl_id":null,"docs":" Defines an interface for a channel over which a verifier communicates with a prover.","sig":null,"attributes":[{"value":"/ Defines an interface for a channel over which a verifier communicates with a prover.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":48829,"byte_end":48917,"line_start":14,"line_end":14,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":48918,"byte_end":48921,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait abstracts away implementation specifics of the [FriProof] struct. Thus, instead of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":48922,"byte_end":49019,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ dealing with FRI proofs directly, the verifier can read the data as if it was sent by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49020,"byte_end":49113,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ prover via an interactive channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49114,"byte_end":49152,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49153,"byte_end":49156,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Note: that reading removes the data from the channel. Thus, reading duplicated values from","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49157,"byte_end":49251,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ the channel should not be possible.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49252,"byte_end":49291,"line_start":21,"line_end":21,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49424,"byte_end":49430,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"Hasher","qualname":"::verifier::channel::VerifierChannel::Hasher","value":"type Hasher: ElementHasher<BaseField = E::BaseField>;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Hash function used by the prover to commit to polynomial evaluations.\n","sig":null,"attributes":[{"value":"/ Hash function used by the prover to commit to polynomial evaluations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49341,"byte_end":49414,"line_start":23,"line_end":23,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49677,"byte_end":49700,"line_start":30,"line_end":30,"column_start":8,"column_end":31},"name":"read_fri_num_partitions","qualname":"::verifier::channel::VerifierChannel::read_fri_num_partitions","value":"pub fn read_fri_num_partitions(&Self) -> usize","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns the number of partitions used during proof generation.\n","sig":null,"attributes":[{"value":"/ Returns the number of partitions used during proof generation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49603,"byte_end":49669,"line_start":29,"line_end":29,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50223,"byte_end":50249,"line_start":39,"line_end":39,"column_start":8,"column_end":34},"name":"read_fri_layer_commitments","qualname":"::verifier::channel::VerifierChannel::read_fri_layer_commitments","value":"pub fn read_fri_layer_commitments(&mut Self)\n-> Vec<<<Self as VerifierChannel<E>>::Hasher as Hasher>::Digest>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Reads and removes from the channel all FRI layer commitments sent by the prover.","sig":null,"attributes":[{"value":"/ Reads and removes from the channel all FRI layer commitments sent by the prover.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49723,"byte_end":49807,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49812,"byte_end":49815,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ In the interactive version of the protocol, the prover sends layer commitments to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49820,"byte_end":49909,"line_start":34,"line_end":34,"column_start":5,"column_end":94}},{"value":"/ verifier one-by-one, and the verifier responds with a value α drawn uniformly at random","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":49914,"byte_end":50006,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"/ from the entire field after each layer commitment is received. In the non-interactive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50011,"byte_end":50100,"line_start":36,"line_end":36,"column_start":5,"column_end":94}},{"value":"/ version, the verifier can read all layer commitments at once, and then generate α values","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50105,"byte_end":50198,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ locally.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50203,"byte_end":50215,"line_start":38,"line_end":38,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50865,"byte_end":50892,"line_start":52,"line_end":52,"column_start":8,"column_end":35},"name":"take_next_fri_layer_queries","qualname":"::verifier::channel::VerifierChannel::take_next_fri_layer_queries","value":"pub fn take_next_fri_layer_queries(&mut Self) -> Vec<E>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Reads and removes from the channel evaluations of the polynomial at the queried positions\n for the next FRI layer.","sig":null,"attributes":[{"value":"/ Reads and removes from the channel evaluations of the polynomial at the queried positions","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50347,"byte_end":50440,"line_start":43,"line_end":43,"column_start":5,"column_end":98}},{"value":"/ for the next FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50445,"byte_end":50472,"line_start":44,"line_end":44,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50477,"byte_end":50480,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ In the interactive version of the protocol, these evaluations are sent from the prover to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50485,"byte_end":50578,"line_start":46,"line_end":46,"column_start":5,"column_end":98}},{"value":"/ the verifier during the query phase of the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50583,"byte_end":50643,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50648,"byte_end":50651,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ It is expected that layer queries and layer proofs at the same FRI layer are consistent.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50656,"byte_end":50748,"line_start":49,"line_end":49,"column_start":5,"column_end":97}},{"value":"/ That is, query values hash into the leaf nodes of corresponding Merkle authentication","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50753,"byte_end":50842,"line_start":50,"line_end":50,"column_start":5,"column_end":94}},{"value":"/ paths.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50847,"byte_end":50857,"line_start":51,"line_end":51,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51444,"byte_end":51469,"line_start":63,"line_end":63,"column_start":8,"column_end":33},"name":"take_next_fri_layer_proof","qualname":"::verifier::channel::VerifierChannel::take_next_fri_layer_proof","value":"pub fn take_next_fri_layer_proof(&mut Self) -> BatchMerkleProof<Self::Hasher>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Reads and removes from the channel Merkle authentication paths for queried evaluations for\n the next FRI layer.","sig":null,"attributes":[{"value":"/ Reads and removes from the channel Merkle authentication paths for queried evaluations for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":50920,"byte_end":51014,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ the next FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51019,"byte_end":51042,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51047,"byte_end":51050,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ In the interactive version of the protocol, these authentication paths are sent from the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51055,"byte_end":51147,"line_start":57,"line_end":57,"column_start":5,"column_end":97}},{"value":"/ prover to the verifier during the query phase of the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51152,"byte_end":51222,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51227,"byte_end":51230,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ It is expected that layer proofs and layer queries at the same FRI layer are consistent.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51235,"byte_end":51327,"line_start":60,"line_end":60,"column_start":5,"column_end":97}},{"value":"/ That is, query values hash into the leaf nodes of corresponding Merkle authentication","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51332,"byte_end":51421,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/ paths.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51426,"byte_end":51436,"line_start":62,"line_end":62,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51606,"byte_end":51624,"line_start":66,"line_end":66,"column_start":8,"column_end":26},"name":"take_fri_remainder","qualname":"::verifier::channel::VerifierChannel::take_fri_remainder","value":"pub fn take_fri_remainder(&mut Self) -> Vec<E>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Reads and removes the remainder (last FRI layer) values from the channel.\n","sig":null,"attributes":[{"value":"/ Reads and removes the remainder (last FRI layer) values from the channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51521,"byte_end":51598,"line_start":65,"line_end":65,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52108,"byte_end":52126,"line_start":78,"line_end":78,"column_start":8,"column_end":26},"name":"read_layer_queries","qualname":"::verifier::channel::VerifierChannel::read_layer_queries","value":"pub fn read_layer_queries<const N:\n                          usize>(&mut Self, &[usize],\n                                 &<<Self as VerifierChannel<E>>::Hasher as\n                                  Hasher>::Digest)\n-> Result<Vec<[E; ]>, VerifierError>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns FRI query values at the specified positions from the current FRI layer and advances\n layer pointer by one.","sig":null,"attributes":[{"value":"/ Returns FRI query values at the specified positions from the current FRI layer and advances","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51777,"byte_end":51872,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ layer pointer by one.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51877,"byte_end":51902,"line_start":72,"line_end":72,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51907,"byte_end":51910,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This also checks if the values are valid against the provided FRI layer commitment.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":51915,"byte_end":52002,"line_start":74,"line_end":74,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52007,"byte_end":52010,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52015,"byte_end":52027,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/ Returns an error if query values did not match layer commitment.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52032,"byte_end":52100,"line_start":77,"line_end":77,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":53210,"byte_end":53224,"line_start":103,"line_end":103,"column_start":8,"column_end":22},"name":"read_remainder","qualname":"::verifier::channel::VerifierChannel::read_remainder","value":"pub fn read_remainder<const N:\n                      usize>(&mut Self,\n                             &<<Self as VerifierChannel<E>>::Hasher as\n                              Hasher>::Digest)\n-> Result<Vec<E>, VerifierError>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Returns FRI remainder values (last FRI layer) read from this channel.","sig":null,"attributes":[{"value":"/ Returns FRI remainder values (last FRI layer) read from this channel.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52729,"byte_end":52802,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52807,"byte_end":52810,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This also checks whether the remainder is valid against the provided commitment.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52815,"byte_end":52899,"line_start":95,"line_end":95,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52904,"byte_end":52907,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52912,"byte_end":52924,"line_start":97,"line_end":97,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52929,"byte_end":52953,"line_start":98,"line_end":98,"column_start":5,"column_end":29}},{"value":"/ - Remainder values read from the channel cannot be used to construct a fully-balanced","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":52958,"byte_end":53047,"line_start":99,"line_end":99,"column_start":5,"column_end":94}},{"value":"/   Merkle tree.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":53052,"byte_end":53070,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ - If the root of the Merkle tree constructed from the remainder values does not match","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":53075,"byte_end":53164,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/   the specified `commitment`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":53169,"byte_end":53202,"line_start":102,"line_end":102,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54478,"byte_end":54500,"line_start":133,"line_end":133,"column_start":12,"column_end":34},"name":"DefaultVerifierChannel","qualname":"::verifier::channel::DefaultVerifierChannel","value":"DefaultVerifierChannel {  }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Provides a default implementation of the [VerifierChannel] trait.","sig":null,"attributes":[{"value":"/ Provides a default implementation of the [VerifierChannel] trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54178,"byte_end":54247,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54248,"byte_end":54251,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Default verifier channel can be instantiated directly from a [FriProof] struct.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54252,"byte_end":54335,"line_start":129,"line_end":129,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54336,"byte_end":54339,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Though this implementation is primarily intended for testing purposes, it can be used in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54340,"byte_end":54432,"line_start":131,"line_end":131,"column_start":1,"column_end":93}},{"value":"/ production use cases as well.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54433,"byte_end":54466,"line_start":132,"line_end":132,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":55035,"byte_end":55038,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultVerifierChannel<E, H>>::new","value":"pub fn new(FriProof, Vec<H::Digest>, usize, usize)\n-> Result<Self, DeserializationError>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new verifier channel from the specified [FriProof].","sig":null,"attributes":[{"value":"/ Builds a new verifier channel from the specified [FriProof].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54853,"byte_end":54917,"line_start":146,"line_end":146,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54922,"byte_end":54925,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54930,"byte_end":54942,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/ Returns an error if the specified `proof` could not be parsed correctly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54947,"byte_end":55023,"line_start":149,"line_end":149,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35105,"byte_end":35116,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"FriVerifier","qualname":"::verifier::FriVerifier","value":"FriVerifier {  }","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354}],"decl_id":null,"docs":" Implements the verifier component of the FRI protocol.","sig":null,"attributes":[{"value":"/ Implements the verifier component of the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32668,"byte_end":32726,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32727,"byte_end":32730,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Given a small number of evaluations of some function *f* over domain *D* and a FRI proof, a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32731,"byte_end":32826,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ FRI verifier determines whether *f* is a polynomial of some bounded degree *d*, such that *d*","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32827,"byte_end":32924,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ < |*D*| / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32925,"byte_end":32941,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32942,"byte_end":32945,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The verifier is parametrized by the following types:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":32946,"byte_end":33002,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33003,"byte_end":33006,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `B` specifies the base field of the STARK protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33007,"byte_end":33064,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ * `E` specifies the field in which the FRI protocol is executed. This can be the same as the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33065,"byte_end":33161,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/   base field `B`, but it can also be an extension of the base field in cases when the base","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33162,"byte_end":33256,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/   field is too small to provide desired security level for the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33257,"byte_end":33337,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ * `C` specifies the type used to simulate prover-verifier interaction. This type is used","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33338,"byte_end":33430,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/   as an abstraction for a [FriProof](crate::FriProof). Meaning, the verifier does not consume","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33431,"byte_end":33528,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/   a FRI proof directly, but reads it via [VerifierChannel] interface.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33529,"byte_end":33602,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ * `H` specifies the Hash function used by the prover to commit to polynomial evaluations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33603,"byte_end":33696,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33697,"byte_end":33700,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Proof verification is performed in two phases: commit phase and query phase.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33701,"byte_end":33781,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33782,"byte_end":33785,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Commit phase","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33786,"byte_end":33804,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ During the commit phase, which is executed when the verifier is instantiated via","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33805,"byte_end":33889,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ [new()](FriVerifier::new()) function, the verifier receives a list of FRI layer commitments","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33890,"byte_end":33985,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/ from the prover (via [VerifierChannel]). After each received commitment, the verifier","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":33986,"byte_end":34075,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ draws a random value α from the entire field, and sends it to the prover. In the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34076,"byte_end":34161,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ non-interactive version of the protocol, α values are derived pseudo-randomly from FRI","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34162,"byte_end":34253,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ layer commitments.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34254,"byte_end":34276,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34277,"byte_end":34280,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Query phase","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34281,"byte_end":34298,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ During the query phase, which is executed via [verify()](FriVerifier::verify()) function,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34299,"byte_end":34392,"line_start":47,"line_end":47,"column_start":1,"column_end":94}},{"value":"/ the verifier sends a set of positions in the domain *D* to the prover, and the prover responds","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34393,"byte_end":34491,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ with polynomial evaluations at these positions (together with corresponding Merkle paths)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34492,"byte_end":34585,"line_start":49,"line_end":49,"column_start":1,"column_end":94}},{"value":"/ across all FRI layers. The verifier then checks that:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34586,"byte_end":34643,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/ * The Merkle paths are valid against the layer commitments the verifier received during","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34644,"byte_end":34735,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/   the commit phase.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34736,"byte_end":34759,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/ * The evaluations are consistent across FRI layers (i.e., the degree-respecting projection","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34760,"byte_end":34854,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/   was applied correctly).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34855,"byte_end":34884,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/ * The degree of the polynomial implied by evaluations at the last FRI layer (the remainder)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34885,"byte_end":34980,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/   is smaller than the degree resulting from reducing degree *d* by `folding_factor` at each","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":34981,"byte_end":35076,"line_start":56,"line_end":56,"column_start":1,"column_end":96}},{"value":"/   FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35077,"byte_end":35093,"line_start":57,"line_end":57,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36900,"byte_end":36903,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<FriVerifier<B, E, C, H>>::new","value":"pub fn new(&mut C, &mut RandomCoin<B, H>, FriOptions, usize)\n-> Result<Self, VerifierError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new instance of FRI verifier created from the specified parameters.","sig":null,"attributes":[{"value":"/ Returns a new instance of FRI verifier created from the specified parameters.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35679,"byte_end":35760,"line_start":82,"line_end":82,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35765,"byte_end":35768,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The `max_poly_degree` parameter specifies the highest polynomial degree accepted by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35773,"byte_end":35864,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ returned verifier. In combination with `blowup_factor` from the `options` parameter,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35869,"byte_end":35957,"line_start":85,"line_end":85,"column_start":5,"column_end":93}},{"value":"/ `max_poly_degree` also defines the domain over which the tested polynomial is evaluated.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35962,"byte_end":36054,"line_start":86,"line_end":86,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36059,"byte_end":36062,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Creating a FRI verifier executes the commit phase of the FRI protocol from the verifier's","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36067,"byte_end":36160,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/ perspective. Specifically, the verifier reads FRI layer commitments from the `channel`,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36165,"byte_end":36256,"line_start":89,"line_end":89,"column_start":5,"column_end":96}},{"value":"/ and for each commitment, updates the `public_coin` with this commitment and then draws","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36261,"byte_end":36351,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ a random value α from the coin.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36356,"byte_end":36392,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36397,"byte_end":36400,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The verifier stores layer commitments and corresponding α values in its internal state,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36405,"byte_end":36497,"line_start":93,"line_end":93,"column_start":5,"column_end":96}},{"value":"/ and, thus, an instance of FRI verifier can be used to verify only a single proof.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36502,"byte_end":36587,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36592,"byte_end":36595,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36600,"byte_end":36612,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36617,"byte_end":36641,"line_start":97,"line_end":97,"column_start":5,"column_end":29}},{"value":"/ * `max_poly_degree` is inconsistent with the number of FRI layers read from the channel","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36646,"byte_end":36737,"line_start":98,"line_end":98,"column_start":5,"column_end":96}},{"value":"/   and `folding_factor` specified in the `options` parameter.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36742,"byte_end":36806,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ * An error was encountered while drawing a random α value from the coin.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":36811,"byte_end":36888,"line_start":100,"line_end":100,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":38896,"byte_end":38911,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"max_poly_degree","qualname":"<FriVerifier<B, E, C, H>>::max_poly_degree","value":"pub fn max_poly_degree(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum degree of a polynomial accepted by this verifier.\n","sig":null,"attributes":[{"value":"/ Returns maximum degree of a polynomial accepted by this verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":38815,"byte_end":38884,"line_start":151,"line_end":151,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39288,"byte_end":39299,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"domain_size","qualname":"<FriVerifier<B, E, C, H>>::domain_size","value":"pub fn domain_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns size of the domain over which a polynomial commitment checked by this verifier\n has been evaluated.","sig":null,"attributes":[{"value":"/ Returns size of the domain over which a polynomial commitment checked by this verifier","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":38970,"byte_end":39060,"line_start":156,"line_end":156,"column_start":5,"column_end":95}},{"value":"/ has been evaluated.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39065,"byte_end":39088,"line_start":157,"line_end":157,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39093,"byte_end":39096,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The domain size can be computed by rounding `max_poly_degree` to the next power of two","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39101,"byte_end":39191,"line_start":159,"line_end":159,"column_start":5,"column_end":95}},{"value":"/ and multiplying the result by the `blowup_factor` from the protocol options.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39196,"byte_end":39276,"line_start":160,"line_end":160,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39528,"byte_end":39542,"line_start":168,"line_end":168,"column_start":12,"column_end":26},"name":"num_partitions","qualname":"<FriVerifier<B, E, C, H>>::num_partitions","value":"pub fn num_partitions(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns number of partitions used during FRI proof generation.","sig":null,"attributes":[{"value":"/ Returns number of partitions used during FRI proof generation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39354,"byte_end":39420,"line_start":165,"line_end":165,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39425,"byte_end":39428,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ For non-distributed proof generation, number of partitions is usually set to 1.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39433,"byte_end":39516,"line_start":167,"line_end":167,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39673,"byte_end":39680,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"options","qualname":"<FriVerifier<B, E, C, H>>::options","value":"pub fn options(&Self) -> &FriOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns protocol configuration options for this verifier.\n","sig":null,"attributes":[{"value":"/ Returns protocol configuration options for this verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39600,"byte_end":39661,"line_start":172,"line_end":172,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":41247,"byte_end":41253,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"verify","qualname":"<FriVerifier<B, E, C, H>>::verify","value":"pub fn verify(&Self, &mut C, &[E], &[usize]) -> Result<(), VerifierError>","parent":null,"children":[],"decl_id":null,"docs":" Executes the query phase of the FRI protocol.","sig":null,"attributes":[{"value":"/ Executes the query phase of the FRI protocol.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39868,"byte_end":39917,"line_start":179,"line_end":179,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39922,"byte_end":39925,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if values in the `evaluations` slice represent evaluations of a polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":39930,"byte_end":40025,"line_start":181,"line_end":181,"column_start":5,"column_end":100}},{"value":"/ with degree <= `max_poly_degree` at x coordinates specified by the `positions` slice.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40030,"byte_end":40119,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40124,"byte_end":40127,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Thus, `positions` parameter represents the positions in the evaluation domain at which the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40132,"byte_end":40226,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ verifier queries the prover at the first FRI layer. Similarly, the `evaluations` parameter","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40231,"byte_end":40325,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"/ specifies the evaluations of the polynomial at the first FRI layer returned by the prover","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40330,"byte_end":40423,"line_start":186,"line_end":186,"column_start":5,"column_end":98}},{"value":"/ for these positions.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40428,"byte_end":40452,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40457,"byte_end":40460,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Evaluations of layer polynomials for all subsequent FRI layers the verifier reads from the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40465,"byte_end":40559,"line_start":189,"line_end":189,"column_start":5,"column_end":99}},{"value":"/ specified `channel`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40564,"byte_end":40588,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40593,"byte_end":40596,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40601,"byte_end":40613,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40618,"byte_end":40642,"line_start":193,"line_end":193,"column_start":5,"column_end":29}},{"value":"/ * The length of `evaluations` is not equal to the length of `positions`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40647,"byte_end":40723,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ * An unsupported folding factor was specified by the `options` for this verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40728,"byte_end":40813,"line_start":195,"line_end":195,"column_start":5,"column_end":90}},{"value":"/ * Decommitments to polynomial evaluations don't match the commitment value at any of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40818,"byte_end":40910,"line_start":196,"line_end":196,"column_start":5,"column_end":97}},{"value":"/   FRI layers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40915,"byte_end":40932,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/ * The verifier detects an error in how the degree-respecting projection was applied","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":40937,"byte_end":41024,"line_start":198,"line_end":198,"column_start":5,"column_end":92}},{"value":"/   at any of the FRI layers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":41029,"byte_end":41060,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/ * The degree of the remainder at the last FRI layer is greater than the degree implied by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":41065,"byte_end":41158,"line_start":200,"line_end":200,"column_start":5,"column_end":98}},{"value":"/   `max_poly_degree` reduced by the folding factor at each FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":41163,"byte_end":41235,"line_start":201,"line_end":201,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56730,"byte_end":56740,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"FriOptions","qualname":"::options::FriOptions","value":"FriOptions {  }","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" FRI protocol config options for proof generation and verification.\n","sig":null,"attributes":[{"value":"/ FRI protocol config options for proof generation and verification.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56616,"byte_end":56686,"line_start":11,"line_end":11,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":57171,"byte_end":57174,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<FriOptions>::new","value":"pub fn new(usize, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [FriOptions] struct instantiated with the specified parameters.","sig":null,"attributes":[{"value":"/ Returns a new [FriOptions] struct instantiated with the specified parameters.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56852,"byte_end":56933,"line_start":20,"line_end":20,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56938,"byte_end":56941,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56946,"byte_end":56958,"line_start":22,"line_end":22,"column_start":5,"column_end":17}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56963,"byte_end":56977,"line_start":23,"line_end":23,"column_start":5,"column_end":19}},{"value":"/ * `blowup_factor` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56982,"byte_end":57026,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ * `folding_factor` is not 4, 8, or 16.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":57031,"byte_end":57073,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/ * `max_remainder_size` is not at least twice the size of the `blowup_factor`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":57078,"byte_end":57159,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58301,"byte_end":58314,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"domain_offset","qualname":"<FriOptions>::domain_offset","value":"pub fn domain_offset<B: StarkField>(&Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset by which the evaluation domain is shifted.","sig":null,"attributes":[{"value":"/ Returns the offset by which the evaluation domain is shifted.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":57993,"byte_end":58058,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58063,"byte_end":58066,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The domain is shifted by multiplying every element in the domain by this offset.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58071,"byte_end":58155,"line_start":54,"line_end":54,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58160,"byte_end":58163,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Currently, the offset is hard-coded to be the primitive element in the field specified by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58168,"byte_end":58261,"line_start":56,"line_end":56,"column_start":5,"column_end":98}},{"value":"/ type parameter `B`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58266,"byte_end":58289,"line_start":57,"line_end":57,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58638,"byte_end":58652,"line_start":66,"line_end":66,"column_start":12,"column_end":26},"name":"folding_factor","qualname":"<FriOptions>::folding_factor","value":"pub fn folding_factor(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the factor by which the degree of a polynomial is reduced with each FRI layer.","sig":null,"attributes":[{"value":"/ Returns the factor by which the degree of a polynomial is reduced with each FRI layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58376,"byte_end":58466,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58471,"byte_end":58474,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ In combination with `max_remainder_size` this property defines how many FRI layers are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58479,"byte_end":58569,"line_start":64,"line_end":64,"column_start":5,"column_end":95}},{"value":"/ needed for an evaluation domain of a given size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58574,"byte_end":58626,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58938,"byte_end":58956,"line_start":74,"line_end":74,"column_start":12,"column_end":30},"name":"max_remainder_size","qualname":"<FriOptions>::max_remainder_size","value":"pub fn max_remainder_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum allowed remainder (last FRI layer) size.","sig":null,"attributes":[{"value":"/ Returns maximum allowed remainder (last FRI layer) size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58710,"byte_end":58770,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58775,"byte_end":58778,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ In combination with `folding_factor` this property defines how many FRI layers are needed","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58783,"byte_end":58876,"line_start":72,"line_end":72,"column_start":5,"column_end":98}},{"value":"/ for an evaluation domain of a given size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":58881,"byte_end":58926,"line_start":73,"line_end":73,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59322,"byte_end":59335,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"blowup_factor","qualname":"<FriOptions>::blowup_factor","value":"pub fn blowup_factor(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns a blowup factor of the evaluation domain.","sig":null,"attributes":[{"value":"/ Returns a blowup factor of the evaluation domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59018,"byte_end":59071,"line_start":78,"line_end":78,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59076,"byte_end":59079,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Specifically, if the polynomial for which the FRI protocol is executed is of degree `d`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59084,"byte_end":59175,"line_start":80,"line_end":80,"column_start":5,"column_end":96}},{"value":"/ where `d` is one less than a power of two, then the evaluation domain size will be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59180,"byte_end":59266,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ equal to `(d + 1) * blowup_factor`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59271,"byte_end":59310,"line_start":82,"line_end":82,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59732,"byte_end":59746,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"num_fri_layers","qualname":"<FriOptions>::num_fri_layers","value":"pub fn num_fri_layers(&Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes and return the number of FRI layers required for a domain of the specified size.","sig":null,"attributes":[{"value":"/ Computes and return the number of FRI layers required for a domain of the specified size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59392,"byte_end":59485,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59490,"byte_end":59493,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The remainder layer (the last FRI layer) is not included in the returned value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59498,"byte_end":59581,"line_start":89,"line_end":89,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59586,"byte_end":59589,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The number of layers for a given domain size is defined by the `folding_factor` and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59594,"byte_end":59681,"line_start":91,"line_end":91,"column_start":5,"column_end":92}},{"value":"/ `max_remainder_size` settings.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59686,"byte_end":59720,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":60263,"byte_end":60281,"line_start":107,"line_end":107,"column_start":12,"column_end":30},"name":"fri_remainder_size","qualname":"<FriOptions>::fri_remainder_size","value":"pub fn fri_remainder_size(&Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes and returns the size of the remainder layer (the last FRI layer) for a domain of\n the specified size.","sig":null,"attributes":[{"value":"/ Computes and returns the size of the remainder layer (the last FRI layer) for a domain of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":59980,"byte_end":60073,"line_start":102,"line_end":102,"column_start":5,"column_end":98}},{"value":"/ the specified size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":60078,"byte_end":60101,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":60106,"byte_end":60109,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The size of the remainder layer for a given domain size is defined by the `folding_factor`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":60114,"byte_end":60208,"line_start":105,"line_end":105,"column_start":5,"column_end":99}},{"value":"/ and `max_remainder_size` settings.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":60213,"byte_end":60251,"line_start":106,"line_end":106,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":62063,"byte_end":62071,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"FriProof","qualname":"::proof::FriProof","value":"FriProof {  }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"decl_id":null,"docs":" A proof generated by a FRI prover.","sig":null,"attributes":[{"value":"/ A proof generated by a FRI prover.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":60998,"byte_end":61036,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61037,"byte_end":61040,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A FRI proof contains information proving that a function *f* is a polynomial of some bounded","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61041,"byte_end":61137,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ degree *d*. FRI proofs cannot be instantiated directly - they must be generated by a instance","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61138,"byte_end":61235,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ of a [FriProver](crate::FriProver), and can be verified by a instance of a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61236,"byte_end":61314,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ [FriVerifier](crate::FriVerifier) via [VerifierChannel](crate::VerifierChannel) interface.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61315,"byte_end":61409,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61410,"byte_end":61413,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A proof consists of zero or more layers and a remainder. Each layer contains a set of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61414,"byte_end":61503,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/ polynomial evaluations at positions queried by the verifier as well as Merkle authentication","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61504,"byte_end":61600,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ paths for these evaluations (the Merkle paths are compressed into a batch Merkle proof). The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61601,"byte_end":61697,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ remainder is a list of field elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61698,"byte_end":61740,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61741,"byte_end":61744,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ All values in a proof are stored as vectors of bytes. Thus, the values must be parsed before","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61745,"byte_end":61841,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/ they can be returned to the user. To do this, [parse_layers()](FriProof::parse_layers())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61842,"byte_end":61934,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/ and [parse_remainder()](FriProof::parse_remainder()) methods can be used.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":61935,"byte_end":62012,"line_start":30,"line_end":30,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63676,"byte_end":63686,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"num_layers","qualname":"<FriProof>::num_layers","value":"pub fn num_layers(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of layers in this proof.\n","sig":null,"attributes":[{"value":"/ Returns the number of layers in this proof.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63617,"byte_end":63664,"line_start":80,"line_end":80,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63980,"byte_end":64002,"line_start":89,"line_end":89,"column_start":12,"column_end":34},"name":"num_remainder_elements","qualname":"<FriProof>::num_remainder_elements","value":"pub fn num_remainder_elements<E: FieldElement>(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of remainder elements in this proof.","sig":null,"attributes":[{"value":"/ Returns the number of remainder elements in this proof.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63742,"byte_end":63801,"line_start":85,"line_end":85,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63806,"byte_end":63809,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The number of elements is computed by dividing the number of remainder bytes by the size","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63814,"byte_end":63906,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/ of the field element specified by `E` type parameter.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":63911,"byte_end":63968,"line_start":88,"line_end":88,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64175,"byte_end":64189,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"num_partitions","qualname":"<FriProof>::num_partitions","value":"pub fn num_partitions(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of partitions used during proof generation.\n","sig":null,"attributes":[{"value":"/ Returns the number of partitions used during proof generation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64097,"byte_end":64163,"line_start":93,"line_end":93,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64322,"byte_end":64326,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"size","qualname":"<FriProof>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of this proof in bytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of this proof in bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64266,"byte_end":64310,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65276,"byte_end":65288,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"parse_layers","qualname":"<FriProof>::parse_layers","value":"pub fn parse_layers<H, E>(Self, usize, usize)\n-> Result<(Vec<Vec<E>>, Vec<BatchMerkleProof<H>>), DeserializationError> where\nE: FieldElement, H: ElementHasher<BaseField = E::BaseField>","parent":null,"children":[],"decl_id":null,"docs":" Decomposes this proof into vectors of query values for each layer and corresponding Merkle\n authentication paths for each query (grouped into batch Merkle proofs).","sig":null,"attributes":[{"value":"/ Decomposes this proof into vectors of query values for each layer and corresponding Merkle","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64678,"byte_end":64772,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ authentication paths for each query (grouped into batch Merkle proofs).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64777,"byte_end":64852,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64857,"byte_end":64860,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64865,"byte_end":64877,"line_start":112,"line_end":112,"column_start":5,"column_end":17}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64882,"byte_end":64896,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ * `domain_size` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64901,"byte_end":64943,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/ * `folding_factor` is smaller than two or is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":64948,"byte_end":65016,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65021,"byte_end":65024,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65029,"byte_end":65041,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65046,"byte_end":65070,"line_start":118,"line_end":118,"column_start":5,"column_end":29}},{"value":"/ * This proof is not consistent with the specified `domain_size` and `folding_factor`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65075,"byte_end":65164,"line_start":119,"line_end":119,"column_start":5,"column_end":94}},{"value":"/ * Any of the layers could not be parsed successfully.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65169,"byte_end":65226,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":65231,"byte_end":65264,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":67363,"byte_end":67378,"line_start":177,"line_end":177,"column_start":12,"column_end":27},"name":"parse_remainder","qualname":"<FriProof>::parse_remainder","value":"pub fn parse_remainder<E: FieldElement>(&Self)\n-> Result<Vec<E>, DeserializationError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of remainder values (last FRI layer) parsed from this proof.","sig":null,"attributes":[{"value":"/ Returns a vector of remainder values (last FRI layer) parsed from this proof.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":66903,"byte_end":66984,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":66989,"byte_end":66992,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":66997,"byte_end":67009,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":67014,"byte_end":67038,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/ * The number of remainder values implied by a combination of `E` type parameter and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":67043,"byte_end":67130,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/   the number of remainder bytes in this proof is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":67135,"byte_end":67207,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/ * Any of the remainder values could not be parsed correctly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":67212,"byte_end":67276,"line_start":175,"line_end":175,"column_start":5,"column_end":69}},{"value":"/ * Not all bytes have been consumed while parsing remainder values.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":67281,"byte_end":67351,"line_start":176,"line_end":176,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":75922,"byte_end":75937,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"name":"PublicCoinError","qualname":"::errors::VerifierError::PublicCoinError","value":"VerifierError::PublicCoinError(RandomCoinError)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Attempt to draw a random value from a public coin failed.\n","sig":null,"attributes":[{"value":"/ Attempt to draw a random value from a public coin failed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":75856,"byte_end":75917,"line_start":17,"line_end":17,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76092,"byte_end":76116,"line_start":21,"line_end":21,"column_start":5,"column_end":29},"name":"UnsupportedFoldingFactor","qualname":"::errors::VerifierError::UnsupportedFoldingFactor","value":"VerifierError::UnsupportedFoldingFactor(usize)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Folding factor specified for the protocol is not supported. Currently, supported folding\n factors are: 4, 8, and 16.\n","sig":null,"attributes":[{"value":"/ Folding factor specified for the protocol is not supported. Currently, supported folding","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":75960,"byte_end":76052,"line_start":19,"line_end":19,"column_start":5,"column_end":97}},{"value":"/ factors are: 4, 8, and 16.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76057,"byte_end":76087,"line_start":20,"line_end":20,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":580},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76214,"byte_end":76243,"line_start":23,"line_end":23,"column_start":5,"column_end":34},"name":"NumPositionEvaluationMismatch","qualname":"::errors::VerifierError::NumPositionEvaluationMismatch","value":"VerifierError::NumPositionEvaluationMismatch(usize, usize)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Number of query positions does not match the number of provided evaluations.\n","sig":null,"attributes":[{"value":"/ Number of query positions does not match the number of provided evaluations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76129,"byte_end":76209,"line_start":22,"line_end":22,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":584},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76355,"byte_end":76378,"line_start":25,"line_end":25,"column_start":5,"column_end":28},"name":"LayerCommitmentMismatch","qualname":"::errors::VerifierError::LayerCommitmentMismatch","value":"VerifierError::LayerCommitmentMismatch","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Evaluations at queried positions did not match layer commitment made by the prover.\n","sig":null,"attributes":[{"value":"/ Evaluations at queried positions did not match layer commitment made by the prover.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76263,"byte_end":76350,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76471,"byte_end":76490,"line_start":27,"line_end":27,"column_start":5,"column_end":24},"name":"InvalidLayerFolding","qualname":"::errors::VerifierError::InvalidLayerFolding","value":"VerifierError::InvalidLayerFolding(usize)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Degree-respecting projection was not performed correctly at one of the layers.\n","sig":null,"attributes":[{"value":"/ Degree-respecting projection was not performed correctly at one of the layers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76384,"byte_end":76466,"line_start":26,"line_end":26,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76574,"byte_end":76605,"line_start":29,"line_end":29,"column_start":5,"column_end":36},"name":"RemainderTreeConstructionFailed","qualname":"::errors::VerifierError::RemainderTreeConstructionFailed","value":"VerifierError::RemainderTreeConstructionFailed(String)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Failed to construct a Merkle tree out of FRI remainder values.\n","sig":null,"attributes":[{"value":"/ Failed to construct a Merkle tree out of FRI remainder values.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76503,"byte_end":76569,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76671,"byte_end":76698,"line_start":31,"line_end":31,"column_start":5,"column_end":32},"name":"RemainderCommitmentMismatch","qualname":"::errors::VerifierError::RemainderCommitmentMismatch","value":"VerifierError::RemainderCommitmentMismatch","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" FRI remainder did not match the commitment.\n","sig":null,"attributes":[{"value":"/ FRI remainder did not match the commitment.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76619,"byte_end":76666,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":594},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76788,"byte_end":76811,"line_start":33,"line_end":33,"column_start":5,"column_end":28},"name":"InvalidRemainderFolding","qualname":"::errors::VerifierError::InvalidRemainderFolding","value":"VerifierError::InvalidRemainderFolding","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Degree-respecting projection was not performed correctly at the last layer.\n","sig":null,"attributes":[{"value":"/ Degree-respecting projection was not performed correctly at the last layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76704,"byte_end":76783,"line_start":32,"line_end":32,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":596},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76899,"byte_end":76922,"line_start":35,"line_end":35,"column_start":5,"column_end":28},"name":"RemainderDegreeNotValid","qualname":"::errors::VerifierError::RemainderDegreeNotValid","value":"VerifierError::RemainderDegreeNotValid","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" FRI remainder expected degree is greater than number of remainder values.\n","sig":null,"attributes":[{"value":"/ FRI remainder expected degree is greater than number of remainder values.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76817,"byte_end":76894,"line_start":34,"line_end":34,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":598},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":77024,"byte_end":77047,"line_start":37,"line_end":37,"column_start":5,"column_end":28},"name":"RemainderDegreeMismatch","qualname":"::errors::VerifierError::RemainderDegreeMismatch","value":"VerifierError::RemainderDegreeMismatch(usize)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" FRI remainder degree is greater than the polynomial degree expected for the last layer.\n","sig":null,"attributes":[{"value":"/ FRI remainder degree is greater than the polynomial degree expected for the last layer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":76928,"byte_end":77019,"line_start":36,"line_end":36,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":77162,"byte_end":77178,"line_start":39,"line_end":39,"column_start":5,"column_end":21},"name":"DegreeTruncation","qualname":"::errors::VerifierError::DegreeTruncation","value":"VerifierError::DegreeTruncation(usize, usize, usize)","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Polynomial degree at one of the FRI layers could not be divided evenly by the folding factor.\n","sig":null,"attributes":[{"value":"/ Polynomial degree at one of the FRI layers could not be divided evenly by the folding factor.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":77060,"byte_end":77157,"line_start":38,"line_end":38,"column_start":5,"column_end":102}}]},{"kind":"Enum","id":{"krate":0,"index":573},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":75836,"byte_end":75849,"line_start":16,"line_end":16,"column_start":10,"column_end":23},"name":"VerifierError","qualname":"::errors::VerifierError","value":"pub enum VerifierError {\n    PublicCoinError(RandomCoinError),\n    UnsupportedFoldingFactor(usize),\n    NumPositionEvaluationMismatch(usize, usize),\n    LayerCommitmentMismatch,\n    InvalidLayerFolding(usize),\n    RemainderTreeConstructionFailed(String),\n    RemainderCommitmentMismatch,\n    InvalidRemainderFolding,\n    RemainderDegreeNotValid,\n    RemainderDegreeMismatch(usize),\n    DegreeTruncation(usize, usize, usize),\n}","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601}],"decl_id":null,"docs":" Defines errors which can occur during FRI proof verification.\n","sig":null,"attributes":[{"value":"/ Defines errors which can occur during FRI proof verification.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":75733,"byte_end":75798,"line_start":14,"line_end":14,"column_start":1,"column_end":66}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29655,"byte_end":29675,"line_start":65,"line_end":65,"column_start":64,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":31537,"byte_end":31557,"line_start":118,"line_end":118,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18018,"byte_end":18027,"line_start":109,"line_end":109,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54743,"byte_end":54765,"line_start":141,"line_end":141,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":55657,"byte_end":55679,"line_start":172,"line_end":172,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35512,"byte_end":35523,"line_start":75,"line_end":75,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56835,"byte_end":56845,"line_start":19,"line_end":19,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":62186,"byte_end":62194,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":68321,"byte_end":68329,"line_start":199,"line_end":199,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":68886,"byte_end":68894,"line_start":217,"line_end":217,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":69906,"byte_end":69919,"line_start":251,"line_end":251,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":74075,"byte_end":74088,"line_start":349,"line_end":349,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":74526,"byte_end":74539,"line_start":362,"line_end":362,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":77226,"byte_end":77239,"line_start":42,"line_end":42,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/lib.rs","byte_start":4026,"byte_end":4033,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":29655,"byte_end":29675,"line_start":65,"line_end":65,"column_start":64,"column_end":84},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/channel.rs","byte_start":31537,"byte_end":31557,"line_start":118,"line_end":118,"column_start":36,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":127},"to":{"krate":0,"index":122}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/prover/mod.rs","byte_start":18018,"byte_end":18027,"line_start":109,"line_end":109,"column_start":18,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":54743,"byte_end":54765,"line_start":141,"line_end":141,"column_start":12,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/channel.rs","byte_start":55657,"byte_end":55679,"line_start":172,"line_end":172,"column_start":35,"column_end":57},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":314},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/verifier/mod.rs","byte_start":35512,"byte_end":35523,"line_start":75,"line_end":75,"column_start":18,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/options.rs","byte_start":56835,"byte_end":56845,"line_start":19,"line_end":19,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":62186,"byte_end":62194,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":68321,"byte_end":68329,"line_start":199,"line_end":199,"column_start":23,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":544},"to":{"krate":19,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":68886,"byte_end":68894,"line_start":217,"line_end":217,"column_start":25,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":544},"to":{"krate":19,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":69906,"byte_end":69919,"line_start":251,"line_end":251,"column_start":6,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":74075,"byte_end":74088,"line_start":349,"line_end":349,"column_start":23,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":559},"to":{"krate":19,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/proof.rs","byte_start":74526,"byte_end":74539,"line_start":362,"line_end":362,"column_start":25,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":559},"to":{"krate":19,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-fri-0.3.0/src/errors.rs","byte_start":77226,"byte_end":77239,"line_start":42,"line_end":42,"column_start":23,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":573},"to":{"krate":2,"index":9403}}]}