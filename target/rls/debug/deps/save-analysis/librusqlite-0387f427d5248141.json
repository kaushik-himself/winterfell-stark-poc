{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3","program":"/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rusqlite","--edition=2018","/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=0387f427d5248141","-C","extra-filename=-0387f427d5248141","--out-dir","/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","-L","dependency=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","--extern","bitflags=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libbitflags-c858810ac1401bef.rmeta","--extern","fallible_iterator=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libfallible_iterator-ad89bb9a5ebbf498.rmeta","--extern","fallible_streaming_iterator=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libfallible_streaming_iterator-736ccb89572de919.rmeta","--extern","hashlink=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libhashlink-9d1c347673aeeace.rmeta","--extern","libsqlite3_sys=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/liblibsqlite3_sys-85874ceb28d05b13.rmeta","--extern","memchr=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libmemchr-0f17e0510b3678a5.rmeta","--extern","smallvec=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libsmallvec-e9adb6578f5dfcc6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/librusqlite-0387f427d5248141.rmeta"},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[4397101075393066884,0]},"crate_root":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src","external_crates":[{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":18,"id":{"name":"libsqlite3_sys","disambiguator":[5629682101488545942,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":19,"id":{"name":"hashlink","disambiguator":[17751227907726908429,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":20,"id":{"name":"hashbrown","disambiguator":[13966318730906291408,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":21,"id":{"name":"ahash","disambiguator":[7025164639397083612,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":22,"id":{"name":"once_cell","disambiguator":[10191779333977876649,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":23,"id":{"name":"getrandom","disambiguator":[10983892110581226937,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":24,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","num":25,"id":{"name":"libc","disambiguator":[1842094642865572787,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","num":26,"id":{"name":"fallible_iterator","disambiguator":[14835059748391449499,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","num":27,"id":{"name":"fallible_streaming_iterator","disambiguator":[15504845342662263775,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","num":28,"id":{"name":"smallvec","disambiguator":[1871165282145789956,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","num":29,"id":{"name":"bitflags","disambiguator":[9383773114405082083,0]}}],"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":0,"byte_end":67709,"line_start":1,"line_end":2030,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1467,"byte_end":1481,"line_start":53,"line_end":53,"column_start":9,"column_end":23},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1960,"byte_end":1975,"line_start":73,"line_end":73,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1426},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2000,"byte_end":2006,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"Column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1367},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2030,"byte_end":2035,"line_start":75,"line_end":75,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":130},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2057,"byte_end":2066,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2184,"byte_end":2200,"line_start":79,"line_end":79,"column_start":25,"column_end":41},"alias_span":null,"name":"params_from_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2202,"byte_end":2208,"line_start":79,"line_end":79,"column_start":43,"column_end":49},"alias_span":null,"name":"Params","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2084},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2210,"byte_end":2224,"line_start":79,"line_end":79,"column_start":51,"column_end":65},"alias_span":null,"name":"ParamsFromIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2248,"byte_end":2259,"line_start":80,"line_end":80,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2261,"byte_end":2264,"line_start":80,"line_end":80,"column_start":35,"column_end":38},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2266,"byte_end":2276,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2278,"byte_end":2281,"line_start":80,"line_end":80,"column_start":52,"column_end":55},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2283,"byte_end":2291,"line_start":80,"line_end":80,"column_start":57,"column_end":65},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2293,"byte_end":2297,"line_start":80,"line_end":80,"column_start":67,"column_end":71},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2327,"byte_end":2336,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2305},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2338,"byte_end":2353,"line_start":81,"line_end":81,"column_start":39,"column_end":54},"alias_span":null,"name":"StatementStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2385,"byte_end":2397,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2399,"byte_end":2408,"line_start":82,"line_end":82,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2366},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2410,"byte_end":2421,"line_start":82,"line_end":82,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2336},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2423,"byte_end":2442,"line_start":82,"line_end":82,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2467,"byte_end":2472,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2498,"byte_end":2499,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253788,"byte_end":253795,"line_start":72,"line_end":72,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":2373},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253797,"byte_end":253809,"line_start":72,"line_end":72,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":1019},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253811,"byte_end":253824,"line_start":72,"line_end":72,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253850,"byte_end":253855,"line_start":73,"line_end":73,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253857,"byte_end":253868,"line_start":73,"line_end":73,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253892,"byte_end":253897,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":969}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253924,"byte_end":253932,"line_start":75,"line_end":75,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":969}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":0,"byte_end":67709,"line_start":1,"line_end":2030,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":184},{"krate":0,"index":229},{"krate":0,"index":291},{"krate":0,"index":315},{"krate":0,"index":357},{"krate":0,"index":464},{"krate":0,"index":501},{"krate":0,"index":574},{"krate":0,"index":620},{"krate":0,"index":750},{"krate":0,"index":899},{"krate":0,"index":969},{"krate":0,"index":1190},{"krate":0,"index":1199},{"krate":0,"index":1208},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":2604},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1345},{"krate":0,"index":2621},{"krate":0,"index":2627},{"krate":0,"index":1347},{"krate":0,"index":1352},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1366}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"/ Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":80,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":179,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{params, Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":191,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":239,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":243,"byte_end":263,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ struct Person {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":264,"byte_end":283,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/     id: i32,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":284,"byte_end":300,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/     name: String,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":301,"byte_end":322,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/     data: Option<Vec<u8>>,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":323,"byte_end":353,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":354,"byte_end":359,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":360,"byte_end":363,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":364,"byte_end":393,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":394,"byte_end":443,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":444,"byte_end":447,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/     conn.execute(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":448,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/         \"CREATE TABLE person (","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":470,"byte_end":504,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                   id              INTEGER PRIMARY KEY,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":505,"byte_end":563,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/                   name            TEXT NOT NULL,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":564,"byte_end":616,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/                   data            BLOB","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":617,"byte_end":659,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/                   )\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":660,"byte_end":685,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/         [],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":686,"byte_end":701,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     )?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":702,"byte_end":713,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/     let me = Person {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":714,"byte_end":739,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/         id: 0,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":740,"byte_end":758,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         name: \"Steven\".to_string(),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":759,"byte_end":798,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/         data: None,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":799,"byte_end":822,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     };","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":823,"byte_end":833,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     conn.execute(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":834,"byte_end":855,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         \"INSERT INTO person (name, data) VALUES (?1, ?2)\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":856,"byte_end":918,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/         params![me.name, me.data],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":919,"byte_end":957,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     )?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":958,"byte_end":969,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":970,"byte_end":973,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT id, name, data FROM person\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":974,"byte_end":1048,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/     let person_iter = stmt.query_map([], |row| {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1049,"byte_end":1101,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/         Ok(Person {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1102,"byte_end":1125,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/             id: row.get(0)?,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1126,"byte_end":1158,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/             name: row.get(1)?,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1159,"byte_end":1193,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/             data: row.get(2)?,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1194,"byte_end":1228,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/         })","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1229,"byte_end":1243,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/     })?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1244,"byte_end":1256,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1257,"byte_end":1260,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     for person in person_iter {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1261,"byte_end":1296,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/         println!(\"Found person {:?}\", person.unwrap());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1297,"byte_end":1356,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1357,"byte_end":1366,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1367,"byte_end":1381,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1382,"byte_end":1387,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1388,"byte_end":1395,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":1396,"byte_end":1418,"line_start":50,"line_end":50,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68095,"byte_end":68108,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[{"value":"/ An error from an underlying SQLite call.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68046,"byte_end":68090,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68273,"byte_end":68297,"line_start":20,"line_end":20,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[{"value":"/ Error reported when attempting to open a connection when SQLite was","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68143,"byte_end":68214,"line_start":18,"line_end":18,"column_start":5,"column_end":76}},{"value":"/ configured to allow single-threaded use only.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68219,"byte_end":68268,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68433,"byte_end":68457,"line_start":24,"line_end":24,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but it cannot","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68304,"byte_end":68379,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ be converted to the requested Rust type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68384,"byte_end":68428,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68793,"byte_end":68816,"line_start":30,"line_end":30,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[{"value":"/ Error when SQLite gives us an integral value outside the range of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68524,"byte_end":68597,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ requested type (e.g., trying to get the value 1000 into a `u8`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68602,"byte_end":68670,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ The associated `usize` is the column index,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68675,"byte_end":68722,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ and the associated `i64` is the value returned by SQLite.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68727,"byte_end":68788,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68879,"byte_end":68888,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[{"value":"/ Error converting a string to UTF-8.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68835,"byte_end":68874,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69016,"byte_end":69024,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[{"value":"/ Error converting a string to a C-compatible string because it contained","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68911,"byte_end":68986,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ an embedded nul.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68991,"byte_end":69011,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69160,"byte_end":69180,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[{"value":"/ Error when using SQL named parameters and passing a parameter name not","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69053,"byte_end":69127,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ present in the SQL.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69132,"byte_end":69155,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69245,"byte_end":69256,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[{"value":"/ Error converting a file path to a string.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69195,"byte_end":69240,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69370,"byte_end":69392,"line_start":48,"line_end":48,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error returned when an [`execute`](crate::Connection::execute) call\n returns rows.\n","sig":null,"attributes":[{"value":"/ Error returned when an [`execute`](crate::Connection::execute) call","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69272,"byte_end":69343,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ returns rows.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69348,"byte_end":69365,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69555,"byte_end":69574,"line_start":52,"line_end":52,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for [`query_row`](crate::Connection::query_row)) did not return any.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to return at least one row (e.g.,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69399,"byte_end":69473,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ for [`query_row`](crate::Connection::query_row)) did not return any.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69478,"byte_end":69550,"line_start":51,"line_end":51,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69704,"byte_end":69722,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the index","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69581,"byte_end":69656,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ is out of range for the statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69661,"byte_end":69699,"line_start":55,"line_end":55,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69855,"byte_end":69872,"line_start":60,"line_end":60,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a named column is requested, but no column","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69736,"byte_end":69806,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ matches the name for the statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69811,"byte_end":69850,"line_start":59,"line_end":59,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":70059,"byte_end":70076,"line_start":65,"line_end":65,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, String, Type)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the type","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69887,"byte_end":69961,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ of the result in that column cannot be converted to the requested","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":69966,"byte_end":70035,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ Rust type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":70040,"byte_end":70054,"line_start":64,"line_end":64,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":70210,"byte_end":70230,"line_start":69,"line_end":69,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to insert one row did not insert","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":70104,"byte_end":70177,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ any or insert many.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":70182,"byte_end":70205,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":71276,"byte_end":71298,"line_start":92,"line_end":92,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error available for the implementors of the\n [`ToSql`](crate::types::ToSql) trait.\n","sig":null,"attributes":[{"value":"/ Error available for the implementors of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":71178,"byte_end":71225,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/ [`ToSql`](crate::types::ToSql) trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":71230,"byte_end":71271,"line_start":91,"line_end":91,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":71416,"byte_end":71428,"line_start":95,"line_end":95,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[{"value":"/ Error when the SQL is not a `SELECT`, is not read-only.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":71352,"byte_end":71411,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72301,"byte_end":72318,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"name":"MultipleStatement","qualname":"::error::Error::MultipleStatement","value":"Error::MultipleStatement","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the SQL contains multiple statements.\n","sig":null,"attributes":[{"value":"/ Error when the SQL contains multiple statements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72244,"byte_end":72296,"line_start":117,"line_end":117,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72532,"byte_end":72553,"line_start":122,"line_end":122,"column_start":5,"column_end":26},"name":"InvalidParameterCount","qualname":"::error::Error::InvalidParameterCount","value":"Error::InvalidParameterCount(usize, usize)","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":" Error when the number of bound parameters does not match the number of\n parameters in the query. The first `usize` is how many parameters were\n given, the 2nd is how many were expected.\n","sig":null,"attributes":[{"value":"/ Error when the number of bound parameters does not match the number of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72324,"byte_end":72398,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ parameters in the query. The first `usize` is how many parameters were","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72403,"byte_end":72477,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ given, the 2nd is how many were expected.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72482,"byte_end":72527,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68034,"byte_end":68039,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    SqliteFailure(ffi::Error, Option<String>),\n    SqliteSingleThreadedMode,\n    FromSqlConversionFailure(usize, Type,\n                             Box<dyn error::Error + Send + Sync + 'static>),\n    IntegralValueOutOfRange(usize, i64),\n    Utf8Error(str::Utf8Error),\n    NulError(::std::ffi::NulError),\n    InvalidParameterName(String),\n    InvalidPath(PathBuf),\n    ExecuteReturnedResults,\n    QueryReturnedNoRows,\n    InvalidColumnIndex(usize),\n    InvalidColumnName(String),\n    InvalidColumnType(usize, String, Type),\n    StatementChangedRows(usize),\n    ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>),\n    InvalidQuery,\n    MultipleStatement,\n    InvalidParameterCount(usize, usize),\n}","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1379},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from rusqlite.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":67905,"byte_end":67952,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"allow(clippy :: enum_variant_names)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":67970,"byte_end":68006,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":68007,"byte_end":68024,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83555,"byte_end":83567,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"pub fn busy_timeout(&Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[{"value":"/ Set a busy handler that sleeps for a specified amount of time when a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":82806,"byte_end":82878,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ table is locked. The handler will sleep multiple times until at","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":82883,"byte_end":82950,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ least \"ms\" milliseconds of sleeping have accumulated.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":82955,"byte_end":83012,"line_start":15,"line_end":15,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83017,"byte_end":83020,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Calling this routine with an argument equal to zero turns off all busy","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83025,"byte_end":83099,"line_start":17,"line_end":17,"column_start":5,"column_end":79}},{"value":"/ handlers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83104,"byte_end":83117,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83122,"byte_end":83125,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler for a particular database","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83130,"byte_end":83199,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ connection at any given moment. If another busy handler was defined","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83204,"byte_end":83275,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ (using [`busy_handler`](Connection::busy_handler)) prior to calling this","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83280,"byte_end":83356,"line_start":22,"line_end":22,"column_start":5,"column_end":81}},{"value":"/ routine, that other busy handler is cleared.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83361,"byte_end":83409,"line_start":23,"line_end":23,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83414,"byte_end":83417,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Newly created connections currently have a default busy timeout of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83422,"byte_end":83492,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ 5000ms, but this may be subject to change.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83497,"byte_end":83543,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":85101,"byte_end":85113,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"pub fn busy_handler(&Self, Option<fn(: i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[{"value":"/ Register a callback to handle `SQLITE_BUSY` errors.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83901,"byte_end":83956,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83961,"byte_end":83964,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If the busy callback is `None`, then `SQLITE_BUSY` is returned","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":83969,"byte_end":84035,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ immediately upon encountering the lock. The argument to the busy","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84040,"byte_end":84108,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ handler callback is the number of times that the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84113,"byte_end":84165,"line_start":41,"line_end":41,"column_start":5,"column_end":57}},{"value":"/ busy handler has been invoked previously for the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84170,"byte_end":84222,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/ same locking event. If the busy callback returns `false`, then no","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84227,"byte_end":84296,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ additional attempts are made to access the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84301,"byte_end":84347,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/ database and `SQLITE_BUSY` is returned to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84352,"byte_end":84401,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/ application. If the callback returns `true`, then another attempt","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84406,"byte_end":84475,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ is made to access the database and the cycle repeats.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84480,"byte_end":84537,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84542,"byte_end":84545,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler defined for each database","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84550,"byte_end":84619,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ connection. Setting a new busy handler clears any previously set","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84624,"byte_end":84692,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ handler. Note that calling [`busy_timeout()`](Connection::busy_timeout)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84697,"byte_end":84772,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ or evaluating `PRAGMA busy_timeout=N` will change the busy handler","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84777,"byte_end":84847,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ and thus clear any previously set busy handler.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84852,"byte_end":84903,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84908,"byte_end":84911,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Newly created connections default to a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84916,"byte_end":84958,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ [`busy_timeout()`](Connection::busy_timeout) handler with a timeout","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":84963,"byte_end":85034,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ of 5000ms, although this is subject to change.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":85039,"byte_end":85089,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90491,"byte_end":90505,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"pub fn prepare_cached(&Self, &str) -> Result<CachedStatement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n [`prepare_cached`](Connection::prepare_cached) once it is dropped.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution, returning a previously prepared","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89362,"byte_end":89436,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (but not currently in-use) statement if one is available. The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89441,"byte_end":89506,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/ returned statement will be cached for reuse by future calls to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89511,"byte_end":89577,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ [`prepare_cached`](Connection::prepare_cached) once it is dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89582,"byte_end":89652,"line_start":14,"line_end":14,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89657,"byte_end":89660,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89665,"byte_end":89683,"line_start":16,"line_end":16,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89688,"byte_end":89729,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89734,"byte_end":89793,"line_start":18,"line_end":18,"column_start":5,"column_end":64}},{"value":"/     {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89798,"byte_end":89807,"line_start":19,"line_end":19,"column_start":5,"column_end":14}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89812,"byte_end":89900,"line_start":20,"line_end":20,"column_start":5,"column_end":93}},{"value":"/         stmt.execute([\"Joe Smith\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89905,"byte_end":89946,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89951,"byte_end":89960,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/     {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89965,"byte_end":89974,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"/         // This will return the same underlying SQLite statement handle without","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89979,"byte_end":90062,"line_start":24,"line_end":24,"column_start":5,"column_end":88}},{"value":"/         // having to prepare it again.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90067,"byte_end":90109,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90114,"byte_end":90202,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/         stmt.execute([\"Bob Jones\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90207,"byte_end":90248,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90253,"byte_end":90262,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90267,"byte_end":90281,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90286,"byte_end":90291,"line_start":30,"line_end":30,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90296,"byte_end":90303,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90308,"byte_end":90311,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90316,"byte_end":90329,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90334,"byte_end":90337,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90342,"byte_end":90417,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90422,"byte_end":90465,"line_start":36,"line_end":36,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90470,"byte_end":90479,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90946,"byte_end":90983,"line_start":48,"line_end":48,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"pub fn set_prepared_statement_cache_capacity(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of cached prepared statements this connection","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90602,"byte_end":90674,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ will hold. By default, a connection will hold a relatively small","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90679,"byte_end":90747,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ number of cached statements. If you need more, or know that you","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90752,"byte_end":90819,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ will not use cached statements, you","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90824,"byte_end":90863,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ can set the capacity manually using this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90868,"byte_end":90920,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":90925,"byte_end":90934,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91156,"byte_end":91186,"line_start":54,"line_end":54,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"pub fn flush_prepared_statement_cache(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[{"value":"/ Remove/finalize all prepared statements currently in the cache.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91063,"byte_end":91130,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91135,"byte_end":91144,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91617,"byte_end":91632,"line_start":68,"line_end":68,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[{"value":"/ Cacheable statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91409,"byte_end":91433,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91434,"byte_end":91437,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Statement will return automatically to the cache by default.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91438,"byte_end":91502,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/ If you want the statement to be discarded, call","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91503,"byte_end":91554,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ [`discard()`](CachedStatement::discard) on it.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91555,"byte_end":91605,"line_start":67,"line_end":67,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92687,"byte_end":92694,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement>::discard","value":"pub fn discard(Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n [`Connection`]'s collection of cached statements.\n","sig":null,"attributes":[{"value":"/ Discard the statement, preventing it from being returned to its","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92536,"byte_end":92603,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/ [`Connection`]'s collection of cached statements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92608,"byte_end":92661,"line_start":109,"line_end":109,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92666,"byte_end":92675,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99357,"byte_end":99363,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Column","qualname":"::column::Column","value":"Column {  }","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"decl_id":null,"docs":" Information about a column of a SQLite query.\n","sig":null,"attributes":[{"value":"/ Information about a column of a SQLite query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99279,"byte_end":99328,"line_start":5,"line_end":5,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99516,"byte_end":99520,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"name","qualname":"<Column>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the column.\n","sig":null,"attributes":[{"value":"/ Returns the name of the column.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99455,"byte_end":99490,"line_start":13,"line_end":13,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99495,"byte_end":99504,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99652,"byte_end":99661,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"decl_type","qualname":"<Column>::decl_type","value":"pub fn decl_type(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the column (`None` for expression).\n","sig":null,"attributes":[{"value":"/ Returns the type of the column (`None` for expression).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99567,"byte_end":99626,"line_start":19,"line_end":19,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99631,"byte_end":99640,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100016,"byte_end":100028,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement>::column_names","value":"pub fn column_names(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.","sig":null,"attributes":[{"value":"/ Get all the column names in the result set of the prepared statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99744,"byte_end":99817,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99822,"byte_end":99825,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99830,"byte_end":99902,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99907,"byte_end":99975,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99980,"byte_end":100004,"line_start":31,"line_end":31,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100582,"byte_end":100594,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement>::column_count","value":"pub fn column_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.","sig":null,"attributes":[{"value":"/ Return the number of columns in the result set returned by the prepared","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100275,"byte_end":100350,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100355,"byte_end":100369,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100374,"byte_end":100377,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100382,"byte_end":100454,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100459,"byte_end":100527,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100532,"byte_end":100556,"line_start":47,"line_end":47,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":100561,"byte_end":100570,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102297,"byte_end":102308,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Statement>::column_name","value":"pub fn column_name(&Self, usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name assigned to a particular column in the result set\n returned by the prepared statement.","sig":null,"attributes":[{"value":"/ Returns the name assigned to a particular column in the result set","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":101763,"byte_end":101833,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ returned by the prepared statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":101838,"byte_end":101877,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":101882,"byte_end":101885,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":101890,"byte_end":101962,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":101967,"byte_end":102035,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102040,"byte_end":102064,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102069,"byte_end":102072,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102077,"byte_end":102091,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102096,"byte_end":102099,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102104,"byte_end":102176,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102181,"byte_end":102211,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102216,"byte_end":102219,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Panics when column name is not valid UTF-8.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102224,"byte_end":102271,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102276,"byte_end":102285,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103169,"byte_end":103181,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement>::column_index","value":"pub fn column_index(&Self, &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[{"value":"/ Returns the column index in the result set for a given column name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102595,"byte_end":102666,"line_start":102,"line_end":102,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102671,"byte_end":102674,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If there is no AS clause then the name of the column is unspecified and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102679,"byte_end":102754,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ may change from one release of SQLite to the next.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102759,"byte_end":102813,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102818,"byte_end":102821,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102826,"byte_end":102898,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102903,"byte_end":102971,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":102976,"byte_end":103000,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103005,"byte_end":103008,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103013,"byte_end":103026,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103031,"byte_end":103034,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Will return an `Error::InvalidColumnName` when there is no column with","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103039,"byte_end":103113,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ the specified `name`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103118,"byte_end":103143,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":103148,"byte_end":103157,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":315},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":354}],"decl_id":null,"docs":" Configure database connections\n","sig":null,"attributes":[{"value":"/ Configure database connections","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":107673,"byte_end":107707,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108305,"byte_end":108332,"line_start":19,"line_end":19,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_FKEY","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Enable or disable the enforcement of foreign key constraints.\n","sig":null,"attributes":[{"value":"/ Enable or disable the enforcement of foreign key constraints.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108235,"byte_end":108300,"line_start":18,"line_end":18,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108381,"byte_end":108411,"line_start":21,"line_end":21,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_ENABLE_TRIGGER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Enable or disable triggers.\n","sig":null,"attributes":[{"value":"/ Enable or disable triggers.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108345,"byte_end":108376,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108549,"byte_end":108586,"line_start":24,"line_end":24,"column_start":5,"column_end":42},"name":"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Enable or disable the fts3_tokenizer() function which is part of the\n FTS3 full-text search engine extension.\n","sig":null,"attributes":[{"value":"/ Enable or disable the fts3_tokenizer() function which is part of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108424,"byte_end":108496,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ FTS3 full-text search engine extension.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108501,"byte_end":108544,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":342},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108764,"byte_end":108796,"line_start":28,"line_end":28,"column_start":5,"column_end":37},"name":"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","value":"DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" In WAL mode, enable or disable the checkpoint operation before closing\n the connection.\n","sig":null,"attributes":[{"value":"/ In WAL mode, enable or disable the checkpoint operation before closing","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108661,"byte_end":108735,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ the connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108740,"byte_end":108759,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":345},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108898,"byte_end":108925,"line_start":30,"line_end":30,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_QPSG","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Activates or deactivates the query planner stability guarantee (QPSG).\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the query planner stability guarantee (QPSG).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108819,"byte_end":108893,"line_start":29,"line_end":29,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":348},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":109089,"byte_end":109116,"line_start":33,"line_end":33,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_TRIGGER_EQP","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","value":"DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Includes or excludes output for any operations performed by trigger\n programs from the output of EXPLAIN QUERY PLAN commands.\n","sig":null,"attributes":[{"value":"/ Includes or excludes output for any operations performed by trigger","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108948,"byte_end":109019,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ programs from the output of EXPLAIN QUERY PLAN commands.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":109024,"byte_end":109084,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":351},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":109265,"byte_end":109290,"line_start":36,"line_end":36,"column_start":5,"column_end":30},"name":"SQLITE_DBCONFIG_DEFENSIVE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DEFENSIVE","value":"DbConfig::SQLITE_DBCONFIG_DEFENSIVE","parent":{"krate":0,"index":332},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"defensive\" flag for a database connection.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"defensive\" flag for a database connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":109184,"byte_end":109260,"line_start":35,"line_end":35,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":332},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108100,"byte_end":108108,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"DbConfig","qualname":"::config::DbConfig","value":"pub enum DbConfig {\n    SQLITE_DBCONFIG_ENABLE_FKEY = ,\n    SQLITE_DBCONFIG_ENABLE_TRIGGER = ,\n    SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = ,\n    SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = ,\n    SQLITE_DBCONFIG_ENABLE_QPSG = ,\n    SQLITE_DBCONFIG_TRIGGER_EQP = ,\n    SQLITE_DBCONFIG_DEFENSIVE = ,\n}","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351}],"decl_id":null,"docs":" Database Connection Configuration Options\n See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.\n","sig":null,"attributes":[{"value":"/ Database Connection Configuration Options","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":107810,"byte_end":107855,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":107856,"byte_end":107974,"line_start":10,"line_end":10,"column_start":1,"column_end":119}},{"value":"repr(i32)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":107975,"byte_end":107987,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":107988,"byte_end":108034,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108035,"byte_end":108052,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":108053,"byte_end":108090,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111453,"byte_end":111462,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"db_config","qualname":"<Connection>::db_config","value":"pub fn db_config(&Self, DbConfig) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current value of a `config`.","sig":null,"attributes":[{"value":"/ Returns the current value of a `config`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110582,"byte_end":110626,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110631,"byte_end":110634,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: return `false` or `true` to indicate","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110639,"byte_end":110710,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/   whether FK enforcement is off or on","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110715,"byte_end":110756,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: return `false` or `true` to indicate","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110761,"byte_end":110835,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/   whether triggers are disabled or enabled","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110840,"byte_end":110886,"line_start":70,"line_end":70,"column_start":5,"column_end":51}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: return `false` or `true` to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110891,"byte_end":110963,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/   indicate whether fts3_tokenizer are disabled or enabled","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110968,"byte_end":111029,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: return `false` to indicate","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111034,"byte_end":111100,"line_start":73,"line_end":73,"column_start":5,"column_end":71}},{"value":"/   checkpoints-on-close are not disabled or `true` if they are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111105,"byte_end":111170,"line_start":74,"line_end":74,"column_start":5,"column_end":70}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: return `false` or `true` to indicate","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111175,"byte_end":111246,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/   whether the QPSG is disabled or enabled","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111251,"byte_end":111296,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: return `false` to indicate","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111301,"byte_end":111362,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/   output-for-trigger are not disabled or `true` if it is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111367,"byte_end":111427,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111432,"byte_end":111441,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112584,"byte_end":112597,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"set_db_config","qualname":"<Connection>::set_db_config","value":"pub fn set_db_config(&Self, DbConfig, bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Make configuration changes to a database connection","sig":null,"attributes":[{"value":"/ Make configuration changes to a database connection","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111794,"byte_end":111849,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111854,"byte_end":111857,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: `false` to disable FK enforcement, `true`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111862,"byte_end":111938,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/   to enable FK enforcement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111943,"byte_end":111973,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: `false` to disable triggers, `true` to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":111978,"byte_end":112054,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/   enable triggers","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112059,"byte_end":112080,"line_start":99,"line_end":99,"column_start":5,"column_end":26}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: `false` to disable","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112085,"byte_end":112148,"line_start":100,"line_end":100,"column_start":5,"column_end":68}},{"value":"/   fts3_tokenizer(), `true` to enable fts3_tokenizer()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112153,"byte_end":112210,"line_start":101,"line_end":101,"column_start":5,"column_end":62}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: `false` (the default) to enable","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112215,"byte_end":112286,"line_start":102,"line_end":102,"column_start":5,"column_end":76}},{"value":"/   checkpoints-on-close, `true` to disable them","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112291,"byte_end":112341,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: `false` to disable the QPSG, `true` to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112346,"byte_end":112419,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   enable QPSG","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112424,"byte_end":112441,"line_start":105,"line_end":105,"column_start":5,"column_end":22}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: `false` to disable output for trigger","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112446,"byte_end":112518,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/   programs, `true` to enable it","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112523,"byte_end":112558,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":112563,"byte_end":112572,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":476},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130006,"byte_end":130012,"line_start":6,"line_end":6,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::params::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" This trait exists just to ensure that the only impls of `trait Params`\n that are allowed are ones in this crate.\n","sig":null,"attributes":[{"value":"/ This trait exists just to ensure that the only impls of `trait Params`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":129868,"byte_end":129942,"line_start":4,"line_end":4,"column_start":5,"column_end":79}},{"value":"/ that are allowed are ones in this crate.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":129947,"byte_end":129991,"line_start":5,"line_end":5,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":480},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135996,"byte_end":136002,"line_start":157,"line_end":157,"column_start":11,"column_end":17},"name":"Params","qualname":"::params::Params","value":"Params: Sealed","parent":null,"children":[{"krate":0,"index":481}],"decl_id":null,"docs":" Trait used for [sets of parameter][params] passed into SQL\n statements/queries.","sig":null,"attributes":[{"value":"/ Trait used for [sets of parameter][params] passed into SQL","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130039,"byte_end":130101,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ statements/queries.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130102,"byte_end":130125,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130126,"byte_end":130129,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [params]: https://www.sqlite.org/c3ref/bind_blob.html","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130130,"byte_end":130187,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130188,"byte_end":130191,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note: Currently, this trait can only be implemented inside this crate.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130192,"byte_end":130266,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ Additionally, it's methods (which are `doc(hidden)`) should currently not be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130267,"byte_end":130347,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ considered part of the stable API, although it's possible they will","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130348,"byte_end":130419,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ stabilize in the future.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130420,"byte_end":130448,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130449,"byte_end":130452,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Passing parameters to SQLite","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130453,"byte_end":130487,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130488,"byte_end":130491,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Many functions in this library let you pass parameters to SQLite. Doing this","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130492,"byte_end":130572,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ lets you avoid any risk of SQL injection, and is simpler than escaping","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130573,"byte_end":130647,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ things manually. Aside from deprecated functions and a few helpers, this is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130648,"byte_end":130727,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ indicated by the function taking a generic argument that implements `Params`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130728,"byte_end":130808,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ (this trait).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130809,"byte_end":130826,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130827,"byte_end":130830,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Positional parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130831,"byte_end":130859,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130860,"byte_end":130863,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For cases where you want to pass a list of parameters where the number of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130864,"byte_end":130941,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ parameters is known at compile time, this can be done in one of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":130942,"byte_end":131013,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ following ways:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131014,"byte_end":131033,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131034,"byte_end":131037,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Using the [`rusqlite::params!`](crate::params!) macro, e.g.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131038,"byte_end":131103,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/   `thing.query(rusqlite::params![1, \"foo\", bar])`. This is mostly useful for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131104,"byte_end":131184,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/   heterogeneous lists of parameters, or lists where the number of parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131185,"byte_end":131265,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/   exceeds 32.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131266,"byte_end":131283,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131284,"byte_end":131287,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - For small heterogeneous lists of parameters, they can either be passed as:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131288,"byte_end":131368,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131369,"byte_end":131372,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     - an array, as in `thing.query([1i32, 2, 3, 4])` or `thing.query([\"foo\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131373,"byte_end":131453,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/       \"bar\", \"baz\"])`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131454,"byte_end":131480,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131481,"byte_end":131484,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     - a reference to an array of references, as in `thing.query(&[\"foo\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131485,"byte_end":131561,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/       \"bar\", \"baz\"])` or `thing.query(&[&1i32, &2, &3])`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131562,"byte_end":131623,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131624,"byte_end":131627,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/         (Note: in this case we don't implement this for slices for coherence","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131628,"byte_end":131708,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/         reasons, so it really is only for the \"reference to array\" types —","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131709,"byte_end":131789,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/         hence why the number of parameters must be <= 32 or you need to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131790,"byte_end":131865,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/         reach for `rusqlite::params!`)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131866,"byte_end":131908,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131909,"byte_end":131912,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     Unfortunately, in the current design it's not possible to allow this for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131913,"byte_end":131993,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/     references to arrays of non-references (e.g. `&[1i32, 2, 3]`). Code like","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":131994,"byte_end":132074,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/     this should instead either use `params!`, an array literal, a `&[&dyn","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132075,"byte_end":132152,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/     ToSql]` or if none of those work, [`ParamsFromIter`].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132153,"byte_end":132214,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132215,"byte_end":132218,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - As a slice of `ToSql` trait object references, e.g. `&[&dyn ToSql]`. This","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132219,"byte_end":132298,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/   is mostly useful for passing parameter lists around as arguments without","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132299,"byte_end":132377,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/   having every function take a generic `P: Params`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132378,"byte_end":132433,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132434,"byte_end":132437,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Example (positional)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132438,"byte_end":132466,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132467,"byte_end":132470,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132471,"byte_end":132489,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132490,"byte_end":132539,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132540,"byte_end":132593,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (a, b) VALUES (?, ?)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132594,"byte_end":132672,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132673,"byte_end":132676,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Using `rusqlite::params!`:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132677,"byte_end":132714,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(params![1i32, \"blah\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132715,"byte_end":132760,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132761,"byte_end":132764,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     // array literal — non-references","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132765,"byte_end":132808,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     stmt.execute([2i32, 3i32])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132809,"byte_end":132845,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132846,"byte_end":132849,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // array literal — references","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132850,"byte_end":132889,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/     stmt.execute([\"foo\", \"bar\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132890,"byte_end":132928,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132929,"byte_end":132932,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/     // Slice literal, references:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132933,"byte_end":132970,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(&[&2i32, &3i32])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":132971,"byte_end":133010,"line_start":78,"line_end":78,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133011,"byte_end":133014,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     // Note: The types behind the references don't have to be `Sized`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133015,"byte_end":133088,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/     stmt.execute(&[\"foo\", \"bar\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133089,"byte_end":133128,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133129,"byte_end":133132,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // However, this doesn't work (see above):","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133133,"byte_end":133183,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/     // stmt.execute(&[1i32, 2i32])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133184,"byte_end":133224,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133225,"byte_end":133239,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133240,"byte_end":133245,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133246,"byte_end":133253,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133254,"byte_end":133257,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Named parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133258,"byte_end":133281,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133282,"byte_end":133285,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ SQLite lets you name parameters using a number of conventions (\":foo\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133286,"byte_end":133360,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ \"@foo\", \"$foo\"). You can pass named parameters in to SQLite using rusqlite","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133361,"byte_end":133439,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ in a few ways:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133440,"byte_end":133458,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133459,"byte_end":133462,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ - Using the [`rusqlite::named_params!`](crate::named_params!) macro, as in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133463,"byte_end":133541,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/   `stmt.execute(named_params!{ \":name\": \"foo\", \":age\": 99 })`. Similar to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133542,"byte_end":133619,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/   the `params` macro, this is most useful for heterogeneous lists of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133620,"byte_end":133692,"line_start":97,"line_end":97,"column_start":1,"column_end":73}},{"value":"/   parameters, or lists where the number of parameters exceeds 32.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133693,"byte_end":133762,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133763,"byte_end":133766,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - As a slice of `&[(&str, &dyn ToSql)]`. This is what essentially all of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133767,"byte_end":133843,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/   these boil down to in the end, conceptually at least. In theory you can","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133844,"byte_end":133921,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/   pass this as `stmt.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133922,"byte_end":133947,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133948,"byte_end":133951,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - As array references, similar to the positional params. This looks like","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":133952,"byte_end":134028,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/   `thing.query(&[(\":foo\", &1i32), (\":bar\", &2i32)])` or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134029,"byte_end":134088,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/   `thing.query(&[(\":foo\", \"abc\"), (\":bar\", \"def\")])`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134089,"byte_end":134146,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134147,"byte_end":134150,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Note: Unbound named parameters will be left to the value they previously","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134151,"byte_end":134227,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ were bound with, falling back to `NULL` for parameters which have never been","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134228,"byte_end":134308,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ bound.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134309,"byte_end":134319,"line_start":110,"line_end":110,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134320,"byte_end":134323,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ### Example (named)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134324,"byte_end":134347,"line_start":112,"line_end":112,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134348,"byte_end":134351,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134352,"byte_end":134370,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134371,"byte_end":134426,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ fn insert(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134427,"byte_end":134475,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (key, value) VALUES (:key, :value)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134476,"byte_end":134568,"line_start":117,"line_end":117,"column_start":1,"column_end":93}},{"value":"/     // Using `rusqlite::params!`:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134569,"byte_end":134606,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(named_params! { \":key\": \"one\", \":val\": 2 })?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134607,"byte_end":134673,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // Alternatively:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134674,"byte_end":134699,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/     stmt.execute(&[(\":key\", \"three\"), (\":val\", \"four\")])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134700,"byte_end":134762,"line_start":121,"line_end":121,"column_start":1,"column_end":63}},{"value":"/     // Or:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134763,"byte_end":134777,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/     stmt.execute(&[(\":key\", &100), (\":val\", &200)])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134778,"byte_end":134835,"line_start":123,"line_end":123,"column_start":1,"column_end":58}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134836,"byte_end":134850,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134851,"byte_end":134856,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134857,"byte_end":134864,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134865,"byte_end":134868,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ## No parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134869,"byte_end":134889,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134890,"byte_end":134893,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ You can just use an empty array literal for no params. The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134894,"byte_end":134956,"line_start":130,"line_end":130,"column_start":1,"column_end":63}},{"value":"/ `rusqlite::NO_PARAMS` constant which was so common in previous versions of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":134957,"byte_end":135035,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ this library is no longer needed (and is now deprecated).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135036,"byte_end":135097,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135098,"byte_end":135101,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ### Example (no parameters)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135102,"byte_end":135133,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135134,"byte_end":135137,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135138,"byte_end":135156,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135157,"byte_end":135206,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/ fn delete_all_users(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135207,"byte_end":135265,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/     // Just use an empty array (e.g. `[]`) for no params.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135266,"byte_end":135327,"line_start":139,"line_end":139,"column_start":1,"column_end":62}},{"value":"/     conn.execute(\"DELETE FROM users\", [])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135328,"byte_end":135375,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135376,"byte_end":135390,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135391,"byte_end":135396,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135397,"byte_end":135404,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135405,"byte_end":135408,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Dynamic parameter list","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135409,"byte_end":135438,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135439,"byte_end":135442,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ If you have a number of parameters which is unknown at compile time (for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135443,"byte_end":135519,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ example, building a dynamic query at runtime), you have two choices:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135520,"byte_end":135592,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135593,"byte_end":135596,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ - Use a `&[&dyn ToSql]`, which is nice if you have one otherwise might be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135597,"byte_end":135674,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/   annoying.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135675,"byte_end":135690,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/ - Use the [`ParamsFromIter`] type. This essentially lets you wrap an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135691,"byte_end":135763,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/   iterator some `T: ToSql` with something that implements `Params`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135764,"byte_end":135835,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135836,"byte_end":135839,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ A lot of the considerations here are similar either way, so you should see","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135840,"byte_end":135918,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ the [`ParamsFromIter`] documentation for more info / examples.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":135919,"byte_end":135985,"line_start":156,"line_end":156,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":136333,"byte_end":136342,"line_start":166,"line_end":166,"column_start":8,"column_end":17},"name":"__bind_in","qualname":"::params::Params::__bind_in","value":"pub fn __bind_in(Self, &mut Statement) -> Result<()>","parent":{"krate":0,"index":480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142253,"byte_end":142267,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"ParamsFromIter","qualname":"::params::ParamsFromIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter type which allows any iterator over [`ToSql`] values to implement\n [`Params`].","sig":null,"attributes":[{"value":"/ Adapter type which allows any iterator over [`ToSql`] values to implement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":138809,"byte_end":138886,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ [`Params`].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":138887,"byte_end":138902,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":138903,"byte_end":138906,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`params_from_iter`] function.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":138907,"byte_end":138971,"line_start":236,"line_end":236,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":138972,"byte_end":138975,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ This can be useful if you have something like an `&[String]` (of unknown","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":138976,"byte_end":139052,"line_start":238,"line_end":238,"column_start":1,"column_end":77}},{"value":"/ length), and you want to use them with an API that wants something","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139053,"byte_end":139123,"line_start":239,"line_end":239,"column_start":1,"column_end":71}},{"value":"/ implementing `Params`. This way, you can avoid having to allocate storage","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139124,"byte_end":139201,"line_start":240,"line_end":240,"column_start":1,"column_end":78}},{"value":"/ for something like a `&[&dyn ToSql]`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139202,"byte_end":139243,"line_start":241,"line_end":241,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139244,"byte_end":139247,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ This essentially is only ever actually needed when dynamically generating","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139248,"byte_end":139325,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ SQL — static SQL (by definition) has the number of parameters known","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139326,"byte_end":139399,"line_start":244,"line_end":244,"column_start":1,"column_end":72}},{"value":"/ statically. As dynamically generating SQL is itself pretty advanced, this","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139400,"byte_end":139477,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ API is itself for advanced use cases (See \"Realistic use case\" in the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139478,"byte_end":139551,"line_start":246,"line_end":246,"column_start":1,"column_end":74}},{"value":"/ examples).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139552,"byte_end":139566,"line_start":247,"line_end":247,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139567,"byte_end":139570,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139571,"byte_end":139584,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139585,"byte_end":139588,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ## Basic usage","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139589,"byte_end":139607,"line_start":251,"line_end":251,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139608,"byte_end":139611,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139612,"byte_end":139630,"line_start":253,"line_end":253,"column_start":1,"column_end":19}},{"value":"/ use rusqlite::{params_from_iter, Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139631,"byte_end":139688,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139689,"byte_end":139724,"line_start":255,"line_end":255,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139725,"byte_end":139728,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn query(conn: &Connection, ids: &BTreeSet<String>) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139729,"byte_end":139800,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/     assert_eq!(ids.len(), 3, \"Unrealistic sample code\");","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139801,"byte_end":139861,"line_start":258,"line_end":258,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139862,"byte_end":139865,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM users WHERE id IN (?, ?, ?)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139866,"byte_end":139948,"line_start":260,"line_end":260,"column_start":1,"column_end":83}},{"value":"/     let _rows = stmt.query(params_from_iter(ids.iter()))?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":139949,"byte_end":140011,"line_start":261,"line_end":261,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140012,"byte_end":140015,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     // use _rows...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140016,"byte_end":140039,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140040,"byte_end":140054,"line_start":264,"line_end":264,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140055,"byte_end":140060,"line_start":265,"line_end":265,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140061,"byte_end":140068,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140069,"byte_end":140072,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ## Realistic use case","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140073,"byte_end":140098,"line_start":268,"line_end":268,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140099,"byte_end":140102,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Here's how you'd use `ParamsFromIter` to call [`Statement::exists`] with a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140103,"byte_end":140181,"line_start":270,"line_end":270,"column_start":1,"column_end":79}},{"value":"/ dynamic number of parameters.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140182,"byte_end":140215,"line_start":271,"line_end":271,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140216,"byte_end":140219,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140220,"byte_end":140238,"line_start":273,"line_end":273,"column_start":1,"column_end":19}},{"value":"/ use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140239,"byte_end":140278,"line_start":274,"line_end":274,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140279,"byte_end":140282,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ pub fn any_active_users(conn: &Connection, usernames: &[String]) -> Result<bool> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140283,"byte_end":140369,"line_start":276,"line_end":276,"column_start":1,"column_end":87}},{"value":"/     if usernames.is_empty() {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140370,"byte_end":140403,"line_start":277,"line_end":277,"column_start":1,"column_end":34}},{"value":"/         return Ok(false);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140404,"byte_end":140433,"line_start":278,"line_end":278,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140434,"byte_end":140443,"line_start":279,"line_end":279,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140444,"byte_end":140447,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/     // Note: `repeat_vars` never returns anything attacker-controlled, so","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140448,"byte_end":140525,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/     // it's fine to use it in a dynamically-built SQL string.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140526,"byte_end":140591,"line_start":282,"line_end":282,"column_start":1,"column_end":66}},{"value":"/     let vars = repeat_vars(usernames.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140592,"byte_end":140640,"line_start":283,"line_end":283,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140641,"byte_end":140644,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/     let sql = format!(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140645,"byte_end":140671,"line_start":285,"line_end":285,"column_start":1,"column_end":27}},{"value":"/         // In practice this would probably be better as an `EXISTS` query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140672,"byte_end":140750,"line_start":286,"line_end":286,"column_start":1,"column_end":79}},{"value":"/         \"SELECT 1 FROM user WHERE is_active AND name IN ({}) LIMIT 1\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140751,"byte_end":140825,"line_start":287,"line_end":287,"column_start":1,"column_end":75}},{"value":"/         vars,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140826,"byte_end":140843,"line_start":288,"line_end":288,"column_start":1,"column_end":18}},{"value":"/     );","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140844,"byte_end":140854,"line_start":289,"line_end":289,"column_start":1,"column_end":11}},{"value":"/     let mut stmt = conn.prepare(&sql)?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140855,"byte_end":140898,"line_start":290,"line_end":290,"column_start":1,"column_end":44}},{"value":"/     stmt.exists(rusqlite::params_from_iter(usernames))","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140899,"byte_end":140957,"line_start":291,"line_end":291,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140958,"byte_end":140963,"line_start":292,"line_end":292,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140964,"byte_end":140967,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ // Helper function to return a comma-separated sequence of `?`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":140968,"byte_end":141035,"line_start":294,"line_end":294,"column_start":1,"column_end":68}},{"value":"/ // - `repeat_vars(0) => panic!(...)`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141036,"byte_end":141076,"line_start":295,"line_end":295,"column_start":1,"column_end":41}},{"value":"/ // - `repeat_vars(1) => \"?\"`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141077,"byte_end":141109,"line_start":296,"line_end":296,"column_start":1,"column_end":33}},{"value":"/ // - `repeat_vars(2) => \"?,?\"`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141110,"byte_end":141144,"line_start":297,"line_end":297,"column_start":1,"column_end":35}},{"value":"/ // - `repeat_vars(3) => \"?,?,?\"`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141145,"byte_end":141181,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ // - ...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141182,"byte_end":141194,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"/ fn repeat_vars(count: usize) -> String {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141195,"byte_end":141239,"line_start":300,"line_end":300,"column_start":1,"column_end":45}},{"value":"/     assert_ne!(count, 0);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141240,"byte_end":141269,"line_start":301,"line_end":301,"column_start":1,"column_end":30}},{"value":"/     let mut s = \"?,\".repeat(count);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141270,"byte_end":141309,"line_start":302,"line_end":302,"column_start":1,"column_end":40}},{"value":"/     // Remove trailing comma","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141310,"byte_end":141342,"line_start":303,"line_end":303,"column_start":1,"column_end":33}},{"value":"/     s.pop();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141343,"byte_end":141359,"line_start":304,"line_end":304,"column_start":1,"column_end":17}},{"value":"/     s","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141360,"byte_end":141369,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141370,"byte_end":141375,"line_start":306,"line_end":306,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141376,"byte_end":141383,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141384,"byte_end":141387,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ That is fairly complex, and even so would need even more work to be fully","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141388,"byte_end":141465,"line_start":309,"line_end":309,"column_start":1,"column_end":78}},{"value":"/ production-ready:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141466,"byte_end":141487,"line_start":310,"line_end":310,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141488,"byte_end":141491,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ - production code should ensure `usernames` isn't so large that it will","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141492,"byte_end":141567,"line_start":312,"line_end":312,"column_start":1,"column_end":76}},{"value":"/   surpass [`conn.limit(Limit::SQLITE_LIMIT_VARIABLE_NUMBER)`][limits]),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141568,"byte_end":141643,"line_start":313,"line_end":313,"column_start":1,"column_end":76}},{"value":"/   chunking if too large. (Note that the limits api requires rusqlite to have","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141644,"byte_end":141724,"line_start":314,"line_end":314,"column_start":1,"column_end":81}},{"value":"/   the \"limits\" feature).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141725,"byte_end":141753,"line_start":315,"line_end":315,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141754,"byte_end":141757,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ - `repeat_vars` can be implemented in a way that avoids needing to allocate","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141758,"byte_end":141837,"line_start":317,"line_end":317,"column_start":1,"column_end":80}},{"value":"/   a String.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141838,"byte_end":141853,"line_start":318,"line_end":318,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141854,"byte_end":141857,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ - Etc...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141858,"byte_end":141870,"line_start":320,"line_end":320,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141871,"byte_end":141874,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [limits]: crate::Connection::limit","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141875,"byte_end":141913,"line_start":322,"line_end":322,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141914,"byte_end":141917,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ This complexity reflects the fact that `ParamsFromIter` is mainly intended","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141918,"byte_end":141996,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ for advanced use cases — most of the time you should know how many","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":141997,"byte_end":142069,"line_start":325,"line_end":325,"column_start":1,"column_end":71}},{"value":"/ parameters you have statically (and if you don't, you're either doing","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142070,"byte_end":142143,"line_start":326,"line_end":326,"column_start":1,"column_end":74}},{"value":"/ something tricky, or should take a moment to think about the design).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142144,"byte_end":142217,"line_start":327,"line_end":327,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142380,"byte_end":142396,"line_start":334,"line_end":334,"column_start":8,"column_end":24},"name":"params_from_iter","qualname":"::params::params_from_iter","value":"pub fn params_from_iter<I>(I) -> ParamsFromIter<I> where I: IntoIterator,\nI::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Constructor function for a [`ParamsFromIter`]. See its documentation for\n more.\n","sig":null,"attributes":[{"value":"/ Constructor function for a [`ParamsFromIter`]. See its documentation for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142276,"byte_end":142352,"line_start":331,"line_end":331,"column_start":1,"column_end":77}},{"value":"/ more.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142353,"byte_end":142362,"line_start":332,"line_end":332,"column_start":1,"column_end":10}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142363,"byte_end":142372,"line_start":333,"line_end":333,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147319,"byte_end":147337,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"pragma_query_value","qualname":"<Connection>::pragma_query_value","value":"pub fn pragma_query_value<T, F>(&Self, Option<DatabaseName>, &str, F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current value of `pragma_name`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":146983,"byte_end":147028,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147033,"byte_end":147036,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return multiple rows/values which cannot be retrieved","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147041,"byte_end":147116,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ with this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147121,"byte_end":147142,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147147,"byte_end":147150,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147155,"byte_end":147251,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ `SELECT user_version FROM pragma_user_version;`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147256,"byte_end":147307,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147883,"byte_end":147895,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"pragma_query","qualname":"<Connection>::pragma_query","value":"pub fn pragma_query<F>(&Self, Option<DatabaseName>, &str, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current rows/values of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current rows/values of `pragma_name`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147664,"byte_end":147715,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147720,"byte_end":147723,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147728,"byte_end":147824,"line_start":184,"line_end":184,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_collation_list;`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":147829,"byte_end":147871,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148850,"byte_end":148856,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"pragma","qualname":"<Connection>::pragma","value":"pub fn pragma<F, V>(&Self, Option<DatabaseName>, &str, V, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>, V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Query the current value(s) of `pragma_name` associated to\n `pragma_value`.","sig":null,"attributes":[{"value":"/ Query the current value(s) of `pragma_name` associated to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148404,"byte_end":148465,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ `pragma_value`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148470,"byte_end":148489,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148494,"byte_end":148497,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method can be used with query-only pragmas which need an argument","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148502,"byte_end":148576,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ (e.g. `table_info('one_tbl')`) or pragmas which returns value(s)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148581,"byte_end":148649,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ (e.g. `integrity_check`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148654,"byte_end":148683,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148688,"byte_end":148691,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148696,"byte_end":148792,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_table_info(?);`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":148797,"byte_end":148838,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":149837,"byte_end":149850,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"pragma_update","qualname":"<Connection>::pragma_update","value":"pub fn pragma_update<V>(&Self, Option<DatabaseName>, &str, V) -> Result<()>\nwhere V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name`.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":149677,"byte_end":149714,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":149719,"byte_end":149722,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return the updated value which cannot be retrieved","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":149727,"byte_end":149799,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ with this method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":149804,"byte_end":149825,"line_start":246,"line_end":246,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":150554,"byte_end":150577,"line_start":269,"line_end":269,"column_start":12,"column_end":35},"name":"pragma_update_and_check","qualname":"<Connection>::pragma_update_and_check","value":"pub fn pragma_update_and_check<F, T,\n                               V>(&Self, Option<DatabaseName>, &str, V, F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>, V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name` and return the updated value.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name` and return the updated value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":150403,"byte_end":150469,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":150474,"byte_end":150477,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Only few pragmas automatically return the updated value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":150482,"byte_end":150542,"line_start":268,"line_end":268,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":162682,"byte_end":162686,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An handle for the resulting rows of a query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":162557,"byte_end":162605,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"must_use = \"Rows is lazy and will do nothing unless consumed\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":162606,"byte_end":162670,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163716,"byte_end":163720,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows>::next","value":"pub fn next(&mut Self) -> Result<Option<&Row>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Ok(Some(Row))` if\n there is another row, `Err(...)` if there was an error\n getting the next row, and `Ok(None)` if all rows have been retrieved.","sig":null,"attributes":[{"value":"/ Attempt to get the next row from the query. Returns `Ok(Some(Row))` if","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":162942,"byte_end":163016,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ there is another row, `Err(...)` if there was an error","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163021,"byte_end":163079,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/ getting the next row, and `Ok(None)` if all rows have been retrieved.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163084,"byte_end":163157,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163162,"byte_end":163165,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163170,"byte_end":163181,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163186,"byte_end":163189,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This interface is not compatible with Rust's `Iterator` trait, because","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163194,"byte_end":163268,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ the lifetime of the returned row is tied to the lifetime of `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163273,"byte_end":163344,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ This is a fallible \"streaming iterator\". For a more natural interface,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163349,"byte_end":163423,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ consider using [`query_map`](crate::Statement::query_map) or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163428,"byte_end":163492,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/ [`query_and_then`](crate::Statement::query_and_then) instead, which","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163497,"byte_end":163568,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ return types that implement `Iterator`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163573,"byte_end":163616,"line_start":34,"line_end":34,"column_start":5,"column_end":48}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163621,"byte_end":163661,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163695,"byte_end":163704,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164285,"byte_end":164288,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"map","qualname":"<Rows>::map","value":"pub fn map<F, B>(Self, F) -> Map where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`Map`], which\n implements `FallibleIterator`.\n ```rust,no_run\n use fallible_iterator::FallibleIterator;\n # use rusqlite::{Result, Statement};\n fn query(stmt: &mut Statement) -> Result<Vec<i64>> {\n     let rows = stmt.query([])?;\n     rows.map(|r| r.get(0)).collect()\n }\n ```\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`Map`], which","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163827,"byte_end":163886,"line_start":42,"line_end":42,"column_start":5,"column_end":64}},{"value":"/ implements `FallibleIterator`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163891,"byte_end":163925,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163930,"byte_end":163948,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":163953,"byte_end":163997,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/ # use rusqlite::{Result, Statement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164002,"byte_end":164042,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ fn query(stmt: &mut Statement) -> Result<Vec<i64>> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164047,"byte_end":164103,"line_start":47,"line_end":47,"column_start":5,"column_end":61}},{"value":"/     let rows = stmt.query([])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164108,"byte_end":164143,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/     rows.map(|r| r.get(0)).collect()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164148,"byte_end":164188,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164193,"byte_end":164198,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164203,"byte_end":164210,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164264,"byte_end":164273,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164545,"byte_end":164551,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"mapped","qualname":"<Rows>::mapped","value":"pub fn mapped<F, B>(Self, F) -> MappedRows where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`MappedRows`], which\n implements `Iterator`.\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`MappedRows`], which","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164422,"byte_end":164488,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ implements `Iterator`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164493,"byte_end":164519,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164524,"byte_end":164533,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164902,"byte_end":164910,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Rows>::and_then","value":"pub fn and_then<F, T, E>(Self, F) -> AndThenRows where F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows` with a fallible function, converting it to a\n [`AndThenRows`], which implements `Iterator` (instead of\n `FallibleStreamingIterator`).\n","sig":null,"attributes":[{"value":"/ Map over this `Rows` with a fallible function, converting it to a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164704,"byte_end":164773,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ [`AndThenRows`], which implements `Iterator` (instead of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164778,"byte_end":164838,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/ `FallibleStreamingIterator`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164843,"byte_end":164876,"line_start":73,"line_end":73,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":164881,"byte_end":164890,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165126,"byte_end":165132,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Rows>::as_ref","value":"pub fn as_ref(&Self) -> Option<&Statement>","parent":null,"children":[],"decl_id":null,"docs":" Give access to the underlying statement\n","sig":null,"attributes":[{"value":"/ Give access to the underlying statement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165071,"byte_end":165114,"line_start":82,"line_end":82,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":675},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165871,"byte_end":165874,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"Map","qualname":"::row::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"decl_id":null,"docs":" `F` is used to transform the _streaming_ iterator into a _fallible_\n iterator.\n","sig":null,"attributes":[{"value":"/ `F` is used to transform the _streaming_ iterator into a _fallible_","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165708,"byte_end":165779,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ iterator.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165780,"byte_end":165793,"line_start":114,"line_end":114,"column_start":1,"column_end":14}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165794,"byte_end":165859,"line_start":115,"line_end":115,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166471,"byte_end":166481,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166245,"byte_end":166303,"line_start":137,"line_end":137,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166304,"byte_end":166307,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `F` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166308,"byte_end":166379,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/ iterator.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166380,"byte_end":166393,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166394,"byte_end":166459,"line_start":141,"line_end":141,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":167048,"byte_end":167059,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query, with an Error type","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166868,"byte_end":166945,"line_start":163,"line_end":163,"column_start":1,"column_end":78}},{"value":"/ unifying with Error.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166946,"byte_end":166970,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166971,"byte_end":167036,"line_start":165,"line_end":165,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169066,"byte_end":169069,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":717}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[{"value":"/ A single result row of a query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169019,"byte_end":169054,"line_start":242,"line_end":242,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169638,"byte_end":169648,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"get_unwrap","qualname":"<Row>::get_unwrap","value":"pub fn get_unwrap<I: RowIndex, T: FromSql>(&Self, I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169157,"byte_end":169216,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169221,"byte_end":169224,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169229,"byte_end":169243,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169248,"byte_end":169251,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Panics if calling [`row.get(idx)`](Row::get) would return an error,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169256,"byte_end":169327,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ including:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169332,"byte_end":169346,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169351,"byte_end":169354,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ * If the underlying SQLite column type is not a valid type as a source","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169359,"byte_end":169433,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/   for `T`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169438,"byte_end":169451,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ * If the underlying SQLite integral value is outside the range","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169456,"byte_end":169522,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/   representable by `T`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169527,"byte_end":169553,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ * If `idx` is outside the range of columns in the returned query","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169558,"byte_end":169626,"line_start":259,"line_end":259,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170444,"byte_end":170447,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"get","qualname":"<Row>::get","value":"pub fn get<I: RowIndex, T: FromSql>(&Self, I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169738,"byte_end":169797,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169802,"byte_end":169805,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169810,"byte_end":169824,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169829,"byte_end":169832,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnType` if the underlying SQLite column","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169837,"byte_end":169910,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ type is not a valid type as a source for `T`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169915,"byte_end":169964,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169969,"byte_end":169972,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169977,"byte_end":170049,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170054,"byte_end":170084,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170089,"byte_end":170092,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170097,"byte_end":170169,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170174,"byte_end":170196,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170201,"byte_end":170204,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the result type is i128 (which requires the `i128_blob` feature to be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170209,"byte_end":170285,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ enabled), and the underlying SQLite column is a blob whose size is not","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170290,"byte_end":170364,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ 16 bytes, `Error::InvalidColumnType` will also be returned.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":170369,"byte_end":170432,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172303,"byte_end":172310,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Row>::get_ref","value":"pub fn get_ref<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171580,"byte_end":171655,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171660,"byte_end":171718,"line_start":309,"line_end":309,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171723,"byte_end":171726,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171731,"byte_end":171806,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171811,"byte_end":171883,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ it can be somewhat difficult to use, and most callers will be better","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171888,"byte_end":171960,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/ served by [`get`](Row::get) or [`get_unwrap`](Row::get_unwrap).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":171965,"byte_end":172032,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172037,"byte_end":172040,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172045,"byte_end":172059,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172064,"byte_end":172067,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172072,"byte_end":172144,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172149,"byte_end":172179,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172184,"byte_end":172187,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172192,"byte_end":172264,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172269,"byte_end":172291,"line_start":322,"line_end":322,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173416,"byte_end":173430,"line_start":347,"line_end":347,"column_start":12,"column_end":26},"name":"get_ref_unwrap","qualname":"<Row>::get_ref_unwrap","value":"pub fn get_ref_unwrap<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172681,"byte_end":172756,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172761,"byte_end":172819,"line_start":333,"line_end":333,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172824,"byte_end":172827,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172832,"byte_end":172907,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172912,"byte_end":172984,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ it can be difficult to use, and most callers will be better served by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":172989,"byte_end":173062,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ [`get`](Row::get) or [`get_unwrap`](Row::get_unwrap).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173067,"byte_end":173124,"line_start":338,"line_end":338,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173129,"byte_end":173132,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173137,"byte_end":173151,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173156,"byte_end":173159,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Panics if calling [`row.get_ref(idx)`](Row::get_ref) would return an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173164,"byte_end":173236,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ error, including:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173241,"byte_end":173262,"line_start":343,"line_end":343,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173267,"byte_end":173270,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ * If `idx` is outside the range of columns in the returned query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173275,"byte_end":173344,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ * If `idx` is not a valid column name for this row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173349,"byte_end":173404,"line_start":346,"line_end":346,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173651,"byte_end":173666,"line_start":354,"line_end":354,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row>::get_raw_checked","value":"pub fn get_raw_checked<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [`get_ref`](Row::get_ref).\n","sig":null,"attributes":[{"value":"/ Renamed to [`get_ref`](Row::get_ref).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173523,"byte_end":173564,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"deprecated = \"Use [`get_ref`](Row::get_ref) instead.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173569,"byte_end":173625,"line_start":352,"line_end":352,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173630,"byte_end":173639,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173914,"byte_end":173921,"line_start":361,"line_end":361,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row>::get_raw","value":"pub fn get_raw<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [`get_ref_unwrap`](Row::get_ref_unwrap).\n","sig":null,"attributes":[{"value":"/ Renamed to [`get_ref_unwrap`](Row::get_ref_unwrap).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173758,"byte_end":173813,"line_start":358,"line_end":358,"column_start":5,"column_end":60}},{"value":"deprecated = \"Use [`get_ref_unwrap`](Row::get_ref_unwrap) instead.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173818,"byte_end":173888,"line_start":359,"line_end":359,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":173893,"byte_end":173902,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":739},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174289,"byte_end":174295,"line_start":375,"line_end":375,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::row::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" This trait exists just to ensure that the only impls of `trait Params`\n that are allowed are ones in this crate.\n","sig":null,"attributes":[{"value":"/ This trait exists just to ensure that the only impls of `trait Params`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174151,"byte_end":174225,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ that are allowed are ones in this crate.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174230,"byte_end":174274,"line_start":374,"line_end":374,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":742},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174495,"byte_end":174503,"line_start":383,"line_end":383,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex: sealed::Sealed","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.","sig":null,"attributes":[{"value":"/ A trait implemented by types that can index into columns of a row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174359,"byte_end":174429,"line_start":380,"line_end":380,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174430,"byte_end":174433,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ It is only implemented for `usize` and `&str`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174434,"byte_end":174484,"line_start":382,"line_end":382,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174626,"byte_end":174629,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"pub fn idx(&Self, &Statement) -> Result<usize>","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[{"value":"/ Returns the index of the appropriate column, or `None` if no such","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174526,"byte_end":174595,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ column exists.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174600,"byte_end":174618,"line_start":385,"line_end":385,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180196,"byte_end":180205,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[{"value":"/ A prepared statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180159,"byte_end":180184,"line_start":17,"line_end":17,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182725,"byte_end":182732,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement>::execute","value":"pub fn execute<P: Params>(&mut Self, P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[{"value":"/ Execute the prepared statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180307,"byte_end":180342,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180347,"byte_end":180350,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180355,"byte_end":180430,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180435,"byte_end":180471,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180476,"byte_end":180479,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180484,"byte_end":180498,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180503,"byte_end":180506,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180511,"byte_end":180549,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180554,"byte_end":180557,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180562,"byte_end":180580,"line_start":33,"line_end":33,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180585,"byte_end":180634,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180639,"byte_end":180692,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"/     let mut stmt = conn.prepare(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180697,"byte_end":180778,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/     // The `rusqlite::params!` macro is mostly useful when the parameters do not","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180783,"byte_end":180867,"line_start":37,"line_end":37,"column_start":5,"column_end":89}},{"value":"/     // all have the same type, or if there are more than 32 parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180872,"byte_end":180946,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/     // at once.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180951,"byte_end":180970,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/     stmt.execute(params![1i32])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180975,"byte_end":181012,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/     // However, it's not required, many cases are fine as:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181017,"byte_end":181079,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/     stmt.execute(&[&2i32])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181084,"byte_end":181116,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/     // Or even:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181121,"byte_end":181140,"line_start":43,"line_end":43,"column_start":5,"column_end":24}},{"value":"/     stmt.execute([2i32])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181145,"byte_end":181175,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181180,"byte_end":181194,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181199,"byte_end":181204,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181209,"byte_end":181216,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181221,"byte_end":181224,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ### Use with named parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181229,"byte_end":181262,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181267,"byte_end":181270,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181275,"byte_end":181293,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181298,"byte_end":181353,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/ fn insert(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181358,"byte_end":181406,"line_start":53,"line_end":53,"column_start":5,"column_end":53}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (key, value) VALUES (:key, :value)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181411,"byte_end":181503,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/     // The `rusqlite::named_params!` macro (like `params!`) is useful for heterogeneous","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181508,"byte_end":181599,"line_start":55,"line_end":55,"column_start":5,"column_end":96}},{"value":"/     // sets of parameters (where all parameters are not the same type), or for queries","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181604,"byte_end":181694,"line_start":56,"line_end":56,"column_start":5,"column_end":95}},{"value":"/     // with many (more than 32) statically known parameters.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181699,"byte_end":181763,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/     stmt.execute(named_params! { \":key\": \"one\", \":val\": 2 })?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181768,"byte_end":181834,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/     // However, named parameters can also be passed like:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181839,"byte_end":181900,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/     stmt.execute(&[(\":key\", \"three\"), (\":val\", \"four\")])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181905,"byte_end":181967,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     // Or even: (note that a &T is required for the value type, currently)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":181972,"byte_end":182050,"line_start":61,"line_end":61,"column_start":5,"column_end":83}},{"value":"/     stmt.execute(&[(\":key\", &100), (\":val\", &200)])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182055,"byte_end":182112,"line_start":62,"line_end":62,"column_start":5,"column_end":62}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182117,"byte_end":182131,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182136,"byte_end":182141,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182146,"byte_end":182153,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182158,"byte_end":182161,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ### Use without parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182166,"byte_end":182196,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182201,"byte_end":182204,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182209,"byte_end":182227,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182232,"byte_end":182281,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/ fn delete_all(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182286,"byte_end":182338,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/     let mut stmt = conn.prepare(\"DELETE FROM users\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182343,"byte_end":182401,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/     stmt.execute([])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182406,"byte_end":182432,"line_start":73,"line_end":73,"column_start":5,"column_end":31}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182437,"byte_end":182451,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182456,"byte_end":182461,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182466,"byte_end":182473,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182478,"byte_end":182481,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182486,"byte_end":182499,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182504,"byte_end":182507,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182512,"byte_end":182585,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182590,"byte_end":182661,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182666,"byte_end":182699,"line_start":82,"line_end":82,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182704,"byte_end":182713,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183783,"byte_end":183796,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement>::execute_named","value":"pub fn execute_named(&mut Self, &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s).","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182874,"byte_end":182933,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182938,"byte_end":182941,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::execute`],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":182946,"byte_end":183019,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183024,"byte_end":183073,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183078,"byte_end":183081,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183086,"byte_end":183160,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183165,"byte_end":183237,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `execute_named`, or `NULL` if they have never","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183242,"byte_end":183315,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ been bound.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183320,"byte_end":183335,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183340,"byte_end":183343,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183348,"byte_end":183423,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183428,"byte_end":183464,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183469,"byte_end":183472,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183477,"byte_end":183490,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183495,"byte_end":183498,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183503,"byte_end":183576,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183581,"byte_end":183652,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183657,"byte_end":183690,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"deprecated = \"You can use `execute` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183695,"byte_end":183757,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183762,"byte_end":183771,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184462,"byte_end":184468,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement>::insert","value":"pub fn insert<P: Params>(&mut Self, P) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[{"value":"/ Execute an INSERT and return the ROWID.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183898,"byte_end":183941,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183946,"byte_end":183949,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183954,"byte_end":183964,"line_start":115,"line_end":115,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183969,"byte_end":183972,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":183977,"byte_end":184026,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/ [`execute()`](Statement::execute) intended for queries that insert a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184031,"byte_end":184103,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ single item. It is possible to misuse this function in a way that it","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184108,"byte_end":184180,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ cannot detect, such as by calling it on a statement which _updates_","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184185,"byte_end":184256,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ a single item rather than inserting one. Please don't do that.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184261,"byte_end":184327,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184332,"byte_end":184335,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184340,"byte_end":184353,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184358,"byte_end":184361,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if no row is inserted or many rows are inserted.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184366,"byte_end":184436,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184441,"byte_end":184450,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187664,"byte_end":187669,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement>::query","value":"pub fn query<P: Params>(&mut Self, P) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement, returning a handle to the resulting","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184721,"byte_end":184792,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ rows.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184797,"byte_end":184806,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184811,"byte_end":184814,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Due to lifetime restrictions, the rows handle returned by `query` does","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184819,"byte_end":184893,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ not implement the `Iterator` trait. Consider using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184898,"byte_end":184952,"line_start":139,"line_end":139,"column_start":5,"column_end":59}},{"value":"/ [`query_map`](Statement::query_map) or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":184957,"byte_end":184999,"line_start":140,"line_end":140,"column_start":5,"column_end":47}},{"value":"/ [`query_and_then`](Statement::query_and_then) instead, which do.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185004,"byte_end":185072,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185077,"byte_end":185080,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185085,"byte_end":185099,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185104,"byte_end":185107,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ### Use without parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185112,"byte_end":185142,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185147,"byte_end":185150,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185155,"byte_end":185173,"line_start":147,"line_end":147,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185178,"byte_end":185219,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185224,"byte_end":185284,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185289,"byte_end":185353,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/     let mut rows = stmt.query([])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185358,"byte_end":185397,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185402,"byte_end":185405,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185410,"byte_end":185445,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185450,"byte_end":185494,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/         names.push(row.get(0)?);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185499,"byte_end":185535,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185540,"byte_end":185549,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185554,"byte_end":185557,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185562,"byte_end":185579,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185584,"byte_end":185589,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185594,"byte_end":185601,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185606,"byte_end":185609,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185614,"byte_end":185652,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185657,"byte_end":185660,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185665,"byte_end":185683,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185688,"byte_end":185729,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection, name: &str) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185734,"byte_end":185793,"line_start":166,"line_end":166,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = ?\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185798,"byte_end":185872,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/     let mut rows = stmt.query(rusqlite::params![name])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185877,"byte_end":185937,"line_start":168,"line_end":168,"column_start":5,"column_end":65}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185942,"byte_end":185986,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":185991,"byte_end":186009,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186014,"byte_end":186023,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186028,"byte_end":186042,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186047,"byte_end":186052,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186057,"byte_end":186064,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186069,"byte_end":186072,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Or, equivalently (but without the [`params!`] macro).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186077,"byte_end":186134,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186139,"byte_end":186142,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186147,"byte_end":186165,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186170,"byte_end":186211,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection, name: &str) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186216,"byte_end":186275,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = ?\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186280,"byte_end":186354,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/     let mut rows = stmt.query([name])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186359,"byte_end":186402,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186407,"byte_end":186451,"line_start":183,"line_end":183,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186456,"byte_end":186474,"line_start":184,"line_end":184,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186479,"byte_end":186488,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186493,"byte_end":186507,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186512,"byte_end":186517,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186522,"byte_end":186529,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186534,"byte_end":186537,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ### Use with named parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186542,"byte_end":186575,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186580,"byte_end":186583,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186588,"byte_end":186606,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186611,"byte_end":186652,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186657,"byte_end":186704,"line_start":194,"line_end":194,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186709,"byte_end":186787,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query(&[(\":name\", \"one\")])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186792,"byte_end":186848,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186853,"byte_end":186897,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186902,"byte_end":186920,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186925,"byte_end":186934,"line_start":199,"line_end":199,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186939,"byte_end":186953,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186958,"byte_end":186963,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186968,"byte_end":186975,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186980,"byte_end":186983,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params!` macro is provided for syntactic convenience,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":186988,"byte_end":187062,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187067,"byte_end":187121,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187126,"byte_end":187129,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187134,"byte_end":187152,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187157,"byte_end":187212,"line_start":208,"line_end":208,"column_start":5,"column_end":60}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187217,"byte_end":187264,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187269,"byte_end":187347,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query(named_params! { \":name\": \"one\" })?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187352,"byte_end":187421,"line_start":211,"line_end":211,"column_start":5,"column_end":74}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187426,"byte_end":187470,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187475,"byte_end":187493,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187498,"byte_end":187507,"line_start":214,"line_end":214,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187512,"byte_end":187526,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187531,"byte_end":187536,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187541,"byte_end":187548,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187553,"byte_end":187556,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187561,"byte_end":187575,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187580,"byte_end":187583,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187588,"byte_end":187638,"line_start":221,"line_end":221,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187643,"byte_end":187652,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188471,"byte_end":188482,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement>::query_named","value":"pub fn query_named(&mut Self, &[(&str, &dyn ToSql)]) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187797,"byte_end":187868,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ handle for the resulting rows.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187873,"byte_end":187907,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187912,"byte_end":187915,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::query`],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187920,"byte_end":187991,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":187996,"byte_end":188045,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188050,"byte_end":188053,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188058,"byte_end":188132,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188137,"byte_end":188209,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `query_named`, or `NULL` if they have never been","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188214,"byte_end":188290,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ bound.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188295,"byte_end":188305,"line_start":237,"line_end":237,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188310,"byte_end":188313,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188318,"byte_end":188331,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188336,"byte_end":188339,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188344,"byte_end":188394,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188399,"byte_end":188459,"line_start":242,"line_end":242,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190077,"byte_end":190086,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement>::query_map","value":"pub fn query_map<T, P, F>(&mut Self, P, F) -> Result<MappedRows<, F>> where\nP: Params, F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188585,"byte_end":188659,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ rows, returning an iterator over the mapped function results.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188664,"byte_end":188729,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188734,"byte_end":188737,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `f` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188742,"byte_end":188813,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ iterator.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188818,"byte_end":188831,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188836,"byte_end":188839,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `stmt.query(params)?.mapped(f)`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188844,"byte_end":188902,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188907,"byte_end":188910,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188915,"byte_end":188929,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188934,"byte_end":188937,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional params","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188942,"byte_end":188976,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188981,"byte_end":188984,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":188989,"byte_end":189007,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189012,"byte_end":189053,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189058,"byte_end":189118,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189123,"byte_end":189187,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/     let rows = stmt.query_map([], |row| row.get(0))?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189192,"byte_end":189249,"line_start":263,"line_end":263,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189254,"byte_end":189257,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189262,"byte_end":189297,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189302,"byte_end":189335,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189340,"byte_end":189377,"line_start":267,"line_end":267,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189382,"byte_end":189391,"line_start":268,"line_end":268,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189396,"byte_end":189399,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189404,"byte_end":189421,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189426,"byte_end":189431,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189436,"byte_end":189443,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189448,"byte_end":189451,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ### Use with named params","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189456,"byte_end":189485,"line_start":274,"line_end":274,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189490,"byte_end":189493,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189498,"byte_end":189516,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189521,"byte_end":189562,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189567,"byte_end":189627,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189632,"byte_end":189711,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_map(&[(\":id\", &\"one\")], |row| row.get(0))?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189716,"byte_end":189789,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189794,"byte_end":189797,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189802,"byte_end":189837,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189842,"byte_end":189875,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189880,"byte_end":189917,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189922,"byte_end":189931,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189936,"byte_end":189939,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189944,"byte_end":189961,"line_start":287,"line_end":287,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189966,"byte_end":189971,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189976,"byte_end":189983,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":189988,"byte_end":190002,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190007,"byte_end":190010,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190015,"byte_end":190065,"line_start":292,"line_end":292,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191137,"byte_end":191152,"line_start":320,"line_end":320,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement>::query_map_named","value":"pub fn query_map_named<T, F>(&mut Self, &[(&str, &dyn ToSql)], F)\n-> Result<MappedRows<, F>> where F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190294,"byte_end":190366,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190371,"byte_end":190440,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ query's rows.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190445,"byte_end":190462,"line_start":303,"line_end":303,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190467,"byte_end":190470,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::query_map`],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190475,"byte_end":190550,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190555,"byte_end":190604,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190609,"byte_end":190612,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190617,"byte_end":190674,"line_start":308,"line_end":308,"column_start":5,"column_end":62}},{"value":"/ are not included in `params`, they will continue to use the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190679,"byte_end":190742,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ most-recently bound value from a previous call to `query_named`,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190747,"byte_end":190815,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ or `NULL` if they have never been bound.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190820,"byte_end":190864,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190869,"byte_end":190872,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ `f` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190877,"byte_end":190948,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ iterator.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190953,"byte_end":190966,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190971,"byte_end":190974,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190979,"byte_end":190993,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":190998,"byte_end":191001,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191006,"byte_end":191056,"line_start":318,"line_end":318,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query_map` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191061,"byte_end":191125,"line_start":319,"line_end":319,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193155,"byte_end":193169,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement>::query_and_then","value":"pub fn query_and_then<T, E, P, F>(&mut Self, P, F) -> Result<AndThenRows<, F>>\nwhere P: Params, E: convert::From<Error>, F: FnMut(&Row) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191369,"byte_end":191443,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ rows, where the function returns a `Result` with `Error` type","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191448,"byte_end":191513,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/ implementing `std::convert::From<Error>` (so errors can be unified).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191518,"byte_end":191590,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191595,"byte_end":191598,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `stmt.query(params)?.and_then(f)`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191603,"byte_end":191663,"line_start":335,"line_end":335,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191668,"byte_end":191671,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191676,"byte_end":191690,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191695,"byte_end":191698,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ### Use with named params","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191703,"byte_end":191732,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191737,"byte_end":191740,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191745,"byte_end":191763,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191768,"byte_end":191809,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"/ struct Person {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191814,"byte_end":191833,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191838,"byte_end":191859,"line_start":344,"line_end":344,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191864,"byte_end":191870,"line_start":345,"line_end":345,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191875,"byte_end":191878,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn name_to_person(name: String) -> Result<Person> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191883,"byte_end":191938,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/     // ... check for valid name","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191943,"byte_end":191978,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     Ok(Person { name })","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":191983,"byte_end":192010,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192015,"byte_end":192020,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192025,"byte_end":192028,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<Person>> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192033,"byte_end":192093,"line_start":352,"line_end":352,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192098,"byte_end":192177,"line_start":353,"line_end":353,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_and_then(&[(\":id\", \"one\")], |row| name_to_person(row.get(0)?))?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192182,"byte_end":192276,"line_start":354,"line_end":354,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192281,"byte_end":192284,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192289,"byte_end":192326,"line_start":356,"line_end":356,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192331,"byte_end":192366,"line_start":357,"line_end":357,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192371,"byte_end":192412,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192417,"byte_end":192426,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192431,"byte_end":192434,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192439,"byte_end":192458,"line_start":361,"line_end":361,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192463,"byte_end":192468,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192473,"byte_end":192480,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192485,"byte_end":192488,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional params","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192493,"byte_end":192527,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192532,"byte_end":192535,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192540,"byte_end":192558,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192563,"byte_end":192604,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192609,"byte_end":192669,"line_start":369,"line_end":369,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = ?\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192674,"byte_end":192751,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/     let rows = stmt.query_and_then([\"one\"], |row| row.get::<_, String>(0))?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192756,"byte_end":192836,"line_start":371,"line_end":371,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192841,"byte_end":192844,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192849,"byte_end":192886,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192891,"byte_end":192926,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192931,"byte_end":192972,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192977,"byte_end":192986,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192991,"byte_end":192994,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":192999,"byte_end":193018,"line_start":378,"line_end":378,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193023,"byte_end":193028,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193033,"byte_end":193040,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193045,"byte_end":193048,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193053,"byte_end":193066,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193071,"byte_end":193074,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193079,"byte_end":193129,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193134,"byte_end":193143,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194178,"byte_end":194198,"line_start":412,"line_end":412,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement>::query_and_then_named","value":"pub fn query_and_then_named<T, E, F>(&mut Self, &[(&str, &dyn ToSql)], F)\n-> Result<AndThenRows<, F>> where E: convert::From<Error>, F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193419,"byte_end":193491,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193496,"byte_end":193565,"line_start":396,"line_end":396,"column_start":5,"column_end":74}},{"value":"/ query's rows.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193570,"byte_end":193587,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193592,"byte_end":193595,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193600,"byte_end":193649,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/ [`Statement::query_and_then`], which can now take named parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193654,"byte_end":193724,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193729,"byte_end":193742,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193747,"byte_end":193750,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193755,"byte_end":193829,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193834,"byte_end":193906,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `query_named`, or `NULL` if they have never been","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193911,"byte_end":193987,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ bound.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":193992,"byte_end":194002,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194007,"byte_end":194010,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194015,"byte_end":194029,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194034,"byte_end":194037,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194042,"byte_end":194092,"line_start":410,"line_end":410,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query_and_then` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194097,"byte_end":194166,"line_start":411,"line_end":411,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194625,"byte_end":194631,"line_start":427,"line_end":427,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement>::exists","value":"pub fn exists<P: Params>(&mut Self, P) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[{"value":"/ Return `true` if a query in the SQL statement it executes returns one","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194460,"byte_end":194533,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ or more rows and `false` if the SQL returns an empty set.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194538,"byte_end":194599,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194604,"byte_end":194613,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195432,"byte_end":195441,"line_start":448,"line_end":448,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement>::query_row","value":"pub fn query_row<T, P, F>(&mut Self, P, F) -> Result<T> where P: Params,\nF: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194802,"byte_end":194872,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194877,"byte_end":194892,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194897,"byte_end":194900,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194905,"byte_end":194978,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":194983,"byte_end":194995,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195000,"byte_end":195003,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195008,"byte_end":195081,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195086,"byte_end":195127,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ [`.optional()`](crate::OptionalExtension::optional) on the result of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195132,"byte_end":195204,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>` (requires that the trait","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195209,"byte_end":195271,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/ `rusqlite::OptionalExtension` is imported).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195276,"byte_end":195323,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195328,"byte_end":195331,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195336,"byte_end":195349,"line_start":445,"line_end":445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195354,"byte_end":195357,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195362,"byte_end":195420,"line_start":447,"line_end":447,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196612,"byte_end":196627,"line_start":479,"line_end":479,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Statement>::query_row_named","value":"pub fn query_row_named<T, F>(&mut Self, &[(&str, &dyn ToSql)], F) -> Result<T>\nwhere F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195669,"byte_end":195742,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195747,"byte_end":195783,"line_start":459,"line_end":459,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195788,"byte_end":195791,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195796,"byte_end":195845,"line_start":461,"line_end":461,"column_start":5,"column_end":54}},{"value":"/ [`Statement::query_and_then`], which can now take named parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195850,"byte_end":195920,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195925,"byte_end":195938,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195943,"byte_end":195946,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":195951,"byte_end":196024,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196029,"byte_end":196041,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196046,"byte_end":196049,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196054,"byte_end":196127,"line_start":468,"line_end":468,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196132,"byte_end":196173,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ [`.optional()`](crate::OptionalExtension::optional) on the result of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196178,"byte_end":196250,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>` (requires that the trait","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196255,"byte_end":196317,"line_start":471,"line_end":471,"column_start":5,"column_end":67}},{"value":"/ `rusqlite::OptionalExtension` is imported).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196322,"byte_end":196369,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196374,"byte_end":196377,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196382,"byte_end":196395,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196400,"byte_end":196403,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196408,"byte_end":196483,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196488,"byte_end":196531,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `query_row` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196536,"byte_end":196600,"line_start":478,"line_end":478,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197075,"byte_end":197083,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement>::finalize","value":"pub fn finalize(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[{"value":"/ Consumes the statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196798,"byte_end":196825,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196830,"byte_end":196833,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196838,"byte_end":196906,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196911,"byte_end":196952,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196957,"byte_end":196960,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196965,"byte_end":196978,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196983,"byte_end":196986,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":196991,"byte_end":197049,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197054,"byte_end":197063,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197902,"byte_end":197917,"line_start":519,"line_end":519,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement>::parameter_index","value":"pub fn parameter_index(&Self, &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the (one-based) index of an SQL parameter given its name.","sig":null,"attributes":[{"value":"/ Return the (one-based) index of an SQL parameter given its name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197146,"byte_end":197214,"line_start":499,"line_end":499,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197219,"byte_end":197222,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Note that the initial \":\" or \"$\" or \"@\" or \"?\" used to specify the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197227,"byte_end":197297,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ parameter is included as part of the name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197302,"byte_end":197348,"line_start":502,"line_end":502,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197353,"byte_end":197356,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197361,"byte_end":197379,"line_start":504,"line_end":504,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197384,"byte_end":197425,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197430,"byte_end":197479,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197484,"byte_end":197561,"line_start":507,"line_end":507,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_index(\":example\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197566,"byte_end":197620,"line_start":508,"line_end":508,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(index, Some(1));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197625,"byte_end":197660,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197665,"byte_end":197679,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197684,"byte_end":197689,"line_start":511,"line_end":511,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197694,"byte_end":197701,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197706,"byte_end":197709,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197714,"byte_end":197727,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197732,"byte_end":197735,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Will return Err if `name` is invalid. Will return Ok(None) if the name","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197740,"byte_end":197814,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ is valid but not a bound parameter of this statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197819,"byte_end":197876,"line_start":517,"line_end":517,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":197881,"byte_end":197890,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198660,"byte_end":198674,"line_start":541,"line_end":541,"column_start":12,"column_end":26},"name":"parameter_name","qualname":"<Statement>::parameter_name","value":"pub fn parameter_name(&Self, usize) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the SQL parameter name given its (one-based) index (the inverse\n of [`Statement::parameter_index`]).","sig":null,"attributes":[{"value":"/ Return the SQL parameter name given its (one-based) index (the inverse","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198024,"byte_end":198098,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ of [`Statement::parameter_index`]).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198103,"byte_end":198142,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198147,"byte_end":198150,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198155,"byte_end":198173,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198178,"byte_end":198219,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198224,"byte_end":198273,"line_start":528,"line_end":528,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198278,"byte_end":198355,"line_start":529,"line_end":529,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_name(1);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198360,"byte_end":198403,"line_start":530,"line_end":530,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(index, Some(\":example\"));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198408,"byte_end":198452,"line_start":531,"line_end":531,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198457,"byte_end":198471,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198476,"byte_end":198481,"line_start":533,"line_end":533,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198486,"byte_end":198493,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198498,"byte_end":198501,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198506,"byte_end":198519,"line_start":536,"line_end":536,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198524,"byte_end":198527,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if the column index is out of bounds or if the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198532,"byte_end":198601,"line_start":538,"line_end":538,"column_start":5,"column_end":74}},{"value":"/ parameter is positional.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198606,"byte_end":198634,"line_start":539,"line_end":539,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":198639,"byte_end":198648,"line_start":540,"line_end":540,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200088,"byte_end":200103,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"parameter_count","qualname":"<Statement>::parameter_count","value":"pub fn parameter_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of parameters that can be bound to this statement.\n","sig":null,"attributes":[{"value":"/ Return the number of parameters that can be bound to this statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":199990,"byte_end":200062,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200067,"byte_end":200076,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201762,"byte_end":201780,"line_start":630,"line_end":630,"column_start":12,"column_end":30},"name":"raw_bind_parameter","qualname":"<Statement>::raw_bind_parameter","value":"pub fn raw_bind_parameter<T: ToSql>(&mut Self, usize, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to directly bind a parameter to a given index.","sig":null,"attributes":[{"value":"/ Low level API to directly bind a parameter to a given index.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200174,"byte_end":200238,"line_start":591,"line_end":591,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200243,"byte_end":200246,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the index is one-based, that is, the first parameter index is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200251,"byte_end":200326,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ 1 and not 0. This is consistent with the SQLite API and the values given","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200331,"byte_end":200407,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ to parameters bound as `?NNN`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200412,"byte_end":200446,"line_start":595,"line_end":595,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200451,"byte_end":200454,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ The valid values for `one_based_col_index` begin at `1`, and end at","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200459,"byte_end":200530,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/ [`Statement::parameter_count`], inclusive.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200535,"byte_end":200581,"line_start":598,"line_end":598,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200586,"byte_end":200589,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200594,"byte_end":200607,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200612,"byte_end":200615,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used, but is available for special cases","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200620,"byte_end":200693,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ such as:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200698,"byte_end":200710,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200715,"byte_end":200718,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ - binding parameters where a gap exists.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200723,"byte_end":200767,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/ - binding named and positional parameters in the same query.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200772,"byte_end":200836,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/ - separating parameter binding from query execution.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200841,"byte_end":200897,"line_start":607,"line_end":607,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200902,"byte_end":200905,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Statements that have had their parameters bound this way should be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200910,"byte_end":200980,"line_start":609,"line_end":609,"column_start":5,"column_end":75}},{"value":"/ queried or executed by [`Statement::raw_query`] or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":200985,"byte_end":201039,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/ [`Statement::raw_execute`]. Other functions are not guaranteed to work.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201044,"byte_end":201119,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201124,"byte_end":201127,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201132,"byte_end":201145,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201150,"byte_end":201153,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201158,"byte_end":201176,"line_start":615,"line_end":615,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201181,"byte_end":201222,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201227,"byte_end":201274,"line_start":617,"line_end":617,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test WHERE name = :name AND value > ?2\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201279,"byte_end":201372,"line_start":618,"line_end":618,"column_start":5,"column_end":98}},{"value":"/     let name_index = stmt.parameter_index(\":name\")?.expect(\"No such parameter\");","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201377,"byte_end":201461,"line_start":619,"line_end":619,"column_start":5,"column_end":89}},{"value":"/     stmt.raw_bind_parameter(name_index, \"foo\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201466,"byte_end":201518,"line_start":620,"line_end":620,"column_start":5,"column_end":57}},{"value":"/     stmt.raw_bind_parameter(2, 100)?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201523,"byte_end":201564,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/     let mut rows = stmt.raw_query();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201569,"byte_end":201609,"line_start":622,"line_end":622,"column_start":5,"column_end":45}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201614,"byte_end":201658,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201663,"byte_end":201681,"line_start":624,"line_end":624,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201686,"byte_end":201695,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201700,"byte_end":201714,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201719,"byte_end":201724,"line_start":627,"line_end":627,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201729,"byte_end":201736,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":201741,"byte_end":201750,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202691,"byte_end":202702,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"raw_execute","qualname":"<Statement>::raw_execute","value":"pub fn raw_execute(&mut Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to execute a statement given that all parameters were\n bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to execute a statement given that all parameters were","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202075,"byte_end":202146,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202151,"byte_end":202219,"line_start":641,"line_end":641,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202224,"byte_end":202227,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202232,"byte_end":202245,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202250,"byte_end":202253,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202258,"byte_end":202317,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202322,"byte_end":202325,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202330,"byte_end":202397,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::execute`] family should be preferred.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202402,"byte_end":202473,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202478,"byte_end":202481,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202486,"byte_end":202499,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202504,"byte_end":202507,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the executed statement returns rows (in which case","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202512,"byte_end":202587,"line_start":652,"line_end":652,"column_start":5,"column_end":80}},{"value":"/ `query` should be used instead), or the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202592,"byte_end":202665,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202670,"byte_end":202679,"line_start":654,"line_end":654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203338,"byte_end":203347,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"raw_query","qualname":"<Statement>::raw_query","value":"pub fn raw_query(&mut Self) -> Rows","parent":null,"children":[],"decl_id":null,"docs":" Low level API to get `Rows` for this query given that all parameters\n were bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to get `Rows` for this query given that all parameters","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202789,"byte_end":202861,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ were bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202866,"byte_end":202939,"line_start":660,"line_end":660,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202944,"byte_end":202947,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202952,"byte_end":202965,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202970,"byte_end":202973,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":202978,"byte_end":203037,"line_start":664,"line_end":664,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203042,"byte_end":203045,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203050,"byte_end":203117,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::query`] family should be preferred.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203122,"byte_end":203191,"line_start":667,"line_end":667,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203196,"byte_end":203199,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Note that if the SQL does not return results, [`Statement::raw_execute`]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203204,"byte_end":203280,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ should be used instead.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203285,"byte_end":203312,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":203317,"byte_end":203326,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207467,"byte_end":207477,"line_start":787,"line_end":787,"column_start":12,"column_end":22},"name":"get_status","qualname":"<Statement>::get_status","value":"pub fn get_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the value for one of the status counters for this statement.\n","sig":null,"attributes":[{"value":"/ Get the value for one of the status counters for this statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207373,"byte_end":207441,"line_start":785,"line_end":785,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207446,"byte_end":207455,"line_start":786,"line_end":786,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207722,"byte_end":207734,"line_start":794,"line_end":794,"column_start":12,"column_end":24},"name":"reset_status","qualname":"<Statement>::reset_status","value":"pub fn reset_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Reset the value of one of the status counters for this statement,\n returning the value it had before resetting.\n","sig":null,"attributes":[{"value":"/ Reset the value of one of the status counters for this statement,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207574,"byte_end":207643,"line_start":791,"line_end":791,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207648,"byte_end":207657,"line_start":792,"line_end":792,"column_start":5,"column_end":14}},{"value":"/ returning the value it had before resetting.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":207662,"byte_end":207710,"line_start":793,"line_end":793,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212465,"byte_end":212477,"line_start":938,"line_end":938,"column_start":5,"column_end":17},"name":"FullscanStep","qualname":"::statement::StatementStatus::FullscanStep","value":"StatementStatus::FullscanStep","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212411,"byte_end":212460,"line_start":937,"line_end":937,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212532,"byte_end":212536,"line_start":940,"line_end":940,"column_start":5,"column_end":9},"name":"Sort","qualname":"::statement::StatementStatus::Sort","value":"StatementStatus::Sort","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_SORT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_SORT","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212487,"byte_end":212527,"line_start":939,"line_end":939,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212596,"byte_end":212605,"line_start":942,"line_end":942,"column_start":5,"column_end":14},"name":"AutoIndex","qualname":"::statement::StatementStatus::AutoIndex","value":"StatementStatus::AutoIndex","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_AUTOINDEX","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212546,"byte_end":212591,"line_start":941,"line_end":941,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212663,"byte_end":212669,"line_start":944,"line_end":944,"column_start":5,"column_end":11},"name":"VmStep","qualname":"::statement::StatementStatus::VmStep","value":"StatementStatus::VmStep","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_VM_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_VM_STEP","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212615,"byte_end":212658,"line_start":943,"line_end":943,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212729,"byte_end":212738,"line_start":946,"line_end":946,"column_start":5,"column_end":14},"name":"RePrepare","qualname":"::statement::StatementStatus::RePrepare","value":"StatementStatus::RePrepare","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_REPREPARE\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_REPREPARE","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212679,"byte_end":212724,"line_start":945,"line_end":945,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212792,"byte_end":212795,"line_start":948,"line_end":948,"column_start":5,"column_end":8},"name":"Run","qualname":"::statement::StatementStatus::Run","value":"StatementStatus::Run","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_RUN\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_RUN","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212748,"byte_end":212787,"line_start":947,"line_end":947,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212853,"byte_end":212860,"line_start":950,"line_end":950,"column_start":5,"column_end":12},"name":"MemUsed","qualname":"::statement::StatementStatus::MemUsed","value":"StatementStatus::MemUsed","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_MEMUSED\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_MEMUSED","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212805,"byte_end":212848,"line_start":949,"line_end":949,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212389,"byte_end":212404,"line_start":936,"line_end":936,"column_start":10,"column_end":25},"name":"StatementStatus","qualname":"::statement::StatementStatus","value":"pub enum StatementStatus {\n    FullscanStep = ,\n    Sort = ,\n    AutoIndex = ,\n    VmStep = ,\n    RePrepare = ,\n    Run = ,\n    MemUsed = ,\n}","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324}],"decl_id":null,"docs":" Prepared statement status counters.","sig":null,"attributes":[{"value":"/ Prepared statement status counters.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212078,"byte_end":212117,"line_start":926,"line_end":926,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212118,"byte_end":212121,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ See `https://www.sqlite.org/c3ref/c_stmtstatus_counter.html`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212122,"byte_end":212186,"line_start":928,"line_end":928,"column_start":1,"column_end":65}},{"value":"/ for explanations of each.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212187,"byte_end":212216,"line_start":929,"line_end":929,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212217,"byte_end":212220,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ Note that depending on your version of SQLite, all of these","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212221,"byte_end":212284,"line_start":931,"line_end":931,"column_start":1,"column_end":64}},{"value":"/ may not be available.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212285,"byte_end":212310,"line_start":932,"line_end":932,"column_start":1,"column_end":26}},{"value":"repr(i32)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212311,"byte_end":212323,"line_start":933,"line_end":933,"column_start":1,"column_end":13}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":212362,"byte_end":212379,"line_start":935,"line_end":935,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228956,"byte_end":228964,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":2336},"children":[],"decl_id":null,"docs":" DEFERRED means that the transaction does not actually start until the\n database is first accessed.\n","sig":null,"attributes":[{"value":"/ DEFERRED means that the transaction does not actually start until the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228842,"byte_end":228915,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ database is first accessed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228920,"byte_end":228951,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229100,"byte_end":229109,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":2336},"children":[],"decl_id":null,"docs":" IMMEDIATE cause the database connection to start a new write\n immediately, without waiting for a writes statement.\n","sig":null,"attributes":[{"value":"/ IMMEDIATE cause the database connection to start a new write","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228970,"byte_end":229034,"line_start":12,"line_end":12,"column_start":5,"column_end":69}},{"value":"/ immediately, without waiting for a writes statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229039,"byte_end":229095,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229238,"byte_end":229247,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":2336},"children":[],"decl_id":null,"docs":" EXCLUSIVE prevents other database connections from reading the database\n while the transaction is underway.\n","sig":null,"attributes":[{"value":"/ EXCLUSIVE prevents other database connections from reading the database","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229115,"byte_end":229190,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ while the transaction is underway.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229195,"byte_end":229233,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2336},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228816,"byte_end":228835,"line_start":8,"line_end":8,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"pub enum TransactionBehavior { Deferred, Immediate, Exclusive, }","parent":null,"children":[{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":2341}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"/ Options for transaction behavior. See [BEGIN","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228642,"byte_end":228690,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/ TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228691,"byte_end":228765,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":228789,"byte_end":228806,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229476,"byte_end":229484,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":2346},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[{"value":"/ Roll back the changes. This is the default.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229424,"byte_end":229471,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229519,"byte_end":229525,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":2346},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[{"value":"/ Commit the changes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229491,"byte_end":229514,"line_start":27,"line_end":27,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229665,"byte_end":229671,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":2346},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[{"value":"/ Do not commit or roll back changes - this will leave the transaction or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229532,"byte_end":229607,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ savepoint open, so should be used with care.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229612,"byte_end":229660,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229750,"byte_end":229755,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":2346},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[{"value":"/ Panic. Used to enforce intentional behavior during development.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229678,"byte_end":229745,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229405,"byte_end":229417,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"pub enum DropBehavior { Rollback, Commit, Ignore, Panic, }","parent":null,"children":[{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2351},{"krate":0,"index":2353}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"/ Options for how a Transaction or Savepoint should behave when it is dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229252,"byte_end":229332,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229378,"byte_end":229395,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230564,"byte_end":230575,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[{"value":"/ Represents a transaction on a database connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229760,"byte_end":229814,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229815,"byte_end":229818,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229819,"byte_end":229830,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229831,"byte_end":229834,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Transactions will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229835,"byte_end":229912,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ commit the transaction, or use `set_drop_behavior` to change what happens","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229913,"byte_end":229990,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ when the transaction is dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":229991,"byte_end":230027,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230028,"byte_end":230031,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230032,"byte_end":230046,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230047,"byte_end":230050,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230051,"byte_end":230069,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230070,"byte_end":230111,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230112,"byte_end":230183,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230184,"byte_end":230255,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230256,"byte_end":230317,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230318,"byte_end":230355,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230356,"byte_end":230359,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230360,"byte_end":230428,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230429,"byte_end":230497,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230498,"byte_end":230501,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     tx.commit()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230502,"byte_end":230521,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230522,"byte_end":230527,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230528,"byte_end":230535,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":910},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231427,"byte_end":231436,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[{"value":"/ Represents a savepoint on a database connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230650,"byte_end":230702,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230703,"byte_end":230706,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230707,"byte_end":230718,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230719,"byte_end":230722,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Savepoints will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230723,"byte_end":230798,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ commit the savepoint, or use `set_drop_behavior` to change what happens","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230799,"byte_end":230874,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ when the savepoint is dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230875,"byte_end":230909,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230910,"byte_end":230913,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230914,"byte_end":230928,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230929,"byte_end":230932,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230933,"byte_end":230951,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230952,"byte_end":230993,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":230994,"byte_end":231065,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231066,"byte_end":231137,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231138,"byte_end":231199,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231200,"byte_end":231235,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231236,"byte_end":231239,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231240,"byte_end":231308,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231309,"byte_end":231377,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231378,"byte_end":231381,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     sp.commit()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231382,"byte_end":231401,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231402,"byte_end":231407,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231408,"byte_end":231415,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231962,"byte_end":231965,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction>::new","value":"pub fn new(&mut Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.","sig":null,"attributes":[{"value":"/ Begin a new transaction. Cannot be nested; see `savepoint` for nested","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231593,"byte_end":231666,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ transactions.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231671,"byte_end":231688,"line_start":100,"line_end":100,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231693,"byte_end":231696,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Even though we don't mutate the connection, we take a `&mut Connection`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231701,"byte_end":231776,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ so as to prevent nested transactions on the same connection. For cases","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231781,"byte_end":231855,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ where this is unacceptable, [`Transaction::new_unchecked`] is available.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231860,"byte_end":231936,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231941,"byte_end":231950,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232417,"byte_end":232430,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Transaction>::new_unchecked","value":"pub fn new_unchecked(&Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction, failing if a transaction is open.","sig":null,"attributes":[{"value":"/ Begin a new transaction, failing if a transaction is open.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232104,"byte_end":232166,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232171,"byte_end":232174,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If a transaction is already open, this will return an error. Where","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232179,"byte_end":232249,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ possible, [`Transaction::new`] should be preferred, as it provides a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232254,"byte_end":232326,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ compile-time guarantee that transactions are not nested.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232331,"byte_end":232391,"line_start":114,"line_end":114,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232396,"byte_end":232405,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233777,"byte_end":233786,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[{"value":"/ Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":232926,"byte_end":233014,"line_start":131,"line_end":131,"column_start":5,"column_end":93}},{"value":"/ transactions.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233019,"byte_end":233036,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233041,"byte_end":233044,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233049,"byte_end":233060,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233065,"byte_end":233068,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Just like outer level transactions, savepoint transactions rollback by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233073,"byte_end":233147,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ default.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233152,"byte_end":233164,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233169,"byte_end":233172,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233177,"byte_end":233191,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233196,"byte_end":233199,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233204,"byte_end":233222,"line_start":141,"line_end":141,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233227,"byte_end":233268,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ # fn perform_queries_part_1_succeeds(_conn: &Connection) -> bool { true }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233273,"byte_end":233350,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233355,"byte_end":233416,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/     let mut tx = conn.transaction()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233421,"byte_end":233462,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233467,"byte_end":233470,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233475,"byte_end":233484,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/         let sp = tx.savepoint()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233489,"byte_end":233526,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/         if perform_queries_part_1_succeeds(&sp) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233531,"byte_end":233584,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/             sp.commit()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233589,"byte_end":233618,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233623,"byte_end":233636,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/         // otherwise, sp will rollback","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233641,"byte_end":233683,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233688,"byte_end":233697,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233702,"byte_end":233705,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233710,"byte_end":233729,"line_start":155,"line_end":155,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233734,"byte_end":233739,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233744,"byte_end":233751,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233756,"byte_end":233765,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233981,"byte_end":234000,"line_start":165,"line_end":165,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[{"value":"/ Create a new savepoint with a custom savepoint name. See `savepoint()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233880,"byte_end":233955,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":233960,"byte_end":233969,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234252,"byte_end":234265,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the transaction when it is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234135,"byte_end":234209,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234214,"byte_end":234226,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234231,"byte_end":234240,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234444,"byte_end":234461,"line_start":179,"line_end":179,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the transaction to perform the specified action when it is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234329,"byte_end":234401,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234406,"byte_end":234418,"line_start":177,"line_end":177,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234423,"byte_end":234432,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234650,"byte_end":234656,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a transaction.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234558,"byte_end":234624,"line_start":183,"line_end":183,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234629,"byte_end":234638,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234934,"byte_end":234942,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction>::rollback","value":"pub fn rollback(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and rolls back a transaction.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234839,"byte_end":234908,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":234913,"byte_end":234922,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235404,"byte_end":235410,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the transaction, committing or rolling back according to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235131,"byte_end":235204,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235209,"byte_end":235251,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235256,"byte_end":235259,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235264,"byte_end":235332,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235337,"byte_end":235378,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235383,"byte_end":235392,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236948,"byte_end":236951,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint>::new","value":"pub fn new(&mut Connection) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint. Can be nested.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236881,"byte_end":236922,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236927,"byte_end":236936,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237140,"byte_end":237149,"line_start":280,"line_end":280,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint>::with_name","value":"pub fn with_name<T: Into<String>>(&mut Connection, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a user-provided savepoint name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237052,"byte_end":237114,"line_start":278,"line_end":278,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237119,"byte_end":237128,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237346,"byte_end":237355,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237291,"byte_end":237320,"line_start":284,"line_end":284,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237325,"byte_end":237334,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237553,"byte_end":237572,"line_start":292,"line_end":292,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint with a user-provided savepoint name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237462,"byte_end":237527,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237532,"byte_end":237541,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237835,"byte_end":237848,"line_start":299,"line_end":299,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the savepoint when it is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237720,"byte_end":237792,"line_start":296,"line_end":296,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237797,"byte_end":237809,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237814,"byte_end":237823,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238025,"byte_end":238042,"line_start":306,"line_end":306,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the savepoint to perform the specified action when it is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237912,"byte_end":237982,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":237987,"byte_end":237999,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238004,"byte_end":238013,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238229,"byte_end":238235,"line_start":312,"line_end":312,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a savepoint.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238139,"byte_end":238203,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238208,"byte_end":238217,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238727,"byte_end":238735,"line_start":330,"line_end":330,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint>::rollback","value":"pub fn rollback(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[{"value":"/ A convenience method which rolls back a savepoint.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238474,"byte_end":238528,"line_start":323,"line_end":323,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238533,"byte_end":238536,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238541,"byte_end":238552,"line_start":325,"line_end":325,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238557,"byte_end":238560,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Unlike `Transaction`s, savepoints remain active after they have been","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238565,"byte_end":238637,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ rolled back, and can be rolled back again or committed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238642,"byte_end":238701,"line_start":328,"line_end":328,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238706,"byte_end":238715,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239129,"byte_end":239135,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the savepoint, committing or rolling back according to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238858,"byte_end":238929,"line_start":335,"line_end":335,"column_start":5,"column_end":76}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238934,"byte_end":238976,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238981,"byte_end":238984,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":238989,"byte_end":239057,"line_start":338,"line_end":338,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239062,"byte_end":239103,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239108,"byte_end":239117,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240944,"byte_end":240955,"line_start":404,"line_end":404,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"pub fn transaction(&mut Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239917,"byte_end":239982,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239987,"byte_end":239990,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The transaction defaults to rolling back when it is dropped. If you","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239995,"byte_end":240066,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/ want the transaction to commit, you must call","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240071,"byte_end":240120,"line_start":380,"line_end":380,"column_start":5,"column_end":54}},{"value":"/ [`commit`](Transaction::commit) or [`set_drop_behavior(DropBehavior:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240125,"byte_end":240197,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ :Commit)`](Transaction::set_drop_behavior).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240202,"byte_end":240249,"line_start":382,"line_end":382,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240254,"byte_end":240257,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240262,"byte_end":240276,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240281,"byte_end":240284,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240289,"byte_end":240307,"line_start":386,"line_end":386,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240312,"byte_end":240353,"line_start":387,"line_end":387,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240358,"byte_end":240429,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240434,"byte_end":240505,"line_start":389,"line_end":389,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240510,"byte_end":240571,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240576,"byte_end":240613,"line_start":391,"line_end":391,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240618,"byte_end":240621,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240626,"byte_end":240694,"line_start":393,"line_end":393,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240699,"byte_end":240767,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240772,"byte_end":240775,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240780,"byte_end":240799,"line_start":396,"line_end":396,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240804,"byte_end":240809,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240814,"byte_end":240821,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240826,"byte_end":240829,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240834,"byte_end":240847,"line_start":400,"line_end":400,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240852,"byte_end":240855,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240860,"byte_end":240918,"line_start":402,"line_end":402,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":240923,"byte_end":240932,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241308,"byte_end":241333,"line_start":416,"line_end":416,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"pub fn transaction_with_behavior(&mut Self, TransactionBehavior)\n-> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[{"value":"/ Begin a new transaction with a specified behavior.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241069,"byte_end":241123,"line_start":408,"line_end":408,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241128,"byte_end":241131,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ See [`transaction`](Connection::transaction).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241136,"byte_end":241185,"line_start":410,"line_end":410,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241190,"byte_end":241193,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241198,"byte_end":241211,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241216,"byte_end":241219,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241224,"byte_end":241282,"line_start":414,"line_end":414,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241287,"byte_end":241296,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242792,"byte_end":242813,"line_start":454,"line_end":454,"column_start":12,"column_end":33},"name":"unchecked_transaction","qualname":"<Connection>::unchecked_transaction","value":"pub fn unchecked_transaction(&Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241480,"byte_end":241545,"line_start":423,"line_end":423,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241550,"byte_end":241553,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Attempt to open a nested transaction will result in a SQLite error.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241558,"byte_end":241629,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ `Connection::transaction` prevents this at compile time by taking `&mut","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241634,"byte_end":241709,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ self`, but `Connection::unchecked_transaction()` may be used to defer","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241714,"byte_end":241787,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ the checking until runtime.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241792,"byte_end":241823,"line_start":428,"line_end":428,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241828,"byte_end":241831,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::transaction`] and [`Transaction::new_unchecked`]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241836,"byte_end":241906,"line_start":430,"line_end":430,"column_start":5,"column_end":75}},{"value":"/ (which can be used if the default transaction behavior is undesirable).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241911,"byte_end":241986,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241991,"byte_end":241994,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":241999,"byte_end":242013,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242018,"byte_end":242021,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242026,"byte_end":242044,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242049,"byte_end":242090,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242095,"byte_end":242117,"line_start":437,"line_end":437,"column_start":5,"column_end":27}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242122,"byte_end":242193,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242198,"byte_end":242269,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: Rc<Connection>) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242274,"byte_end":242334,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/     let tx = conn.unchecked_transaction()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242339,"byte_end":242386,"line_start":441,"line_end":441,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242391,"byte_end":242394,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242399,"byte_end":242467,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242472,"byte_end":242540,"line_start":444,"line_end":444,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242545,"byte_end":242548,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242553,"byte_end":242572,"line_start":446,"line_end":446,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242577,"byte_end":242582,"line_start":447,"line_end":447,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242587,"byte_end":242594,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242599,"byte_end":242602,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242607,"byte_end":242620,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242625,"byte_end":242628,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails. The specific","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242633,"byte_end":242704,"line_start":452,"line_end":452,"column_start":5,"column_end":76}},{"value":"/ error returned if transactions are nested is currently unspecified.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242709,"byte_end":242780,"line_start":453,"line_end":453,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243948,"byte_end":243957,"line_start":485,"line_end":485,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new savepoint with the default behavior (DEFERRED).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":242933,"byte_end":242996,"line_start":458,"line_end":458,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243001,"byte_end":243004,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ The savepoint defaults to rolling back when it is dropped. If you want","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243009,"byte_end":243083,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ the savepoint to commit, you must call [`commit`](Savepoint::commit) or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243088,"byte_end":243163,"line_start":461,"line_end":461,"column_start":5,"column_end":80}},{"value":"/ [`set_drop_behavior(DropBehavior::Commit)`](Savepoint::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243168,"byte_end":243227,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/ set_drop_behavior).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243232,"byte_end":243255,"line_start":463,"line_end":463,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243260,"byte_end":243263,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243268,"byte_end":243282,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243287,"byte_end":243290,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243295,"byte_end":243313,"line_start":467,"line_end":467,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243318,"byte_end":243359,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243364,"byte_end":243435,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243440,"byte_end":243511,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243516,"byte_end":243577,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243582,"byte_end":243617,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243622,"byte_end":243625,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243630,"byte_end":243698,"line_start":474,"line_end":474,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243703,"byte_end":243771,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243776,"byte_end":243779,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/     sp.commit()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243784,"byte_end":243803,"line_start":477,"line_end":477,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243808,"byte_end":243813,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243818,"byte_end":243825,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243830,"byte_end":243833,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243838,"byte_end":243851,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243856,"byte_end":243859,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243864,"byte_end":243922,"line_start":483,"line_end":483,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":243927,"byte_end":243936,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244265,"byte_end":244284,"line_start":497,"line_end":497,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a specified name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244036,"byte_end":244084,"line_start":489,"line_end":489,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244089,"byte_end":244092,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ See [`savepoint`](Connection::savepoint).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244097,"byte_end":244142,"line_start":491,"line_end":491,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244147,"byte_end":244150,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244155,"byte_end":244168,"line_start":493,"line_end":493,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244173,"byte_end":244176,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244181,"byte_end":244239,"line_start":495,"line_end":495,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":244244,"byte_end":244253,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":969},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":1049},{"krate":0,"index":1112},{"krate":0,"index":1142},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":1188}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[{"value":"/ Traits dealing with SQLite data types.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":250980,"byte_end":251022,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251023,"byte_end":251026,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ SQLite uses a [dynamic type system](https://www.sqlite.org/datatype3.html). Implementations of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251027,"byte_end":251125,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ the [`ToSql`] and [`FromSql`] traits are provided for the basic types that","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251126,"byte_end":251204,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ SQLite provides methods for:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251205,"byte_end":251237,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251238,"byte_end":251241,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Strings (`String` and `&str`)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251242,"byte_end":251277,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/ * Blobs (`Vec<u8>` and `&[u8]`)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251278,"byte_end":251313,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/ * Numbers","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251314,"byte_end":251327,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251328,"byte_end":251331,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The number situation is a little complicated due to the fact that all","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251332,"byte_end":251405,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ numbers in SQLite are stored as `INTEGER` (`i64`) or `REAL` (`f64`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251406,"byte_end":251478,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251479,"byte_end":251482,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ToSql`] and [`FromSql`] are implemented for all primitive number types.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251483,"byte_end":251560,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ [`FromSql`] has different behaviour depending on the SQL and Rust types, and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251561,"byte_end":251641,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ the value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251642,"byte_end":251656,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251657,"byte_end":251660,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `INTEGER` to integer: returns an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251661,"byte_end":251699,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/   [`Error::IntegralValueOutOfRange`](crate::Error::IntegralValueOutOfRange)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251700,"byte_end":251779,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/   error if the value does not fit in the Rust type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251780,"byte_end":251835,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ * `REAL` to integer: always returns an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251836,"byte_end":251878,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/   [`Error::InvalidColumnType`](crate::Error::InvalidColumnType) error.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251879,"byte_end":251953,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ * `INTEGER` to float: casts using `as` operator. Never fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":251954,"byte_end":252019,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ * `REAL` to float: casts using `as` operator. Never fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252020,"byte_end":252082,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252083,"byte_end":252086,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`ToSql`] always succeeds except when storing a `u64` or `usize` value that","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252087,"byte_end":252166,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ cannot fit in an `INTEGER` (`i64`). Also note that SQLite ignores column","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252167,"byte_end":252243,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ types, so if you store an `i64` in a column with type `REAL` it will be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252244,"byte_end":252319,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ stored as an `INTEGER`, not a `REAL`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252320,"byte_end":252361,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252362,"byte_end":252365,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the `time` feature is enabled, implementations are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252366,"byte_end":252423,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ provided for `time::OffsetDateTime` that use the RFC 3339 date/time format,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252424,"byte_end":252503,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ `\"%Y-%m-%dT%H:%M:%S.%fZ\"`, to store time values as strings.  These values","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252504,"byte_end":252581,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ can be parsed by SQLite's builtin","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252582,"byte_end":252619,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ [datetime](https://www.sqlite.org/lang_datefunc.html) functions.  If you","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252620,"byte_end":252696,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ want different storage for datetimes, you can use a newtype.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":252697,"byte_end":252761,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`ToSql`] and [`FromSql`] are also implemented for `Option<T>` where `T`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253549,"byte_end":253625,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ implements [`ToSql`] or [`FromSql`] for the cases where you want to know if","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253626,"byte_end":253705,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ a value was NULL (which gets translated to `None`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":253706,"byte_end":253761,"line_start":70,"line_end":70,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267423,"byte_end":267434,"line_start":12,"line_end":12,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":2373},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when an SQLite value is requested, but the type of the result","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267291,"byte_end":267362,"line_start":10,"line_end":10,"column_start":5,"column_end":76}},{"value":"/ cannot be converted to the requested Rust type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267367,"byte_end":267418,"line_start":11,"line_end":11,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267543,"byte_end":267553,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":2373},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[{"value":"/ Error when the i64 value returned by SQLite cannot be stored into the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267441,"byte_end":267514,"line_start":14,"line_end":14,"column_start":5,"column_end":78}},{"value":"/ requested type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267519,"byte_end":267538,"line_start":15,"line_end":15,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":268170,"byte_end":268175,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":2373},"children":[],"decl_id":null,"docs":" An error case available for implementors of the [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ An error case available for implementors of the [`FromSql`] trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":268095,"byte_end":268165,"line_start":31,"line_end":31,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267272,"byte_end":267284,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"pub enum FromSqlError {\n    InvalidType,\n    OutOfRange(i64),\n    Other(Box<dyn Error + Send + Sync + 'static>),\n}","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2379}],"decl_id":null,"docs":" Enum listing possible errors from [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from [`FromSql`] trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267171,"byte_end":267227,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":267245,"byte_end":267262,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269804,"byte_end":269817,"line_start":78,"line_end":78,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ Result type for implementors of the [`FromSql`] trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269736,"byte_end":269794,"line_start":77,"line_end":77,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269922,"byte_end":269929,"line_start":81,"line_end":81,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":1022}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be created from a SQLite value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269849,"byte_end":269911,"line_start":80,"line_end":80,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269993,"byte_end":270006,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"pub fn column_result(ValueRef) -> FromSqlResult<Self>","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":" Converts SQLite value into Rust value.\n","sig":null,"attributes":[{"value":"/ Converts SQLite value into Rust value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269943,"byte_end":269985,"line_start":82,"line_end":82,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275690,"byte_end":275698,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ A borrowed SQLite-representable value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275643,"byte_end":275685,"line_start":13,"line_end":13,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275764,"byte_end":275769,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ An owned SQLite-representable value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275719,"byte_end":275759,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275621,"byte_end":275632,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"pub enum ToSqlOutput<'a> { Borrowed(ValueRef), Owned(Value), }","parent":null,"children":[{"krate":0,"index":2413},{"krate":0,"index":2416}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementers of the\n [`ToSql`] trait.\n","sig":null,"attributes":[{"value":"/ `ToSqlOutput` represents the possible output types for implementers of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275459,"byte_end":275537,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ [`ToSql`] trait.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275538,"byte_end":275558,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":275594,"byte_end":275611,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278179,"byte_end":278184,"line_start":99,"line_end":99,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":1081}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values. Returns\n [`Error::ToSqlConversionFailure`] if the conversion fails.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into SQLite values. Returns","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278034,"byte_end":278105,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ [`Error::ToSqlConversionFailure`] if the conversion fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278106,"byte_end":278168,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278238,"byte_end":278244,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"pub fn to_sql(&Self) -> Result<ToSqlOutput>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Converts Rust value to SQLite value\n","sig":null,"attributes":[{"value":"/ Converts Rust value to SQLite value","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278191,"byte_end":278230,"line_start":100,"line_end":100,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286588,"byte_end":286592,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286551,"byte_end":286583,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286637,"byte_end":286644,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286598,"byte_end":286632,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286701,"byte_end":286705,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286655,"byte_end":286696,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286752,"byte_end":286756,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286716,"byte_end":286747,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286806,"byte_end":286810,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286770,"byte_end":286801,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286539,"byte_end":286544,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"pub enum Value { Null, Integer(i64), Real(f64), Text(String), Blob(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2501}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[{"value":"/ Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286268,"byte_end":286360,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ dictated by SQLite (not by the caller).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286361,"byte_end":286404,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286405,"byte_end":286408,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`ValueRef`](crate::types::ValueRef) for a non-owning dynamic type","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286409,"byte_end":286483,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286484,"byte_end":286494,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":289007,"byte_end":289016,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288941,"byte_end":288981,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288986,"byte_end":288995,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289670,"byte_end":289674,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289633,"byte_end":289665,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289719,"byte_end":289726,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289680,"byte_end":289714,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289783,"byte_end":289787,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289737,"byte_end":289778,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289834,"byte_end":289838,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a [u8])","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289798,"byte_end":289829,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289890,"byte_end":289894,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289854,"byte_end":289885,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289614,"byte_end":289622,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"pub enum ValueRef<'a> {\n    Null,\n    Integer(i64),\n    Real(f64),\n    Text(&'a [u8]),\n    Blob(&'a [u8]),\n}","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"/ A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289364,"byte_end":289450,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ memory backing this value is owned by SQLite.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289451,"byte_end":289500,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289501,"byte_end":289504,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`Value`](Value) for an owning dynamic type value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289505,"byte_end":289563,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289999,"byte_end":290008,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289933,"byte_end":289973,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289978,"byte_end":289987,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290513,"byte_end":290519,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef>::as_i64","value":"pub fn as_i64(&Self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Integer`, returns the integral value. Otherwise,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290323,"byte_end":290394,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/ returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290399,"byte_end":290459,"line_start":38,"line_end":38,"column_start":5,"column_end":65}},{"value":"/ InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290464,"byte_end":290487,"line_start":39,"line_end":39,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290492,"byte_end":290501,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290922,"byte_end":290936,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"as_i64_or_null","qualname":"<ValueRef>::as_i64_or_null","value":"pub fn as_i64_or_null(&Self) -> FromSqlResult<Option<i64>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Integer`, returns the integral value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290686,"byte_end":290728,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Integer`, returns the integral value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290733,"byte_end":290793,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290798,"byte_end":290868,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290873,"byte_end":290896,"line_start":51,"line_end":51,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290901,"byte_end":290910,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291350,"byte_end":291356,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef>::as_f64","value":"pub fn as_f64(&Self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Real`, returns the floating point value. Otherwise,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291157,"byte_end":291231,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291236,"byte_end":291296,"line_start":62,"line_end":62,"column_start":5,"column_end":65}},{"value":"/ InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291301,"byte_end":291324,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291329,"byte_end":291338,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291759,"byte_end":291773,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"as_f64_or_null","qualname":"<ValueRef>::as_f64_or_null","value":"pub fn as_f64_or_null(&Self) -> FromSqlResult<Option<f64>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Real`, returns the floating point value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291520,"byte_end":291562,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Real`, returns the floating point value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291567,"byte_end":291630,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291635,"byte_end":291705,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291710,"byte_end":291733,"line_start":75,"line_end":75,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291738,"byte_end":291747,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292167,"byte_end":292173,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef>::as_str","value":"pub fn as_str(&Self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Text`, returns the string value. Otherwise, returns","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":291991,"byte_end":292065,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292070,"byte_end":292141,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292146,"byte_end":292155,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292666,"byte_end":292680,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"as_str_or_null","qualname":"<ValueRef>::as_str_or_null","value":"pub fn as_str_or_null(&Self) -> FromSqlResult<Option<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Text`, returns the string value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292435,"byte_end":292477,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Text`, returns the string value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292482,"byte_end":292537,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292542,"byte_end":292612,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292617,"byte_end":292640,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":292645,"byte_end":292654,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293177,"byte_end":293184,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef>::as_blob","value":"pub fn as_blob(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Blob`, returns the byte slice. Otherwise, returns","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293003,"byte_end":293075,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293080,"byte_end":293151,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293156,"byte_end":293165,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293582,"byte_end":293597,"line_start":127,"line_end":127,"column_start":12,"column_end":27},"name":"as_blob_or_null","qualname":"<ValueRef>::as_blob_or_null","value":"pub fn as_blob_or_null(&Self) -> FromSqlResult<Option<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Blob`, returns the byte slice.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293353,"byte_end":293395,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Blob`, returns the byte slice.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293400,"byte_end":293453,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293458,"byte_end":293528,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293533,"byte_end":293556,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293561,"byte_end":293570,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293965,"byte_end":293973,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ValueRef>::as_bytes","value":"pub fn as_bytes(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte slice that makes up this ValueRef if it's either\n [`ValueRef::Blob`] or [`ValueRef::Text`].\n","sig":null,"attributes":[{"value":"/ Returns the byte slice that makes up this ValueRef if it's either","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293820,"byte_end":293889,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/ [`ValueRef::Blob`] or [`ValueRef::Text`].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293894,"byte_end":293939,"line_start":136,"line_end":136,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":293944,"byte_end":293953,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294347,"byte_end":294363,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"as_bytes_or_null","qualname":"<ValueRef>::as_bytes_or_null","value":"pub fn as_bytes_or_null(&Self) -> FromSqlResult<Option<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is [`ValueRef::Blob`] or [`ValueRef::Text`] returns the byte\n slice that makes up this value\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294161,"byte_end":294203,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/ If `self` is [`ValueRef::Blob`] or [`ValueRef::Text`] returns the byte","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294208,"byte_end":294282,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ slice that makes up this value","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294287,"byte_end":294321,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294326,"byte_end":294335,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254727,"byte_end":254731,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"/ Empty struct that can be used to fill in a query parameter as `NULL`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254356,"byte_end":254429,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254430,"byte_end":254433,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254434,"byte_end":254448,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254449,"byte_end":254452,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254453,"byte_end":254471,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254472,"byte_end":254513,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ # use rusqlite::types::{Null};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254514,"byte_end":254548,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254549,"byte_end":254552,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ fn insert_null(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254553,"byte_end":254609,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/     conn.execute(\"INSERT INTO people (name) VALUES (?)\", [Null])","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254610,"byte_end":254678,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254679,"byte_end":254684,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254685,"byte_end":254692,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254896,"byte_end":254900,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" NULL\n","sig":null,"attributes":[{"value":"/ NULL","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254883,"byte_end":254891,"line_start":115,"line_end":115,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254936,"byte_end":254943,"line_start":118,"line_end":118,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254906,"byte_end":254931,"line_start":117,"line_end":117,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254991,"byte_end":254995,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" 64-bit IEEE floating point number\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE floating point number","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254949,"byte_end":254986,"line_start":119,"line_end":119,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":255016,"byte_end":255020,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" String\n","sig":null,"attributes":[{"value":"/ String","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":255001,"byte_end":255011,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":255039,"byte_end":255043,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" BLOB\n","sig":null,"attributes":[{"value":"/ BLOB","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":255026,"byte_end":255034,"line_start":123,"line_end":123,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254872,"byte_end":254876,"line_start":114,"line_end":114,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"pub enum Type { Null, Integer, Real, Text, Blob, }","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568}],"decl_id":null,"docs":" SQLite data types.\n See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).\n","sig":null,"attributes":[{"value":"/ SQLite data types.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254734,"byte_end":254756,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"/ See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":254757,"byte_end":254827,"line_start":112,"line_end":112,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302593,"byte_end":302607,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"pub fn version_number() -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as an integer; e.g., `3016002` for version","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302399,"byte_end":302472,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ 3.16.2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302473,"byte_end":302484,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302485,"byte_end":302488,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion_number()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302489,"byte_end":302575,"line_start":7,"line_end":7,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302576,"byte_end":302585,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302852,"byte_end":302859,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"pub fn version() -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302670,"byte_end":302750,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302751,"byte_end":302754,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302755,"byte_end":302834,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/version.rs","byte_start":302835,"byte_end":302844,"line_start":16,"line_end":16,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":4162,"byte_end":4171,"line_start":145,"line_end":145,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&dyn ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter][sqlite-varparam].","sig":null,"attributes":[{"value":"/ To be used when your statement has no [parameter][sqlite-varparam].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":3847,"byte_end":3918,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":3919,"byte_end":3922,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [sqlite-varparam]: https://sqlite.org/lang_expr.html#varparam","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":3923,"byte_end":3988,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":3989,"byte_end":3992,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This is deprecated in favor of using an empty array literal.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":3993,"byte_end":4057,"line_start":143,"line_end":143,"column_start":1,"column_end":65}},{"value":"deprecated =\n  \"Use an empty array instead; `stmt.execute(NO_PARAMS)` => `stmt.execute([])`\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":4058,"byte_end":4151,"line_start":144,"line_end":144,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6191,"byte_end":6197,"line_start":220,"line_end":220,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[{"value":"/ A typedef of the result returned by many methods.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6128,"byte_end":6181,"line_start":219,"line_end":219,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6303,"byte_end":6320,"line_start":223,"line_end":223,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":1281}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[{"value":"/ See the [method documentation](#tymethod.optional).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6237,"byte_end":6292,"line_start":222,"line_end":222,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6611,"byte_end":6619,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"pub fn optional(Self) -> Result<Option<T>>","parent":{"krate":0,"index":1279},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[{"value":"/ Converts a `Result<T>` into a `Result<Option<T>>`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6330,"byte_end":6384,"line_start":224,"line_end":224,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6389,"byte_end":6392,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ By default, Rusqlite treats 0 rows being returned from a query that is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6397,"byte_end":6471,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ expected to return 1 row as an error. This method will","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6476,"byte_end":6534,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ handle that error, and give you back an `Option<T>` instead.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6539,"byte_end":6603,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8689,"byte_end":8693,"line_start":297,"line_end":297,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[{"value":"/ The main database.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8662,"byte_end":8684,"line_start":296,"line_end":296,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8776,"byte_end":8780,"line_start":300,"line_end":300,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[{"value":"/ The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8700,"byte_end":8771,"line_start":299,"line_end":299,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8856,"byte_end":8864,"line_start":303,"line_end":303,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[{"value":"/ A database that has been attached via \"ATTACH DATABASE ...\".","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8787,"byte_end":8851,"line_start":302,"line_end":302,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8639,"byte_end":8651,"line_start":295,"line_end":295,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"pub enum DatabaseName<'a> { Main, Temp, Attached(&'a str), }","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"/ Name for a database within a SQLite connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8548,"byte_end":8599,"line_start":293,"line_end":293,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8930,"byte_end":8937,"line_start":307,"line_end":307,"column_start":11,"column_end":18},"name":"MAIN_DB","qualname":"::MAIN_DB","value":"DatabaseName","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for [`DatabaseName::Main`].\n","sig":null,"attributes":[{"value":"/ Shorthand for [`DatabaseName::Main`].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8878,"byte_end":8919,"line_start":306,"line_end":306,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9036,"byte_end":9043,"line_start":310,"line_end":310,"column_start":11,"column_end":18},"name":"TEMP_DB","qualname":"::TEMP_DB","value":"DatabaseName","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for [`DatabaseName::Temp`].\n","sig":null,"attributes":[{"value":"/ Shorthand for [`DatabaseName::Temp`].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":8984,"byte_end":9025,"line_start":309,"line_end":309,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9710,"byte_end":9720,"line_start":333,"line_end":333,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[{"value":"/ A connection to a SQLite database.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9660,"byte_end":9698,"line_start":332,"line_end":332,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10712,"byte_end":10716,"line_start":371,"line_end":371,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"pub fn open<P: AsRef<Path>>(P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9994,"byte_end":10041,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10046,"byte_end":10049,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ `Connection::open(path)` is equivalent to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10054,"byte_end":10099,"line_start":351,"line_end":351,"column_start":5,"column_end":50}},{"value":"/ `Connection::open_with_flags(path,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10104,"byte_end":10142,"line_start":352,"line_end":352,"column_start":5,"column_end":43}},{"value":"/ OpenFlags::SQLITE_OPEN_READ_WRITE |","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10147,"byte_end":10186,"line_start":353,"line_end":353,"column_start":5,"column_end":44}},{"value":"/ OpenFlags::SQLITE_OPEN_CREATE)`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10191,"byte_end":10227,"line_start":354,"line_end":354,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10232,"byte_end":10235,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10240,"byte_end":10258,"line_start":356,"line_end":356,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10263,"byte_end":10304,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ fn open_my_db() -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10309,"byte_end":10344,"line_start":358,"line_end":358,"column_start":5,"column_end":40}},{"value":"/     let path = \"./my_db.db3\";","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10349,"byte_end":10382,"line_start":359,"line_end":359,"column_start":5,"column_end":38}},{"value":"/     let db = Connection::open(&path)?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10387,"byte_end":10429,"line_start":360,"line_end":360,"column_start":5,"column_end":47}},{"value":"/     println!(\"{}\", db.is_autocommit());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10434,"byte_end":10477,"line_start":361,"line_end":361,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10482,"byte_end":10496,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10501,"byte_end":10506,"line_start":363,"line_end":363,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10511,"byte_end":10518,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10523,"byte_end":10526,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10531,"byte_end":10544,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10549,"byte_end":10552,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10557,"byte_end":10626,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10631,"byte_end":10686,"line_start":369,"line_end":369,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10691,"byte_end":10700,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11054,"byte_end":11068,"line_start":382,"line_end":382,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"pub fn open_in_memory() -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10868,"byte_end":10926,"line_start":376,"line_end":376,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10931,"byte_end":10934,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10939,"byte_end":10952,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10957,"byte_end":10960,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":10965,"byte_end":11028,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11033,"byte_end":11042,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11573,"byte_end":11588,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"pub fn open_with_flags<P: AsRef<Path>>(P, OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11201,"byte_end":11248,"line_start":387,"line_end":387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11253,"byte_end":11256,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11261,"byte_end":11352,"line_start":389,"line_end":389,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11357,"byte_end":11379,"line_start":390,"line_end":390,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11384,"byte_end":11387,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11392,"byte_end":11405,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11410,"byte_end":11413,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11418,"byte_end":11487,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11492,"byte_end":11547,"line_start":395,"line_end":395,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11552,"byte_end":11561,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12422,"byte_end":12445,"line_start":417,"line_end":417,"column_start":12,"column_end":35},"name":"open_with_flags_and_vfs","qualname":"<Connection>::open_with_flags_and_vfs","value":"pub fn open_with_flags_and_vfs<P: AsRef<Path>>(P, OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database using the specific flags and\n vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database using the specific flags and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":11988,"byte_end":12063,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ vfs name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12068,"byte_end":12081,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12086,"byte_end":12089,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12094,"byte_end":12185,"line_start":409,"line_end":409,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12190,"byte_end":12212,"line_start":410,"line_end":410,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12217,"byte_end":12220,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12225,"byte_end":12238,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12243,"byte_end":12246,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if either `path` or `vfs` cannot be converted to a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12251,"byte_end":12323,"line_start":414,"line_end":414,"column_start":5,"column_end":77}},{"value":"/ C-compatible string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12328,"byte_end":12396,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12401,"byte_end":12410,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13254,"byte_end":13279,"line_start":440,"line_end":440,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"pub fn open_in_memory_with_flags(OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":12937,"byte_end":12995,"line_start":431,"line_end":431,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13000,"byte_end":13003,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13008,"byte_end":13099,"line_start":433,"line_end":433,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13104,"byte_end":13126,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13131,"byte_end":13134,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13139,"byte_end":13152,"line_start":436,"line_end":436,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13157,"byte_end":13160,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13165,"byte_end":13228,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13233,"byte_end":13242,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13815,"byte_end":13848,"line_start":455,"line_end":455,"column_start":12,"column_end":45},"name":"open_in_memory_with_flags_and_vfs","qualname":"<Connection>::open_in_memory_with_flags_and_vfs","value":"pub fn open_in_memory_with_flags_and_vfs(OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database using the specific\n flags and vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database using the specific","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13388,"byte_end":13464,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ flags and vfs name.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13469,"byte_end":13492,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13497,"byte_end":13500,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13505,"byte_end":13596,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13601,"byte_end":13623,"line_start":448,"line_end":448,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13628,"byte_end":13631,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13636,"byte_end":13649,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13654,"byte_end":13657,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if vfs` cannot be converted to a C-compatible","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13662,"byte_end":13729,"line_start":452,"line_end":452,"column_start":5,"column_end":72}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13734,"byte_end":13789,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13794,"byte_end":13803,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14623,"byte_end":14636,"line_start":480,"line_end":480,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"pub fn execute_batch(&Self, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[{"value":"/ Convenience method to run multiple SQL statements (that cannot take any","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":13981,"byte_end":14056,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ parameters).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14061,"byte_end":14077,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14082,"byte_end":14085,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14090,"byte_end":14104,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14109,"byte_end":14112,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14117,"byte_end":14135,"line_start":464,"line_end":464,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14140,"byte_end":14181,"line_start":465,"line_end":465,"column_start":5,"column_end":46}},{"value":"/ fn create_tables(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14186,"byte_end":14241,"line_start":466,"line_end":466,"column_start":5,"column_end":60}},{"value":"/     conn.execute_batch(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14246,"byte_end":14273,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/         \"BEGIN;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14278,"byte_end":14297,"line_start":468,"line_end":468,"column_start":5,"column_end":24}},{"value":"/          CREATE TABLE foo(x INTEGER);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14302,"byte_end":14343,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/          CREATE TABLE bar(y TEXT);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14348,"byte_end":14386,"line_start":470,"line_end":470,"column_start":5,"column_end":43}},{"value":"/          COMMIT;\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14391,"byte_end":14413,"line_start":471,"line_end":471,"column_start":5,"column_end":27}},{"value":"/     )","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14418,"byte_end":14427,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14432,"byte_end":14437,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14442,"byte_end":14449,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14454,"byte_end":14457,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14462,"byte_end":14475,"line_start":476,"line_end":476,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14480,"byte_end":14483,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14488,"byte_end":14563,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":14568,"byte_end":14611,"line_start":479,"line_end":479,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16847,"byte_end":16854,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"pub fn execute<P: Params>(&Self, &str, P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15174,"byte_end":15243,"line_start":497,"line_end":497,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15248,"byte_end":15251,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15256,"byte_end":15331,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15336,"byte_end":15372,"line_start":500,"line_end":500,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15377,"byte_end":15380,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15385,"byte_end":15399,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15404,"byte_end":15407,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ### With positional params","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15412,"byte_end":15442,"line_start":504,"line_end":504,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15447,"byte_end":15450,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15455,"byte_end":15473,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15478,"byte_end":15511,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15516,"byte_end":15555,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\", [1i32]) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15560,"byte_end":15640,"line_start":509,"line_end":509,"column_start":5,"column_end":85}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15645,"byte_end":15714,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15719,"byte_end":15778,"line_start":511,"line_end":511,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15783,"byte_end":15792,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15797,"byte_end":15802,"line_start":513,"line_end":513,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15807,"byte_end":15814,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15819,"byte_end":15822,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ### With positional params of varying types","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15827,"byte_end":15874,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15879,"byte_end":15882,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15887,"byte_end":15905,"line_start":518,"line_end":518,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{params, Connection};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15910,"byte_end":15951,"line_start":519,"line_end":519,"column_start":5,"column_end":46}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":15956,"byte_end":15995,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16000,"byte_end":16027,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/         \"UPDATE foo SET bar = 'baz' WHERE qux = ?1 AND quux = ?2\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16032,"byte_end":16102,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/         params![1i32, 1.5f64],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16107,"byte_end":16141,"line_start":523,"line_end":523,"column_start":5,"column_end":39}},{"value":"/     ) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16146,"byte_end":16157,"line_start":524,"line_end":524,"column_start":5,"column_end":16}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16162,"byte_end":16231,"line_start":525,"line_end":525,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16236,"byte_end":16295,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16300,"byte_end":16309,"line_start":527,"line_end":527,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16314,"byte_end":16319,"line_start":528,"line_end":528,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16324,"byte_end":16331,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16336,"byte_end":16339,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ### With named params","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16344,"byte_end":16369,"line_start":531,"line_end":531,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16374,"byte_end":16377,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16382,"byte_end":16400,"line_start":533,"line_end":533,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16405,"byte_end":16446,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16451,"byte_end":16502,"line_start":535,"line_end":535,"column_start":5,"column_end":56}},{"value":"/     conn.execute(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16507,"byte_end":16528,"line_start":536,"line_end":536,"column_start":5,"column_end":26}},{"value":"/         \"INSERT INTO test (name) VALUES (:name)\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16533,"byte_end":16586,"line_start":537,"line_end":537,"column_start":5,"column_end":58}},{"value":"/         &[(\":name\", \"one\")],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16591,"byte_end":16623,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/     )","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16628,"byte_end":16637,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16642,"byte_end":16647,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16652,"byte_end":16659,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16664,"byte_end":16667,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16672,"byte_end":16685,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16690,"byte_end":16693,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16698,"byte_end":16773,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16778,"byte_end":16821,"line_start":546,"line_end":546,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":16826,"byte_end":16835,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17298,"byte_end":17302,"line_start":559,"line_end":559,"column_start":12,"column_end":16},"name":"path","qualname":"<Connection>::path","value":"pub fn path(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the database file, if one exists and is known.","sig":null,"attributes":[{"value":"/ Returns the path to the database file, if one exists and is known.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17041,"byte_end":17111,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17116,"byte_end":17119,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ Note that in some cases [PRAGMA","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17124,"byte_end":17159,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ database_list](https://sqlite.org/pragma.html#pragma_database_list) is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17164,"byte_end":17238,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ likely to be more robust.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17243,"byte_end":17272,"line_start":557,"line_end":557,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17277,"byte_end":17286,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17840,"byte_end":17853,"line_start":574,"line_end":574,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"pub fn execute_named(&Self, &str, &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement with","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17369,"byte_end":17442,"line_start":563,"line_end":563,"column_start":5,"column_end":78}},{"value":"/ named parameter(s).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17447,"byte_end":17470,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17475,"byte_end":17478,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17483,"byte_end":17558,"line_start":566,"line_end":566,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17563,"byte_end":17599,"line_start":567,"line_end":567,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17604,"byte_end":17607,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17612,"byte_end":17625,"line_start":569,"line_end":569,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17630,"byte_end":17633,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17638,"byte_end":17713,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17718,"byte_end":17761,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `execute` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17766,"byte_end":17828,"line_start":573,"line_end":573,"column_start":5,"column_end":67}},{"value":"allow(deprecated)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":17990,"byte_end":18011,"line_start":576,"line_end":576,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18387,"byte_end":18404,"line_start":588,"line_end":588,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"pub fn last_insert_rowid(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[{"value":"/ Get the SQLite rowid of the most recent successful INSERT.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18173,"byte_end":18235,"line_start":583,"line_end":583,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18240,"byte_end":18243,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_last_insert_rowid](https://www.sqlite.org/c3ref/last_insert_rowid.html) under","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18248,"byte_end":18343,"line_start":585,"line_end":585,"column_start":5,"column_end":100}},{"value":"/ the hood.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18348,"byte_end":18361,"line_start":586,"line_end":586,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18366,"byte_end":18375,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19426,"byte_end":19435,"line_start":620,"line_end":620,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"pub fn query_row<T, P, F>(&Self, &str, P, F) -> Result<T> where P: Params,\nF: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18481,"byte_end":18551,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18556,"byte_end":18571,"line_start":593,"line_end":593,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18576,"byte_end":18579,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18584,"byte_end":18598,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18603,"byte_end":18606,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18611,"byte_end":18629,"line_start":597,"line_end":597,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result, Connection};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18634,"byte_end":18675,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18680,"byte_end":18742,"line_start":599,"line_end":599,"column_start":5,"column_end":67}},{"value":"/     conn.query_row(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18747,"byte_end":18770,"line_start":600,"line_end":600,"column_start":5,"column_end":28}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18775,"byte_end":18839,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/         [],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18844,"byte_end":18859,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/         |row| row.get(0),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18864,"byte_end":18893,"line_start":603,"line_end":603,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18898,"byte_end":18907,"line_start":604,"line_end":604,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18912,"byte_end":18917,"line_start":605,"line_end":605,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18922,"byte_end":18929,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18934,"byte_end":18937,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":18942,"byte_end":19015,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19020,"byte_end":19032,"line_start":609,"line_end":609,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19037,"byte_end":19040,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19045,"byte_end":19118,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19123,"byte_end":19195,"line_start":612,"line_end":612,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19200,"byte_end":19238,"line_start":613,"line_end":613,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19243,"byte_end":19246,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19251,"byte_end":19264,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19269,"byte_end":19272,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19277,"byte_end":19352,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19357,"byte_end":19400,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19405,"byte_end":19414,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20355,"byte_end":20370,"line_start":645,"line_end":645,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"pub fn query_row_named<T, F>(&Self, &str, &[(&str, &dyn ToSql)], F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19689,"byte_end":19762,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19767,"byte_end":19803,"line_start":631,"line_end":631,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19808,"byte_end":19811,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19816,"byte_end":19889,"line_start":633,"line_end":633,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19894,"byte_end":19906,"line_start":634,"line_end":634,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19911,"byte_end":19914,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19919,"byte_end":19992,"line_start":636,"line_end":636,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":19997,"byte_end":20069,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20074,"byte_end":20112,"line_start":638,"line_end":638,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20117,"byte_end":20120,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20125,"byte_end":20138,"line_start":640,"line_end":640,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20143,"byte_end":20146,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20151,"byte_end":20226,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20231,"byte_end":20274,"line_start":643,"line_end":643,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `query_row` with named params now.\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20279,"byte_end":20343,"line_start":644,"line_end":644,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21470,"byte_end":21488,"line_start":678,"line_end":678,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"pub fn query_row_and_then<T, E, P, F>(&Self, &str, P, F) -> Result<T, E> where\nP: Params, F: FnOnce(&Row) -> Result<T, E>, E: convert::From<Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20553,"byte_end":20623,"line_start":652,"line_end":652,"column_start":5,"column_end":75}},{"value":"/ single row, and execute a mapping via `f` on that returned row with","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20628,"byte_end":20699,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/ the possibility of failure. The `Result` type of `f` must implement","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20704,"byte_end":20775,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ `std::convert::From<Error>`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20780,"byte_end":20812,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20817,"byte_end":20820,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20825,"byte_end":20839,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20844,"byte_end":20847,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20852,"byte_end":20870,"line_start":659,"line_end":659,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result, Connection};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20875,"byte_end":20916,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20921,"byte_end":20983,"line_start":661,"line_end":661,"column_start":5,"column_end":67}},{"value":"/     conn.query_row_and_then(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":20988,"byte_end":21020,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21025,"byte_end":21089,"line_start":663,"line_end":663,"column_start":5,"column_end":69}},{"value":"/         [],","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21094,"byte_end":21109,"line_start":664,"line_end":664,"column_start":5,"column_end":20}},{"value":"/         |row| row.get(0),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21114,"byte_end":21143,"line_start":665,"line_end":665,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21148,"byte_end":21157,"line_start":666,"line_end":666,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21162,"byte_end":21167,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21172,"byte_end":21179,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21184,"byte_end":21187,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21192,"byte_end":21265,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21270,"byte_end":21282,"line_start":671,"line_end":671,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21287,"byte_end":21290,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21295,"byte_end":21308,"line_start":673,"line_end":673,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21313,"byte_end":21316,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21321,"byte_end":21396,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21401,"byte_end":21444,"line_start":676,"line_end":676,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21449,"byte_end":21458,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22461,"byte_end":22468,"line_start":710,"line_end":710,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"pub fn prepare(&Self, &str) -> Result<Statement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21856,"byte_end":21898,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21903,"byte_end":21906,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21911,"byte_end":21925,"line_start":693,"line_end":693,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21930,"byte_end":21933,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21938,"byte_end":21956,"line_start":695,"line_end":695,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":21961,"byte_end":22002,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22007,"byte_end":22066,"line_start":697,"line_end":697,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22071,"byte_end":22148,"line_start":698,"line_end":698,"column_start":5,"column_end":82}},{"value":"/     stmt.execute([\"Joe Smith\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22153,"byte_end":22190,"line_start":699,"line_end":699,"column_start":5,"column_end":42}},{"value":"/     stmt.execute([\"Bob Jones\"])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22195,"byte_end":22232,"line_start":700,"line_end":700,"column_start":5,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22237,"byte_end":22251,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22256,"byte_end":22261,"line_start":702,"line_end":702,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22266,"byte_end":22273,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22278,"byte_end":22281,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22286,"byte_end":22299,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22304,"byte_end":22307,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22312,"byte_end":22387,"line_start":707,"line_end":707,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22392,"byte_end":22435,"line_start":708,"line_end":708,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22440,"byte_end":22449,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22956,"byte_end":22961,"line_start":724,"line_end":724,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"pub fn close(Self) -> Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[{"value":"/ Close the SQLite connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22573,"byte_end":22605,"line_start":714,"line_end":714,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22610,"byte_end":22613,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ This is functionally equivalent to the `Drop` implementation for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22618,"byte_end":22686,"line_start":716,"line_end":716,"column_start":5,"column_end":73}},{"value":"/ `Connection` except that on failure, it returns an error and the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22691,"byte_end":22759,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ connection itself (presumably so closing can be attempted again).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22764,"byte_end":22833,"line_start":718,"line_end":718,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22838,"byte_end":22841,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22846,"byte_end":22859,"line_start":720,"line_end":720,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22864,"byte_end":22867,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22872,"byte_end":22930,"line_start":722,"line_end":722,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":22935,"byte_end":22944,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28583,"byte_end":28589,"line_start":866,"line_end":866,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"pub unsafe fn handle(&Self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[{"value":"/ Get access to the underlying SQLite database connection handle.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28032,"byte_end":28099,"line_start":852,"line_end":852,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28104,"byte_end":28107,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28112,"byte_end":28125,"line_start":854,"line_end":854,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28130,"byte_end":28133,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ You should not need to use this function. If you do need to, please","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28138,"byte_end":28209,"line_start":856,"line_end":856,"column_start":5,"column_end":76}},{"value":"/ [open an issue on the rusqlite repository](https://github.com/rusqlite/rusqlite/issues) and describe","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28214,"byte_end":28318,"line_start":857,"line_end":857,"column_start":5,"column_end":109}},{"value":"/ your use case.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28323,"byte_end":28341,"line_start":858,"line_end":858,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28346,"byte_end":28349,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28354,"byte_end":28366,"line_start":860,"line_end":860,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28371,"byte_end":28374,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it gives you raw access","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28379,"byte_end":28438,"line_start":862,"line_end":862,"column_start":5,"column_end":64}},{"value":"/ to the SQLite connection, and what you do with it could impact the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28443,"byte_end":28513,"line_start":863,"line_end":863,"column_start":5,"column_end":75}},{"value":"/ safety of this `Connection`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28518,"byte_end":28550,"line_start":864,"line_end":864,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28555,"byte_end":28564,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28991,"byte_end":29002,"line_start":879,"line_end":879,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Connection>::from_handle","value":"pub unsafe fn from_handle(*mut ffi::sqlite3) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Connection` from a raw handle.","sig":null,"attributes":[{"value":"/ Create a `Connection` from a raw handle.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28661,"byte_end":28705,"line_start":870,"line_end":870,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28710,"byte_end":28713,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ The underlying SQLite database connection handle will not be closed when","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28718,"byte_end":28794,"line_start":872,"line_end":872,"column_start":5,"column_end":81}},{"value":"/ the returned connection is dropped/closed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28799,"byte_end":28845,"line_start":873,"line_end":873,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28850,"byte_end":28853,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28858,"byte_end":28870,"line_start":875,"line_end":875,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28875,"byte_end":28878,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may impact the Connection.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28883,"byte_end":28958,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":28963,"byte_end":28972,"line_start":878,"line_end":878,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":29462,"byte_end":29482,"line_start":892,"line_end":892,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"pub fn get_interrupt_handle(&Self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[{"value":"/ Get access to a handle that can be used to interrupt long running","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":29330,"byte_end":29399,"line_start":889,"line_end":889,"column_start":5,"column_end":74}},{"value":"/ queries from another thread.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":29404,"byte_end":29436,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":29441,"byte_end":29450,"line_start":891,"line_end":891,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30054,"byte_end":30067,"line_start":912,"line_end":912,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"pub fn is_autocommit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[{"value":"/ Test for auto-commit mode.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":29956,"byte_end":29986,"line_start":909,"line_end":909,"column_start":5,"column_end":35}},{"value":"/ Autocommit mode is on by default.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":29991,"byte_end":30028,"line_start":910,"line_end":910,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30033,"byte_end":30042,"line_start":911,"line_end":911,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31318,"byte_end":31323,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"Batch","qualname":"::Batch","value":"Batch {  }","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626}],"decl_id":null,"docs":" Batch iterator\n ```rust\n use rusqlite::{Batch, Connection, Result};","sig":null,"attributes":[{"value":"/ Batch iterator","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30861,"byte_end":30879,"line_start":940,"line_end":940,"column_start":1,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30880,"byte_end":30891,"line_start":941,"line_end":941,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{Batch, Connection, Result};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30892,"byte_end":30938,"line_start":942,"line_end":942,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30939,"byte_end":30942,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30943,"byte_end":30972,"line_start":944,"line_end":944,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30973,"byte_end":31022,"line_start":945,"line_end":945,"column_start":1,"column_end":50}},{"value":"/     let sql = r\"","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31023,"byte_end":31043,"line_start":946,"line_end":946,"column_start":1,"column_end":21}},{"value":"/     CREATE TABLE tbl1 (col);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31044,"byte_end":31076,"line_start":947,"line_end":947,"column_start":1,"column_end":33}},{"value":"/     CREATE TABLE tbl2 (col);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31077,"byte_end":31109,"line_start":948,"line_end":948,"column_start":1,"column_end":33}},{"value":"/     \";","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31110,"byte_end":31120,"line_start":949,"line_end":949,"column_start":1,"column_end":11}},{"value":"/     let mut batch = Batch::new(&conn, sql);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31121,"byte_end":31168,"line_start":950,"line_end":950,"column_start":1,"column_end":48}},{"value":"/     while let Some(mut stmt) = batch.next()? {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31169,"byte_end":31219,"line_start":951,"line_end":951,"column_start":1,"column_end":51}},{"value":"/         stmt.execute([])?;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31220,"byte_end":31250,"line_start":952,"line_end":952,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31251,"byte_end":31260,"line_start":953,"line_end":953,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31261,"byte_end":31275,"line_start":954,"line_end":954,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31276,"byte_end":31281,"line_start":955,"line_end":955,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31282,"byte_end":31289,"line_start":956,"line_end":956,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31478,"byte_end":31481,"line_start":966,"line_end":966,"column_start":12,"column_end":15},"name":"new","qualname":"<Batch>::new","value":"pub fn new(&'conn Connection, &'sql str) -> Batch","parent":null,"children":[],"decl_id":null,"docs":" Constructor\n","sig":null,"attributes":[{"value":"/ Constructor","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31451,"byte_end":31466,"line_start":965,"line_end":965,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31771,"byte_end":31775,"line_start":974,"line_end":974,"column_start":12,"column_end":16},"name":"next","qualname":"<Batch>::next","value":"pub fn next(&mut Self) -> Result<Option<Statement>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates on each batch statements.","sig":null,"attributes":[{"value":"/ Iterates on each batch statements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31595,"byte_end":31633,"line_start":970,"line_end":970,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31638,"byte_end":31641,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` when batch is completed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31646,"byte_end":31693,"line_start":972,"line_end":972,"column_start":5,"column_end":52}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31698,"byte_end":31738,"line_start":973,"line_end":973,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":32670,"byte_end":32679,"line_start":1005,"line_end":1005,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":2632}],"decl_id":null,"docs":" Flags for opening SQLite database connections.\n See [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":13605095,"byte_end":13605104,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":32847,"byte_end":32868,"line_start":1008,"line_end":1008,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened in read-only mode.\n If the database does not already exist, an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33164,"byte_end":33186,"line_start":1012,"line_end":1012,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened for reading and writing if possible,\n or reading only if the file is write protected by the operating system.\n In either case the database must already exist, otherwise an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33299,"byte_end":33317,"line_start":1014,"line_end":1014,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is created if it does not already exist\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33440,"byte_end":33455,"line_start":1016,"line_end":1016,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The filename can be interpreted as a URI if this flag is set.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33561,"byte_end":33579,"line_start":1018,"line_end":1018,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database will be opened as an in-memory database.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33700,"byte_end":33720,"line_start":1020,"line_end":1020,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The new database connection will use the \"multi-thread\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33850,"byte_end":33872,"line_start":1022,"line_end":1022,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The new database connection will use the \"serialized\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":33977,"byte_end":34001,"line_start":1024,"line_end":1024,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened shared cache enabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34090,"byte_end":34115,"line_start":1026,"line_end":1026,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened shared cache disabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34217,"byte_end":34237,"line_start":1028,"line_end":1028,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NOFOLLOW","qualname":"::OpenFlags::SQLITE_OPEN_NOFOLLOW","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database filename is not allowed to be a symbolic link.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34302,"byte_end":34323,"line_start":1030,"line_end":1030,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_EXRESCODE","qualname":"::OpenFlags::SQLITE_OPEN_EXRESCODE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" Extended result codes.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35600,"byte_end":35628,"line_start":1062,"line_end":1062,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"pub unsafe fn bypass_sqlite_initialization()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[{"value":"/ rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34591,"byte_end":34669,"line_start":1043,"line_end":1043,"column_start":1,"column_end":79}},{"value":"/ later. If you are running against a SQLite older than that, rusqlite","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34670,"byte_end":34742,"line_start":1044,"line_end":1044,"column_start":1,"column_end":73}},{"value":"/ attempts to ensure safety by performing configuration and initialization of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34743,"byte_end":34822,"line_start":1045,"line_end":1045,"column_start":1,"column_end":80}},{"value":"/ SQLite itself the first time you","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34823,"byte_end":34859,"line_start":1046,"line_end":1046,"column_start":1,"column_end":37}},{"value":"/ attempt to open a connection. By default, rusqlite panics if that","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34860,"byte_end":34929,"line_start":1047,"line_end":1047,"column_start":1,"column_end":70}},{"value":"/ initialization fails, since that could mean SQLite has been initialized in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34930,"byte_end":35008,"line_start":1048,"line_end":1048,"column_start":1,"column_end":79}},{"value":"/ single-thread mode.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35009,"byte_end":35032,"line_start":1049,"line_end":1049,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35033,"byte_end":35036,"line_start":1050,"line_end":1050,"column_start":1,"column_end":4}},{"value":"/ If you are encountering that panic _and_ can ensure that SQLite has been","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35037,"byte_end":35113,"line_start":1051,"line_end":1051,"column_start":1,"column_end":77}},{"value":"/ initialized in either multi-thread or serialized mode, call this function","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35114,"byte_end":35191,"line_start":1052,"line_end":1052,"column_start":1,"column_end":78}},{"value":"/ prior to attempting to open a connection and rusqlite's initialization","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35192,"byte_end":35266,"line_start":1053,"line_end":1053,"column_start":1,"column_end":75}},{"value":"/ process will by skipped.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35267,"byte_end":35295,"line_start":1054,"line_end":1054,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35296,"byte_end":35299,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35300,"byte_end":35312,"line_start":1056,"line_end":1056,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35313,"byte_end":35316,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because if you call it and SQLite has actually been","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35317,"byte_end":35396,"line_start":1058,"line_end":1058,"column_start":1,"column_end":80}},{"value":"/ configured to run in single-thread mode,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35397,"byte_end":35441,"line_start":1059,"line_end":1059,"column_start":1,"column_end":45}},{"value":"/ you may encounter memory errors or data corruption or any number of terrible","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35442,"byte_end":35522,"line_start":1060,"line_end":1060,"column_start":1,"column_end":81}},{"value":"/ things that should not be possible when you're using Rust.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35523,"byte_end":35585,"line_start":1061,"line_end":1061,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36206,"byte_end":36233,"line_start":1076,"line_end":1076,"column_start":15,"column_end":42},"name":"bypass_sqlite_version_check","qualname":"::bypass_sqlite_version_check","value":"pub unsafe fn bypass_sqlite_version_check()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite performs a one-time check that the runtime SQLite version is at\n least as new as the version of SQLite found when rusqlite was built.\n Bypassing this check may be dangerous; e.g., if you use features of SQLite\n that are not present in the runtime version.","sig":null,"attributes":[{"value":"/ rusqlite performs a one-time check that the runtime SQLite version is at","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35691,"byte_end":35767,"line_start":1066,"line_end":1066,"column_start":1,"column_end":77}},{"value":"/ least as new as the version of SQLite found when rusqlite was built.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35768,"byte_end":35840,"line_start":1067,"line_end":1067,"column_start":1,"column_end":73}},{"value":"/ Bypassing this check may be dangerous; e.g., if you use features of SQLite","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35841,"byte_end":35919,"line_start":1068,"line_end":1068,"column_start":1,"column_end":79}},{"value":"/ that are not present in the runtime version.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35920,"byte_end":35968,"line_start":1069,"line_end":1069,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35969,"byte_end":35972,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35973,"byte_end":35985,"line_start":1071,"line_end":1071,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35986,"byte_end":35989,"line_start":1072,"line_end":1072,"column_start":1,"column_end":4}},{"value":"/ If you are sure the runtime version is compatible with the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":35990,"byte_end":36052,"line_start":1073,"line_end":1073,"column_start":1,"column_end":63}},{"value":"/ build-time version for your usage, you can bypass the version check by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36053,"byte_end":36127,"line_start":1074,"line_end":1074,"column_start":1,"column_end":75}},{"value":"/ calling this function before your first connection attempt.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36128,"byte_end":36191,"line_start":1075,"line_end":1075,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36416,"byte_end":36431,"line_start":1082,"line_end":1082,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[{"value":"/ Allows interrupting a long-running computation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36353,"byte_end":36404,"line_start":1081,"line_end":1081,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36740,"byte_end":36749,"line_start":1092,"line_end":1092,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"pub fn interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[{"value":"/ Interrupt the query currently executing on another thread. This will","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36589,"byte_end":36661,"line_start":1090,"line_end":1090,"column_start":5,"column_end":77}},{"value":"/ cause that query to fail with a `SQLITE3_INTERRUPT` error.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36666,"byte_end":36728,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72916,"byte_end":72921,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":75366,"byte_end":75371,"line_start":180,"line_end":180,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":75505,"byte_end":75510,"line_start":187,"line_end":187,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":75831,"byte_end":75836,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":76785,"byte_end":76790,"line_start":221,"line_end":221,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":80250,"byte_end":80255,"line_start":296,"line_end":296,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":82789,"byte_end":82799,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":85841,"byte_end":85856,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89345,"byte_end":89355,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91737,"byte_end":91752,"line_start":73,"line_end":73,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91926,"byte_end":91941,"line_start":82,"line_end":82,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92079,"byte_end":92094,"line_start":89,"line_end":89,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92304,"byte_end":92319,"line_start":99,"line_end":99,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92747,"byte_end":92761,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99438,"byte_end":99444,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99724,"byte_end":99733,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110565,"byte_end":110575,"line_start":64,"line_end":64,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/inner_connection.rs","byte_start":115474,"byte_end":115489,"line_start":41,"line_end":41,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/inner_connection.rs","byte_start":124412,"byte_end":124427,"line_start":312,"line_end":312,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142526,"byte_end":142540,"line_start":342,"line_end":342,"column_start":20,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142615,"byte_end":142629,"line_start":349,"line_end":349,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":143035,"byte_end":143038,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":146870,"byte_end":146873,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":146966,"byte_end":146976,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/raw_statement.rs","byte_start":157081,"byte_end":157093,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/raw_statement.rs","byte_start":162269,"byte_end":162281,"line_start":216,"line_end":216,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":162794,"byte_end":162798,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165210,"byte_end":165214,"line_start":88,"line_end":88,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165627,"byte_end":165631,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165955,"byte_end":165958,"line_start":121,"line_end":121,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166556,"byte_end":166566,"line_start":147,"line_end":147,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":167137,"byte_end":167148,"line_start":171,"line_end":171,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":168191,"byte_end":168195,"line_start":206,"line_end":206,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169140,"byte_end":169143,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174050,"byte_end":174053,"line_start":366,"line_end":366,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180287,"byte_end":180296,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":208672,"byte_end":208681,"line_start":826,"line_end":826,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":209095,"byte_end":209104,"line_start":841,"line_end":841,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":209220,"byte_end":209229,"line_start":849,"line_end":849,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231571,"byte_end":231582,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235932,"byte_end":235943,"line_start":231,"line_end":231,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236099,"byte_end":236110,"line_start":241,"line_end":241,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236194,"byte_end":236203,"line_start":248,"line_end":248,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239642,"byte_end":239651,"line_start":359,"line_end":359,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239807,"byte_end":239816,"line_start":369,"line_end":369,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239900,"byte_end":239910,"line_start":376,"line_end":376,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":268239,"byte_end":268251,"line_start":35,"line_end":35,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":268834,"byte_end":268846,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269533,"byte_end":269545,"line_start":67,"line_end":67,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":271584,"byte_end":271590,"line_start":145,"line_end":145,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":271748,"byte_end":271751,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":271914,"byte_end":271916,"line_start":159,"line_end":159,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":272081,"byte_end":272084,"line_start":166,"line_end":166,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":272238,"byte_end":272241,"line_start":173,"line_end":173,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":273360,"byte_end":273366,"line_start":212,"line_end":212,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":273609,"byte_end":273614,"line_start":222,"line_end":222,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":276234,"byte_end":276245,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":277544,"byte_end":277555,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278327,"byte_end":278330,"line_start":104,"line_end":104,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278478,"byte_end":278481,"line_start":111,"line_end":111,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278634,"byte_end":278636,"line_start":118,"line_end":118,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278791,"byte_end":278794,"line_start":125,"line_end":125,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":280767,"byte_end":280773,"line_start":206,"line_end":206,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":281039,"byte_end":281042,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":281315,"byte_end":281320,"line_start":234,"line_end":234,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":281457,"byte_end":281463,"line_start":241,"line_end":241,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286844,"byte_end":286849,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286947,"byte_end":286952,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":287064,"byte_end":287069,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288183,"byte_end":288188,"line_start":84,"line_end":84,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288290,"byte_end":288295,"line_start":91,"line_end":91,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288401,"byte_end":288406,"line_start":98,"line_end":98,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288508,"byte_end":288513,"line_start":105,"line_end":105,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288619,"byte_end":288624,"line_start":112,"line_end":112,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288736,"byte_end":288741,"line_start":119,"line_end":119,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288929,"byte_end":288934,"line_start":132,"line_end":132,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289914,"byte_end":289922,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290304,"byte_end":290312,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294632,"byte_end":294637,"line_start":158,"line_end":158,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295141,"byte_end":295149,"line_start":174,"line_end":174,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295283,"byte_end":295291,"line_start":181,"line_end":181,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295416,"byte_end":295424,"line_start":188,"line_end":188,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295831,"byte_end":295839,"line_start":201,"line_end":201,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":255070,"byte_end":255074,"line_start":127,"line_end":127,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/param_cache.rs","byte_start":303777,"byte_end":303792,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":305759,"byte_end":305771,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308002,"byte_end":308014,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308119,"byte_end":308131,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308310,"byte_end":308322,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308610,"byte_end":308622,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308770,"byte_end":308782,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6684,"byte_end":6690,"line_start":232,"line_end":232,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9835,"byte_end":9845,"line_start":339,"line_end":339,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9864,"byte_end":9874,"line_start":341,"line_end":341,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9977,"byte_end":9987,"line_start":348,"line_end":348,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30678,"byte_end":30688,"line_start":932,"line_end":932,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31426,"byte_end":31431,"line_start":964,"line_end":964,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":32317,"byte_end":32322,"line_start":993,"line_end":993,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34365,"byte_end":34374,"line_start":1034,"line_end":1034,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36502,"byte_end":36517,"line_start":1086,"line_end":1086,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36542,"byte_end":36557,"line_start":1087,"line_end":1087,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36567,"byte_end":36582,"line_start":1089,"line_end":1089,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":2833,"byte_end":2839,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":315}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":3553,"byte_end":3558,"line_start":127,"line_end":127,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":969}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":72916,"byte_end":72921,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":75366,"byte_end":75371,"line_start":180,"line_end":180,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":75505,"byte_end":75510,"line_start":187,"line_end":187,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":75831,"byte_end":75836,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":76785,"byte_end":76790,"line_start":221,"line_end":221,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/error.rs","byte_start":80250,"byte_end":80255,"line_start":296,"line_end":296,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1367},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":82789,"byte_end":82799,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/busy.rs","byte_start":85841,"byte_end":85856,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":89345,"byte_end":89355,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91737,"byte_end":91752,"line_start":73,"line_end":73,"column_start":23,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":91926,"byte_end":91941,"line_start":82,"line_end":82,"column_start":26,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92079,"byte_end":92094,"line_start":89,"line_end":89,"column_start":15,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92304,"byte_end":92319,"line_start":99,"line_end":99,"column_start":6,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/cache.rs","byte_start":92747,"byte_end":92761,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99438,"byte_end":99444,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/column.rs","byte_start":99724,"byte_end":99733,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/config.rs","byte_start":110565,"byte_end":110575,"line_start":64,"line_end":64,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/inner_connection.rs","byte_start":115474,"byte_end":115489,"line_start":41,"line_end":41,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/inner_connection.rs","byte_start":124412,"byte_end":124427,"line_start":312,"line_end":312,"column_start":15,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":136004,"byte_end":136010,"line_start":157,"line_end":157,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":476},"to":{"krate":0,"index":480}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142526,"byte_end":142540,"line_start":342,"line_end":342,"column_start":20,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2084},"to":{"krate":0,"index":476}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/params.rs","byte_start":142615,"byte_end":142629,"line_start":349,"line_end":349,"column_start":20,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2084},"to":{"krate":0,"index":480}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":143035,"byte_end":143038,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":146870,"byte_end":146873,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/pragma.rs","byte_start":146966,"byte_end":146976,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/raw_statement.rs","byte_start":157081,"byte_end":157093,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/raw_statement.rs","byte_start":162269,"byte_end":162281,"line_start":216,"line_end":216,"column_start":15,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":162794,"byte_end":162798,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165210,"byte_end":165214,"line_start":88,"line_end":88,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165627,"byte_end":165631,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":165955,"byte_end":165958,"line_start":121,"line_end":121,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":675},"to":{"krate":26,"index":59}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":166556,"byte_end":166566,"line_start":147,"line_end":147,"column_start":25,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":167137,"byte_end":167148,"line_start":171,"line_end":171,"column_start":28,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":168191,"byte_end":168195,"line_start":206,"line_end":206,"column_start":43,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":650},"to":{"krate":27,"index":10}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":169140,"byte_end":169143,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174050,"byte_end":174053,"line_start":366,"line_end":366,"column_start":41,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/row.rs","byte_start":174513,"byte_end":174519,"line_start":383,"line_end":383,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":739},"to":{"krate":0,"index":742}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":180287,"byte_end":180296,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":208672,"byte_end":208681,"line_start":826,"line_end":826,"column_start":21,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":209095,"byte_end":209104,"line_start":841,"line_end":841,"column_start":15,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/statement.rs","byte_start":209220,"byte_end":209229,"line_start":849,"line_end":849,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":231571,"byte_end":231582,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":235932,"byte_end":235943,"line_start":231,"line_end":231,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2366},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236099,"byte_end":236110,"line_start":241,"line_end":241,"column_start":15,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2366},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":236194,"byte_end":236203,"line_start":248,"line_end":248,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239642,"byte_end":239651,"line_start":359,"line_end":359,"column_start":16,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":910},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239807,"byte_end":239816,"line_start":369,"line_end":369,"column_start":15,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":910},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/transaction.rs","byte_start":239900,"byte_end":239910,"line_start":376,"line_end":376,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":268239,"byte_end":268251,"line_start":35,"line_end":35,"column_start":20,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2373},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":268834,"byte_end":268846,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2373},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269533,"byte_end":269545,"line_start":67,"line_end":67,"column_start":16,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2373},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":269931,"byte_end":269936,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":271584,"byte_end":271590,"line_start":145,"line_end":145,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":271748,"byte_end":271751,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":271914,"byte_end":271916,"line_start":159,"line_end":159,"column_start":27,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":4648},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":272081,"byte_end":272084,"line_start":166,"line_end":166,"column_start":29,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":5966},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":272238,"byte_end":272241,"line_start":173,"line_end":173,"column_start":18,"column_end":21},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":273360,"byte_end":273366,"line_start":212,"line_end":212,"column_start":30,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":2,"index":43439},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/from_sql.rs","byte_start":273609,"byte_end":273614,"line_start":222,"line_end":222,"column_start":18,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2489},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":276234,"byte_end":276245,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2411},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":277544,"byte_end":277555,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2411},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278327,"byte_end":278330,"line_start":104,"line_end":104,"column_start":45,"column_end":48},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":663},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278478,"byte_end":278481,"line_start":111,"line_end":111,"column_start":35,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278634,"byte_end":278636,"line_start":118,"line_end":118,"column_start":44,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":4648},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":278791,"byte_end":278794,"line_start":125,"line_end":125,"column_start":46,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":5966},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":280767,"byte_end":280773,"line_start":206,"line_end":206,"column_start":16,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":281039,"byte_end":281042,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":281315,"byte_end":281320,"line_start":234,"line_end":234,"column_start":16,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2489},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/to_sql.rs","byte_start":281457,"byte_end":281463,"line_start":241,"line_end":241,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":2,"index":43439},"to":{"krate":0,"index":1080}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286844,"byte_end":286849,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":286947,"byte_end":286952,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":287064,"byte_end":287069,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288183,"byte_end":288188,"line_start":84,"line_end":84,"column_start":20,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288290,"byte_end":288295,"line_start":91,"line_end":91,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288401,"byte_end":288406,"line_start":98,"line_end":98,"column_start":20,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288508,"byte_end":288513,"line_start":105,"line_end":105,"column_start":23,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288619,"byte_end":288624,"line_start":112,"line_end":112,"column_start":24,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288736,"byte_end":288741,"line_start":119,"line_end":119,"column_start":29,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value.rs","byte_start":288929,"byte_end":288934,"line_start":132,"line_end":132,"column_start":6,"column_end":11},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":289914,"byte_end":289922,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":290304,"byte_end":290312,"line_start":36,"line_end":36,"column_start":10,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":294632,"byte_end":294637,"line_start":158,"line_end":158,"column_start":29,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295141,"byte_end":295149,"line_start":174,"line_end":174,"column_start":28,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295283,"byte_end":295291,"line_start":181,"line_end":181,"column_start":29,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295416,"byte_end":295424,"line_start":188,"line_end":188,"column_start":30,"column_end":38},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/value_ref.rs","byte_start":295831,"byte_end":295839,"line_start":201,"line_end":201,"column_start":33,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/types/mod.rs","byte_start":255070,"byte_end":255074,"line_start":127,"line_end":127,"column_start":23,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2559},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/param_cache.rs","byte_start":303777,"byte_end":303792,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":305759,"byte_end":305771,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308002,"byte_end":308014,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308119,"byte_end":308131,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308310,"byte_end":308322,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308610,"byte_end":308622,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/util/small_cstr.rs","byte_start":308770,"byte_end":308782,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":6684,"byte_end":6690,"line_start":232,"line_end":232,"column_start":34,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":1279}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9835,"byte_end":9845,"line_start":339,"line_end":339,"column_start":22,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9864,"byte_end":9874,"line_start":341,"line_end":341,"column_start":15,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":9977,"byte_end":9987,"line_start":348,"line_end":348,"column_start":6,"column_end":16},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":30678,"byte_end":30688,"line_start":932,"line_end":932,"column_start":21,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":31426,"byte_end":31431,"line_start":964,"line_end":964,"column_start":19,"column_end":24},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":32317,"byte_end":32322,"line_start":993,"line_end":993,"column_start":26,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2621},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":34365,"byte_end":34374,"line_start":1034,"line_end":1034,"column_start":18,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36502,"byte_end":36517,"line_start":1086,"line_end":1086,"column_start":22,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36542,"byte_end":36557,"line_start":1087,"line_end":1087,"column_start":22,"column_end":37},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1360},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.26.3/src/lib.rs","byte_start":36567,"byte_end":36582,"line_start":1089,"line_end":1089,"column_start":6,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1360},"to":{"krate":4294967295,"index":4294967295}}]}