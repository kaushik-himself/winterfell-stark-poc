{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0","program":"/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","winter_math","--edition=2021","/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=caa6979d5adfb8a1","-C","extra-filename=-caa6979d5adfb8a1","--out-dir","/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","-L","dependency=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","--extern","utils=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_utils-7e9ca64107c5b293.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_math-caa6979d5adfb8a1.rmeta"},"prelude":{"crate_id":{"name":"winter_math","disambiguator":[7939711538366881299,0]},"crate_root":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src","external_crates":[{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/serial.rs","num":18,"id":{"name":"winter_utils","disambiguator":[6543379861855309929,0]}}],"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":182,"byte_end":5522,"line_start":6,"line_end":117,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1449},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/mod.rs","byte_start":55812,"byte_end":55825,"line_start":14,"line_end":14,"column_start":22,"column_end":35},"alias_span":null,"name":"CubeExtension","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/mod.rs","byte_start":55827,"byte_end":55840,"line_start":14,"line_end":14,"column_start":37,"column_end":50},"alias_span":null,"name":"QuadExtension","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4979,"byte_end":4994,"line_start":100,"line_end":100,"column_start":17,"column_end":32},"alias_span":null,"name":"ExtensibleField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":223},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4996,"byte_end":5008,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"alias_span":null,"name":"FieldElement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5010,"byte_end":5020,"line_start":100,"line_end":100,"column_start":48,"column_end":58},"alias_span":null,"name":"StarkField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5234,"byte_end":5238,"line_start":107,"line_end":107,"column_start":27,"column_end":31},"alias_span":null,"name":"f128","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5266,"byte_end":5269,"line_start":108,"line_end":108,"column_start":27,"column_end":30},"alias_span":null,"name":"f62","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5297,"byte_end":5300,"line_start":109,"line_end":109,"column_start":27,"column_end":30},"alias_span":null,"name":"f64","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1449},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5328,"byte_end":5341,"line_start":110,"line_end":110,"column_start":27,"column_end":40},"alias_span":null,"name":"CubeExtension","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1413},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5369,"byte_end":5382,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"alias_span":null,"name":"QuadExtension","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5426,"byte_end":5438,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"alias_span":null,"name":"add_in_place","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5440,"byte_end":5455,"line_start":116,"line_end":116,"column_start":19,"column_end":34},"alias_span":null,"name":"batch_inversion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1339},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5457,"byte_end":5473,"line_start":116,"line_end":116,"column_start":36,"column_end":52},"alias_span":null,"name":"get_power_series","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1341},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5475,"byte_end":5503,"line_start":116,"line_end":116,"column_start":54,"column_end":82},"alias_span":null,"name":"get_power_series_with_offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1352},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5505,"byte_end":5509,"line_start":116,"line_end":116,"column_start":84,"column_end":88},"alias_span":null,"name":"log2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5511,"byte_end":5518,"line_start":116,"line_end":116,"column_start":90,"column_end":97},"alias_span":null,"name":"mul_acc","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":182,"byte_end":5522,"line_start":6,"line_end":117,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":92},{"krate":0,"index":151},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1322},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373}],"decl_id":null,"docs":" This crate contains modules with mathematical operations needed in STARK proof generation\n and verification.","sig":null,"attributes":[{"value":"/ This crate contains modules with mathematical operations needed in STARK proof generation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":182,"byte_end":275,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/ and verification.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":276,"byte_end":297,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":298,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise stated, all operations happen in [finite fields](https://en.wikipedia.org/wiki/Finite_field).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":302,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Finite fields","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":421,"byte_end":440,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ [Finite field](fields) modules implements arithmetic operations in STARK-friendly finite","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":441,"byte_end":533,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"/ fields. The operation include:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":534,"byte_end":568,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":569,"byte_end":572,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * Basic arithmetic operations: addition, multiplication, subtraction, division, inversion.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":573,"byte_end":667,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ * Drawing random and pseudo-random elements from the field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":668,"byte_end":731,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ * Computing roots of unity of a given order.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":732,"byte_end":780,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":781,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two implementations of finite fields:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":785,"byte_end":847,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":848,"byte_end":851,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * A 128-bit field with modulus 2<sup>128</sup> - 45 * 2<sup>40</sup> + 1. This field was not","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":852,"byte_end":948,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/   chosen with any significant thought given to performance, and the implementation of most","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":949,"byte_end":1043,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/   operations is sub-optimal as well. Proofs generated in this field can support security level","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1044,"byte_end":1142,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/   of ~100 bits. If higher level of security is desired, proofs must be generated in a quadratic","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1143,"byte_end":1242,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/   extension of the field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1243,"byte_end":1272,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ * A 62-bit field with modulus 2<sup>62</sup> - 111 * 2<sup>39</sup> + 1. This field supports","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1273,"byte_end":1369,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/   very fast modular arithmetic including branchless multiplication and addition. To achieve","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1370,"byte_end":1465,"line_start":27,"line_end":27,"column_start":1,"column_end":96}},{"value":"/   adequate security (i.e. ~100 bits), proofs must be generated in a quadratic extension of this","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1466,"byte_end":1565,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"/   field. For higher levels of security, a cubic extension field should be used.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1566,"byte_end":1649,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/ * A 64-bit field with modulus 2<sup>64</sup> - 2<sup>32</sup> + 1. This field is about 15%","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1650,"byte_end":1744,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/   slower than the 62-bit field described above, but it has a number of other attractive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1745,"byte_end":1836,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/   properties. To achieve adequate security (i.e. ~100 bits), proofs must be generated in a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1837,"byte_end":1931,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/   quadratic extension of this field. For higher levels of security, a cubic extension field","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":1932,"byte_end":2027,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"/   should be used.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2028,"byte_end":2049,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2050,"byte_end":2053,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Extension fields","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2054,"byte_end":2077,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Currently, the library provides a generic way to create quadratic and cubic extensions of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2082,"byte_end":2175,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/ supported STARK fields. This can be done by implementing [ExtensibleField] trait for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2176,"byte_end":2264,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ degrees 2 and 3.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2265,"byte_end":2285,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2286,"byte_end":2289,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Quadratic extension fields are defined using the following irreducible polynomials:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2290,"byte_end":2377,"line_start":42,"line_end":42,"column_start":1,"column_end":88}},{"value":"/ * For [f62](crate::fields::f62) field, the polynomial is x<sup>2</sup> - x - 1.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2378,"byte_end":2461,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/ * For [f64](crate::fields::f64) field, the polynomial is x<sup>2</sup> - x + 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2462,"byte_end":2545,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ * For [f128](crate::fields::f128) field, the polynomial is x<sup>2</sup> - x - 1.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2546,"byte_end":2631,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2632,"byte_end":2635,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Cubic extension fields are defined using the following irreducible polynomials:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2636,"byte_end":2719,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/ * For [f62](crate::fields::f62) field, the polynomial is x<sup>3</sup> + 2x + 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2720,"byte_end":2804,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/ * For [f64](crate::fields::f64) field, the polynomial is x<sup>3</sup> - x - 1.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2805,"byte_end":2888,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/ * For [f128](crate::fields::f128) field, cubic extensions are not supported.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2889,"byte_end":2969,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2970,"byte_end":2973,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Polynomials","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2974,"byte_end":2991,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/ [Polynomials](polynom) module implements basic polynomial operations such as:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":2992,"byte_end":3073,"line_start":53,"line_end":53,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3074,"byte_end":3077,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ * Evaluation of a polynomial at a single or multiple point.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3078,"byte_end":3141,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/ * Interpolation of a polynomial from a set of points (using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3142,"byte_end":3205,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/   [Lagrange](https://en.wikipedia.org/wiki/Lagrange_polynomial) interpolation).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3206,"byte_end":3289,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ * Addition, multiplication, subtraction, and division of polynomials.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3290,"byte_end":3363,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ * Synthetic polynomial division (using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3364,"byte_end":3406,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/   [Ruffini's](https://en.wikipedia.org/wiki/Ruffini%27s_rule) method).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3407,"byte_end":3481,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3482,"byte_end":3485,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Fast Fourier transform","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3486,"byte_end":3514,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/ [FFT](fft) module contains operations for computing Fast Fourier transform in a prime","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3515,"byte_end":3604,"line_start":63,"line_end":63,"column_start":1,"column_end":90}},{"value":"/ field (also called [Number-theoretic transform](https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)#Number-theoretic_transform)).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3605,"byte_end":3753,"line_start":64,"line_end":64,"column_start":1,"column_end":149}},{"value":"/ This can be used to interpolate and evaluate polynomials in *O(n log n)* time as long as","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3754,"byte_end":3846,"line_start":65,"line_end":65,"column_start":1,"column_end":93}},{"value":"/ the domain of the polynomial is a multiplicative subgroup with size which is a power of 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3847,"byte_end":3941,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3942,"byte_end":3945,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Concurrent execution","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3946,"byte_end":3972,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3973,"byte_end":3976,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When the crate is compiled with `concurrent` feature enabled, some operations will be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":3977,"byte_end":4066,"line_start":70,"line_end":70,"column_start":1,"column_end":90}},{"value":"/ executed in multiple threads (usually, as many threads as there are logical cores on","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4067,"byte_end":4155,"line_start":71,"line_end":71,"column_start":1,"column_end":89}},{"value":"/ the machine). These operations are:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4156,"byte_end":4195,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4196,"byte_end":4199,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ * crate:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4200,"byte_end":4212,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/   - [get_power_series()]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4213,"byte_end":4241,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/   - [get_power_series_with_offset()]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4242,"byte_end":4282,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/   - [add_in_place()]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4283,"byte_end":4307,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/   - [mul_acc()]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4308,"byte_end":4327,"line_start":78,"line_end":78,"column_start":1,"column_end":20}},{"value":"/   - [batch_inversion()]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4328,"byte_end":4355,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ * `fft` module:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4356,"byte_end":4375,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/   - [evaluate_poly()](fft::evaluate_poly())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4376,"byte_end":4423,"line_start":81,"line_end":81,"column_start":1,"column_end":48}},{"value":"/   - [evaluate_poly_with_offset()](fft::evaluate_poly_with_offset())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4424,"byte_end":4495,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/   - [interpolate_poly()](fft::interpolate_poly())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4496,"byte_end":4549,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/   - [interpolate_poly_with_offset()][fft::interpolate_poly_with_offset()]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4550,"byte_end":4627,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/   - [get_twiddles()](fft::get_twiddles())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4628,"byte_end":4673,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/   - [get_inv_twiddles()](fft::get_twiddles())","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4674,"byte_end":4723,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4724,"byte_end":4727,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Number of threads can be configured via `RAYON_NUM_THREADS` environment variable","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4728,"byte_end":4812,"line_start":88,"line_end":88,"column_start":1,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fft","qualname":"::fft","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":91}],"decl_id":null,"docs":" FFT-based polynomial evaluation and interpolation.","sig":null,"attributes":[{"value":"/ FFT-based polynomial evaluation and interpolation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":5706,"byte_end":5760,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":5761,"byte_end":5764,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Functions in this module can be used to evaluate and interpolate polynomials over domains","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":5765,"byte_end":5858,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ which are multiplicative subgroups of finite fields and have lengths equal to powers of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":5859,"byte_end":5955,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ As compared to evaluation and interpolation functions available in the `polynom` module,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":5956,"byte_end":6048,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ these functions are much more efficient: their runtime complexity is O(`n` log `n`), where","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":6049,"byte_end":6143,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ `n` is the domain size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":6144,"byte_end":6171,"line_start":12,"line_end":12,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8824,"byte_end":8837,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"evaluate_poly","qualname":"::fft::evaluate_poly","value":"pub fn evaluate_poly<B, E>(&mut [E], &[B]) where B: StarkField,\nE: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a polynomial on all points of the specified domain using the FFT algorithm.","sig":null,"attributes":[{"value":"/ Evaluates a polynomial on all points of the specified domain using the FFT algorithm.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":6721,"byte_end":6810,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":6811,"byte_end":6814,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Uses the [FFT](https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)) algorithm","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":6815,"byte_end":6911,"line_start":39,"line_end":39,"column_start":1,"column_end":97}},{"value":"/ to evaluate polynomial `p` on all points of a domain defined by the length of `p` in the field","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":6912,"byte_end":7010,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ specified by the `B` type parameter. The evaluation is done in-place, meaning no additional","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7011,"byte_end":7106,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/ memory is allocated and `p` is updated with results of the evaluation. The polynomial `p`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7107,"byte_end":7200,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ is expected to be in coefficient form.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7201,"byte_end":7243,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7244,"byte_end":7247,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The complexity of evaluation is O(`n` log(`n`)), where `n` is the size of the domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7248,"byte_end":7337,"line_start":45,"line_end":45,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7338,"byte_end":7341,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The size of the domain is assumed to be equal to `p.len()` which must be a power of two. The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7342,"byte_end":7438,"line_start":47,"line_end":47,"column_start":1,"column_end":97}},{"value":"/ base field specified by `B` must have a multiplicative subgroup of size equal to `p.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7439,"byte_end":7534,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7535,"byte_end":7538,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The `twiddles` needed for evaluation can be obtained via `fft::get_twiddles()` function using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7539,"byte_end":7636,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ `p.len()` as the domain size parameter. This implies that `twiddles.len()` must be equal to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7637,"byte_end":7732,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ `p.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7733,"byte_end":7751,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7752,"byte_end":7755,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the evaluation is done in multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7756,"byte_end":7841,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7842,"byte_end":7845,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7846,"byte_end":7858,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7859,"byte_end":7873,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ * Length of `p` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7874,"byte_end":7916,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/ * Length of `twiddles` is not `p.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7917,"byte_end":7965,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size `p.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":7966,"byte_end":8056,"line_start":60,"line_end":60,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8057,"byte_end":8060,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8061,"byte_end":8075,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8076,"byte_end":8083,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::{polynom, fft::*, get_power_series, log2};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8084,"byte_end":8149,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8150,"byte_end":8229,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8230,"byte_end":8264,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8265,"byte_end":8282,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8283,"byte_end":8286,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // build a random polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8287,"byte_end":8319,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let mut p: Vec<BaseElement> = rand_vector(n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8320,"byte_end":8369,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8370,"byte_end":8373,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial over the domain using regular polynomial evaluation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8374,"byte_end":8456,"line_start":72,"line_end":72,"column_start":1,"column_end":83}},{"value":"/ let g = BaseElement::get_root_of_unity(log2(n));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8457,"byte_end":8509,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ let domain = get_power_series(g, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8510,"byte_end":8550,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/ let expected = polynom::eval_many(&p, &domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8551,"byte_end":8602,"line_start":75,"line_end":75,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8603,"byte_end":8606,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial over the domain using FFT-based evaluation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8607,"byte_end":8680,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ let twiddles = get_twiddles::<BaseElement>(p.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8681,"byte_end":8737,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/ evaluate_poly(&mut p, &twiddles);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8738,"byte_end":8775,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8776,"byte_end":8779,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(expected, p);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8780,"byte_end":8808,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":8809,"byte_end":8816,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12310,"byte_end":12335,"line_start":169,"line_end":169,"column_start":8,"column_end":33},"name":"evaluate_poly_with_offset","qualname":"::fft::evaluate_poly_with_offset","value":"pub fn evaluate_poly_with_offset<B, E>(&[E], &[B], B, usize) -> Vec<E> where\nB: StarkField, E: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a polynomial on all points of the specified (shifted) domain using the FFT algorithm.","sig":null,"attributes":[{"value":"/ Evaluates a polynomial on all points of the specified (shifted) domain using the FFT algorithm.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":9790,"byte_end":9889,"line_start":115,"line_end":115,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":9890,"byte_end":9893,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Uses the [FFT](https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general)) algorithm","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":9894,"byte_end":9990,"line_start":117,"line_end":117,"column_start":1,"column_end":97}},{"value":"/ to evaluate polynomial `p` on all points of a domain defined by the length of `p`, expanded","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":9991,"byte_end":10086,"line_start":118,"line_end":118,"column_start":1,"column_end":96}},{"value":"/ by the `blowup_factor`, and shifted by the `domain_offset` in the field specified by the `B`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10087,"byte_end":10183,"line_start":119,"line_end":119,"column_start":1,"column_end":97}},{"value":"/ type parameter. The polynomial `p` is expected to be in coefficient form.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10184,"byte_end":10261,"line_start":120,"line_end":120,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10262,"byte_end":10265,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The complexity of evaluation is O(`n` log(`n`)), where `n` is the size of the domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10266,"byte_end":10355,"line_start":122,"line_end":122,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10356,"byte_end":10359,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The size of the domain is assumed to be equal to `p.len()` * `blowup_factor` both of which must","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10360,"byte_end":10459,"line_start":124,"line_end":124,"column_start":1,"column_end":100}},{"value":"/ be powers of two. The base field specified by `B` must have a multiplicative subgroup of size","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10460,"byte_end":10557,"line_start":125,"line_end":125,"column_start":1,"column_end":98}},{"value":"/ equal to `p.len()` * `blowup_factor`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10558,"byte_end":10599,"line_start":126,"line_end":126,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10600,"byte_end":10603,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The shifted domain is defined as the original domain with every element multiplied by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10604,"byte_end":10697,"line_start":128,"line_end":128,"column_start":1,"column_end":94}},{"value":"/ `domain_offset`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10698,"byte_end":10718,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10719,"byte_end":10722,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The `twiddles` needed for evaluation can be obtained via `fft::get_twiddles()` function using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10723,"byte_end":10820,"line_start":131,"line_end":131,"column_start":1,"column_end":98}},{"value":"/ `p.len()` as the domain size parameter. This implies that `twiddles.len()` must be equal to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10821,"byte_end":10916,"line_start":132,"line_end":132,"column_start":1,"column_end":96}},{"value":"/ `p.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10917,"byte_end":10935,"line_start":133,"line_end":133,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10936,"byte_end":10939,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the evaluation is done in multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":10940,"byte_end":11025,"line_start":135,"line_end":135,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11026,"byte_end":11029,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11030,"byte_end":11042,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11043,"byte_end":11057,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/ * Length of `p` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11058,"byte_end":11100,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ * `blowup_factor` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11101,"byte_end":11145,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/ * Length of `twiddles` is not `p.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11146,"byte_end":11194,"line_start":141,"line_end":141,"column_start":1,"column_end":49}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size `p.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11195,"byte_end":11285,"line_start":142,"line_end":142,"column_start":1,"column_end":91}},{"value":"/ * `domain_offset` is ZERO.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11286,"byte_end":11316,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11317,"byte_end":11320,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11321,"byte_end":11335,"line_start":145,"line_end":145,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11336,"byte_end":11343,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::{polynom, fft::*, log2, get_power_series};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11344,"byte_end":11409,"line_start":147,"line_end":147,"column_start":1,"column_end":66}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11410,"byte_end":11489,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11490,"byte_end":11524,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11525,"byte_end":11542,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ let offset = BaseElement::GENERATOR;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11543,"byte_end":11583,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/ let blowup_factor = 2;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11584,"byte_end":11610,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11611,"byte_end":11614,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ // build a random polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11615,"byte_end":11647,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"/ let mut p: Vec<BaseElement> = rand_vector(n / blowup_factor);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11648,"byte_end":11713,"line_start":155,"line_end":155,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11714,"byte_end":11717,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial over the domain using regular polynomial evaluation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11718,"byte_end":11800,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/ let g = BaseElement::get_root_of_unity(log2(n));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11801,"byte_end":11853,"line_start":158,"line_end":158,"column_start":1,"column_end":53}},{"value":"/ let domain = get_power_series(g, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11854,"byte_end":11894,"line_start":159,"line_end":159,"column_start":1,"column_end":41}},{"value":"/ let shifted_domain = domain.iter().map(|&x| x * offset).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11895,"byte_end":11975,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ let expected = polynom::eval_many(&p, &shifted_domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":11976,"byte_end":12035,"line_start":161,"line_end":161,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12036,"byte_end":12039,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial over the domain using FFT-based evaluation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12040,"byte_end":12113,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/ let twiddles = get_twiddles::<BaseElement>(p.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12114,"byte_end":12170,"line_start":164,"line_end":164,"column_start":1,"column_end":57}},{"value":"/ let actual = evaluate_poly_with_offset(&mut p, &twiddles, offset, blowup_factor);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12171,"byte_end":12256,"line_start":165,"line_end":165,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12257,"byte_end":12260,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(expected, actual);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12261,"byte_end":12294,"line_start":167,"line_end":167,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":12295,"byte_end":12302,"line_start":168,"line_end":168,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16222,"byte_end":16238,"line_start":272,"line_end":272,"column_start":8,"column_end":24},"name":"interpolate_poly","qualname":"::fft::interpolate_poly","value":"pub fn interpolate_poly<B, E>(&mut [E], &[B]) where B: StarkField,\nE: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Interpolates evaluations of a polynomial over the specified domain into a polynomial in\n coefficient from using the FFT algorithm.","sig":null,"attributes":[{"value":"/ Interpolates evaluations of a polynomial over the specified domain into a polynomial in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":13973,"byte_end":14064,"line_start":223,"line_end":223,"column_start":1,"column_end":92}},{"value":"/ coefficient from using the FFT algorithm.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14065,"byte_end":14110,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14111,"byte_end":14114,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Uses the inverse [FFT](https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general))","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14115,"byte_end":14209,"line_start":226,"line_end":226,"column_start":1,"column_end":95}},{"value":"/ algorithm to interpolate a polynomial from its evaluations over a domain defined by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14210,"byte_end":14301,"line_start":227,"line_end":227,"column_start":1,"column_end":92}},{"value":"/ length of `evaluations` in the field specified by the `B` type parameter.  The interpolation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14302,"byte_end":14398,"line_start":228,"line_end":228,"column_start":1,"column_end":97}},{"value":"/ is done in-place, meaning no additional memory is allocated and the evaluations contained in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14399,"byte_end":14495,"line_start":229,"line_end":229,"column_start":1,"column_end":97}},{"value":"/ `evaluations` are replaced with polynomial coefficients.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14496,"byte_end":14556,"line_start":230,"line_end":230,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14557,"byte_end":14560,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The complexity of interpolation is O(`n` log(`n`)), where `n` is the size of the domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14561,"byte_end":14653,"line_start":232,"line_end":232,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14654,"byte_end":14657,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The size of the domain is assumed to be equal to `evaluations.len()` which must be a power","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14658,"byte_end":14752,"line_start":234,"line_end":234,"column_start":1,"column_end":95}},{"value":"/ of two. The base field specified by `B` must have a multiplicative subgroup of size equal","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14753,"byte_end":14846,"line_start":235,"line_end":235,"column_start":1,"column_end":94}},{"value":"/ to `evaluations.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14847,"byte_end":14874,"line_start":236,"line_end":236,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14875,"byte_end":14878,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ The `inv_twiddles` needed for interpolation can be obtained via `fft::get_inv_twiddles()`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14879,"byte_end":14972,"line_start":238,"line_end":238,"column_start":1,"column_end":94}},{"value":"/ function using `evaluations.len()` as the domain size parameter. This implies that","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":14973,"byte_end":15059,"line_start":239,"line_end":239,"column_start":1,"column_end":87}},{"value":"/ `twiddles.len()` must be equal to `evaluations.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15060,"byte_end":15122,"line_start":240,"line_end":240,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15123,"byte_end":15126,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the interpolation is done in multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15127,"byte_end":15215,"line_start":242,"line_end":242,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15216,"byte_end":15219,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15220,"byte_end":15232,"line_start":244,"line_end":244,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15233,"byte_end":15247,"line_start":245,"line_end":245,"column_start":1,"column_end":15}},{"value":"/ * Length of `evaluations` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15248,"byte_end":15300,"line_start":246,"line_end":246,"column_start":1,"column_end":53}},{"value":"/ * Length of `inv_twiddles` is not `evaluations.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15301,"byte_end":15363,"line_start":247,"line_end":247,"column_start":1,"column_end":63}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15364,"byte_end":15443,"line_start":248,"line_end":248,"column_start":1,"column_end":80}},{"value":"/   `evaluations.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15444,"byte_end":15470,"line_start":249,"line_end":249,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15471,"byte_end":15474,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15475,"byte_end":15489,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15490,"byte_end":15497,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::{polynom, fft::*, get_power_series, log2};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15498,"byte_end":15563,"line_start":253,"line_end":253,"column_start":1,"column_end":66}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15564,"byte_end":15643,"line_start":254,"line_end":254,"column_start":1,"column_end":80}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15644,"byte_end":15678,"line_start":255,"line_end":255,"column_start":1,"column_end":35}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15679,"byte_end":15696,"line_start":256,"line_end":256,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15697,"byte_end":15700,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ // build a random polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15701,"byte_end":15733,"line_start":258,"line_end":258,"column_start":1,"column_end":33}},{"value":"/ let p: Vec<BaseElement> = rand_vector(n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15734,"byte_end":15779,"line_start":259,"line_end":259,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15780,"byte_end":15783,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial over the domain using regular polynomial evaluation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15784,"byte_end":15866,"line_start":261,"line_end":261,"column_start":1,"column_end":83}},{"value":"/ let g = BaseElement::get_root_of_unity(log2(n));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15867,"byte_end":15919,"line_start":262,"line_end":262,"column_start":1,"column_end":53}},{"value":"/ let domain = get_power_series(g, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15920,"byte_end":15960,"line_start":263,"line_end":263,"column_start":1,"column_end":41}},{"value":"/ let mut ys = polynom::eval_many(&p, &domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":15961,"byte_end":16010,"line_start":264,"line_end":264,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16011,"byte_end":16014,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ // interpolate the evaluations into a polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16015,"byte_end":16067,"line_start":266,"line_end":266,"column_start":1,"column_end":53}},{"value":"/ let inv_twiddles = get_inv_twiddles::<BaseElement>(ys.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16068,"byte_end":16133,"line_start":267,"line_end":267,"column_start":1,"column_end":66}},{"value":"/ interpolate_poly(&mut ys, &inv_twiddles);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16134,"byte_end":16179,"line_start":268,"line_end":268,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16180,"byte_end":16183,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, ys);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16184,"byte_end":16206,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":16207,"byte_end":16214,"line_start":271,"line_end":271,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19953,"byte_end":19981,"line_start":360,"line_end":360,"column_start":8,"column_end":36},"name":"interpolate_poly_with_offset","qualname":"::fft::interpolate_poly_with_offset","value":"pub fn interpolate_poly_with_offset<B, E>(&mut [E], &[B], B) where\nB: StarkField, E: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Interpolates evaluations of a polynomial over the specified (shifted) domain into a polynomial\n in coefficient from using the FFT algorithm.","sig":null,"attributes":[{"value":"/ Interpolates evaluations of a polynomial over the specified (shifted) domain into a polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17360,"byte_end":17458,"line_start":305,"line_end":305,"column_start":1,"column_end":99}},{"value":"/ in coefficient from using the FFT algorithm.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17459,"byte_end":17507,"line_start":306,"line_end":306,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17508,"byte_end":17511,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ Uses the inverse [FFT](https://en.wikipedia.org/wiki/Discrete_Fourier_transform_(general))","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17512,"byte_end":17606,"line_start":308,"line_end":308,"column_start":1,"column_end":95}},{"value":"/ algorithm to interpolate a polynomial from its evaluations over a domain defined by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17607,"byte_end":17698,"line_start":309,"line_end":309,"column_start":1,"column_end":92}},{"value":"/ length of `evaluations` and shifted by the `domain_offset` in the field specified by the `B`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17699,"byte_end":17795,"line_start":310,"line_end":310,"column_start":1,"column_end":97}},{"value":"/ type parameter. The interpolation is done in-place, meaning no additional memory is allocated","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17796,"byte_end":17893,"line_start":311,"line_end":311,"column_start":1,"column_end":98}},{"value":"/ and the evaluations contained in `evaluations` are replaced with polynomial coefficients.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17894,"byte_end":17987,"line_start":312,"line_end":312,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17988,"byte_end":17991,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ The complexity of interpolation is O(`n` log(`n`)), where `n` is the size of the domain.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":17992,"byte_end":18084,"line_start":314,"line_end":314,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18085,"byte_end":18088,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ The size of the domain is assumed to be equal to `evaluations.len()` which must be a power","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18089,"byte_end":18183,"line_start":316,"line_end":316,"column_start":1,"column_end":95}},{"value":"/ of two. The base field specified by `B` must have a multiplicative subgroup of size equal","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18184,"byte_end":18277,"line_start":317,"line_end":317,"column_start":1,"column_end":94}},{"value":"/ to `evaluations.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18278,"byte_end":18305,"line_start":318,"line_end":318,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18306,"byte_end":18309,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ The shifted domain is defined as the original domain with every element multiplied by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18310,"byte_end":18403,"line_start":320,"line_end":320,"column_start":1,"column_end":94}},{"value":"/ `domain_offset`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18404,"byte_end":18424,"line_start":321,"line_end":321,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18425,"byte_end":18428,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ The `inv_twiddles` needed for interpolation can be obtained via `fft::get_inv_twiddles()`","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18429,"byte_end":18522,"line_start":323,"line_end":323,"column_start":1,"column_end":94}},{"value":"/ function using `evaluations.len()` as the domain size parameter. This implies that","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18523,"byte_end":18609,"line_start":324,"line_end":324,"column_start":1,"column_end":87}},{"value":"/ `twiddles.len()` must be equal to `evaluations.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18610,"byte_end":18672,"line_start":325,"line_end":325,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18673,"byte_end":18676,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the interpolation is done in multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18677,"byte_end":18765,"line_start":327,"line_end":327,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18766,"byte_end":18769,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18770,"byte_end":18782,"line_start":329,"line_end":329,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18783,"byte_end":18797,"line_start":330,"line_end":330,"column_start":1,"column_end":15}},{"value":"/ * Length of `evaluations` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18798,"byte_end":18850,"line_start":331,"line_end":331,"column_start":1,"column_end":53}},{"value":"/ * Length of `inv_twiddles` is not `evaluations.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18851,"byte_end":18913,"line_start":332,"line_end":332,"column_start":1,"column_end":63}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18914,"byte_end":18993,"line_start":333,"line_end":333,"column_start":1,"column_end":80}},{"value":"/   `evaluations.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":18994,"byte_end":19020,"line_start":334,"line_end":334,"column_start":1,"column_end":27}},{"value":"/ * `domain_offset` is ZERO.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19021,"byte_end":19051,"line_start":335,"line_end":335,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19052,"byte_end":19055,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19056,"byte_end":19070,"line_start":337,"line_end":337,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19071,"byte_end":19078,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::{polynom, fft::*, get_power_series, log2};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19079,"byte_end":19144,"line_start":339,"line_end":339,"column_start":1,"column_end":66}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19145,"byte_end":19224,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19225,"byte_end":19259,"line_start":341,"line_end":341,"column_start":1,"column_end":35}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19260,"byte_end":19277,"line_start":342,"line_end":342,"column_start":1,"column_end":18}},{"value":"/ let offset = BaseElement::GENERATOR;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19278,"byte_end":19318,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19319,"byte_end":19322,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ // build a random polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19323,"byte_end":19355,"line_start":345,"line_end":345,"column_start":1,"column_end":33}},{"value":"/ let p: Vec<BaseElement> = rand_vector(n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19356,"byte_end":19401,"line_start":346,"line_end":346,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19402,"byte_end":19405,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial over the domain using regular polynomial evaluation","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19406,"byte_end":19488,"line_start":348,"line_end":348,"column_start":1,"column_end":83}},{"value":"/ let g = BaseElement::get_root_of_unity(log2(n));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19489,"byte_end":19541,"line_start":349,"line_end":349,"column_start":1,"column_end":53}},{"value":"/ let domain = get_power_series(g, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19542,"byte_end":19582,"line_start":350,"line_end":350,"column_start":1,"column_end":41}},{"value":"/ let shifted_domain = domain.iter().map(|&x| x * offset).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19583,"byte_end":19663,"line_start":351,"line_end":351,"column_start":1,"column_end":81}},{"value":"/ let mut ys = polynom::eval_many(&p, &shifted_domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19664,"byte_end":19721,"line_start":352,"line_end":352,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19722,"byte_end":19725,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ // interpolate the evaluations into a polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19726,"byte_end":19778,"line_start":354,"line_end":354,"column_start":1,"column_end":53}},{"value":"/ let inv_twiddles = get_inv_twiddles::<BaseElement>(ys.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19779,"byte_end":19844,"line_start":355,"line_end":355,"column_start":1,"column_end":66}},{"value":"/ interpolate_poly_with_offset(&mut ys, &inv_twiddles, offset);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19845,"byte_end":19910,"line_start":356,"line_end":356,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19911,"byte_end":19914,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, ys);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19915,"byte_end":19937,"line_start":358,"line_end":358,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":19938,"byte_end":19945,"line_start":359,"line_end":359,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":22072,"byte_end":22082,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"serial_fft","qualname":"::fft::serial_fft","value":"pub fn serial_fft<B, E>(&mut [E], &[B]) where B: StarkField,\nE: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Executes a single-threaded version of the FFT algorithm on the provided values.","sig":null,"attributes":[{"value":"/ Executes a single-threaded version of the FFT algorithm on the provided values.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21369,"byte_end":21452,"line_start":400,"line_end":400,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21453,"byte_end":21456,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ The evaluation is done in-place, meaning the function does not allocate any additional memory,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21457,"byte_end":21555,"line_start":402,"line_end":402,"column_start":1,"column_end":99}},{"value":"/ and the results are written back into `values`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21556,"byte_end":21607,"line_start":403,"line_end":403,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21608,"byte_end":21611,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ The `twiddles` needed for evaluation can be obtained via `fft::get_twiddles()` function using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21612,"byte_end":21709,"line_start":405,"line_end":405,"column_start":1,"column_end":98}},{"value":"/ `values.len()` as the domain size parameter. This implies that `twiddles.len()` must be equal","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21710,"byte_end":21807,"line_start":406,"line_end":406,"column_start":1,"column_end":98}},{"value":"/ to `values.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21808,"byte_end":21834,"line_start":407,"line_end":407,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21835,"byte_end":21838,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21839,"byte_end":21851,"line_start":409,"line_end":409,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21852,"byte_end":21866,"line_start":410,"line_end":410,"column_start":1,"column_end":15}},{"value":"/ * Length of `values` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21867,"byte_end":21914,"line_start":411,"line_end":411,"column_start":1,"column_end":48}},{"value":"/ * Length of `twiddles` is not `values.len()` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21915,"byte_end":21968,"line_start":412,"line_end":412,"column_start":1,"column_end":54}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size `values.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":21969,"byte_end":22064,"line_start":413,"line_end":413,"column_start":1,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23632,"byte_end":23644,"line_start":464,"line_end":464,"column_start":8,"column_end":20},"name":"get_twiddles","qualname":"::fft::get_twiddles","value":"pub fn get_twiddles<B>(usize) -> Vec<B> where B: StarkField","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of twiddles for the specified domain size.","sig":null,"attributes":[{"value":"/ Returns a set of twiddles for the specified domain size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":22891,"byte_end":22951,"line_start":443,"line_end":443,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":22952,"byte_end":22955,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ These twiddles can then be used for FFT-based polynomial evaluation. The length of the returned","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":22956,"byte_end":23055,"line_start":445,"line_end":445,"column_start":1,"column_end":100}},{"value":"/ vector will be equal to `domain_size` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23056,"byte_end":23102,"line_start":446,"line_end":446,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23103,"byte_end":23106,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the twiddles are generated in multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23107,"byte_end":23196,"line_start":448,"line_end":448,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23197,"byte_end":23200,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23201,"byte_end":23213,"line_start":450,"line_end":450,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23214,"byte_end":23228,"line_start":451,"line_end":451,"column_start":1,"column_end":15}},{"value":"/ * `domain_size` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23229,"byte_end":23271,"line_start":452,"line_end":452,"column_start":1,"column_end":43}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size `domain_size`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23272,"byte_end":23366,"line_start":453,"line_end":453,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23367,"byte_end":23370,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23371,"byte_end":23385,"line_start":455,"line_end":455,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23386,"byte_end":23393,"line_start":456,"line_end":456,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::fft::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23394,"byte_end":23424,"line_start":457,"line_end":457,"column_start":1,"column_end":31}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23425,"byte_end":23504,"line_start":458,"line_end":458,"column_start":1,"column_end":80}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23505,"byte_end":23522,"line_start":459,"line_end":459,"column_start":1,"column_end":18}},{"value":"/ let twiddles = get_twiddles::<BaseElement>(n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23523,"byte_end":23573,"line_start":460,"line_end":460,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23574,"byte_end":23577,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(n / 2, twiddles.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23578,"byte_end":23616,"line_start":462,"line_end":462,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":23617,"byte_end":23624,"line_start":463,"line_end":463,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24909,"byte_end":24925,"line_start":504,"line_end":504,"column_start":8,"column_end":24},"name":"get_inv_twiddles","qualname":"::fft::get_inv_twiddles","value":"pub fn get_inv_twiddles<B>(usize) -> Vec<B> where B: StarkField","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of inverse twiddles for the specified domain size.","sig":null,"attributes":[{"value":"/ Returns a set of inverse twiddles for the specified domain size.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24145,"byte_end":24213,"line_start":483,"line_end":483,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24214,"byte_end":24217,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ These twiddles can then be used for FFT-based polynomial interpolation. The length of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24218,"byte_end":24311,"line_start":485,"line_end":485,"column_start":1,"column_end":94}},{"value":"/ returned vector will be equal to `domain_size` / 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24312,"byte_end":24367,"line_start":486,"line_end":486,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24368,"byte_end":24371,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the twiddles are generated in multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24372,"byte_end":24461,"line_start":488,"line_end":488,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24462,"byte_end":24465,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24466,"byte_end":24478,"line_start":490,"line_end":490,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24479,"byte_end":24493,"line_start":491,"line_end":491,"column_start":1,"column_end":15}},{"value":"/ * `domain_size` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24494,"byte_end":24536,"line_start":492,"line_end":492,"column_start":1,"column_end":43}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size `domain_size`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24537,"byte_end":24631,"line_start":493,"line_end":493,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24632,"byte_end":24635,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24636,"byte_end":24650,"line_start":495,"line_end":495,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24651,"byte_end":24658,"line_start":496,"line_end":496,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::fft::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24659,"byte_end":24689,"line_start":497,"line_end":497,"column_start":1,"column_end":31}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24690,"byte_end":24769,"line_start":498,"line_end":498,"column_start":1,"column_end":80}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24770,"byte_end":24787,"line_start":499,"line_end":499,"column_start":1,"column_end":18}},{"value":"/ let inv_twiddles = get_inv_twiddles::<BaseElement>(n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24788,"byte_end":24846,"line_start":500,"line_end":500,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24847,"byte_end":24850,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(n / 2, inv_twiddles.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24851,"byte_end":24893,"line_start":502,"line_end":502,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":24894,"byte_end":24901,"line_start":503,"line_end":503,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":27132,"byte_end":27144,"line_start":565,"line_end":565,"column_start":8,"column_end":20},"name":"infer_degree","qualname":"::fft::infer_degree","value":"pub fn infer_degree<B, E>(&[E], B) -> usize where B: StarkField,\nE: FieldElement<BaseField = B>","parent":null,"children":[],"decl_id":null,"docs":" Returns the degree of a polynomial implied by the provided evaluations.","sig":null,"attributes":[{"value":"/ Returns the degree of a polynomial implied by the provided evaluations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25625,"byte_end":25700,"line_start":527,"line_end":527,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25701,"byte_end":25704,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ The polynomial is assumed to be evaluated over a multiplicative subgroup of length equal to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25705,"byte_end":25800,"line_start":529,"line_end":529,"column_start":1,"column_end":96}},{"value":"/ the length of `evaluations` in the field defined by `B` type parameter and shifted by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25801,"byte_end":25894,"line_start":530,"line_end":530,"column_start":1,"column_end":94}},{"value":"/ `domain_offset`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25895,"byte_end":25915,"line_start":531,"line_end":531,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25916,"byte_end":25919,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ The shifted domain is defined as the original domain with every element multiplied by the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":25920,"byte_end":26013,"line_start":533,"line_end":533,"column_start":1,"column_end":94}},{"value":"/ `domain_offset`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26014,"byte_end":26034,"line_start":534,"line_end":534,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26035,"byte_end":26038,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ The degree is determined by first interpolating the polynomial into a coefficient form using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26039,"byte_end":26135,"line_start":536,"line_end":536,"column_start":1,"column_end":97}},{"value":"/ FFT-based polynomial interpolation, and then finding the first non-zero coefficient.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26136,"byte_end":26224,"line_start":537,"line_end":537,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26225,"byte_end":26228,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26229,"byte_end":26241,"line_start":539,"line_end":539,"column_start":1,"column_end":13}},{"value":"/ Panics if","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26242,"byte_end":26255,"line_start":540,"line_end":540,"column_start":1,"column_end":14}},{"value":"/ * Length of `evaluations` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26256,"byte_end":26308,"line_start":541,"line_end":541,"column_start":1,"column_end":53}},{"value":"/ * Field specified by `B` does not contain a multiplicative subgroup of size `domain_size`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26309,"byte_end":26403,"line_start":542,"line_end":542,"column_start":1,"column_end":95}},{"value":"/ * `domain_offset` is ZERO.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26404,"byte_end":26434,"line_start":543,"line_end":543,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26435,"byte_end":26438,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26439,"byte_end":26453,"line_start":545,"line_end":545,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26454,"byte_end":26461,"line_start":546,"line_end":546,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::{polynom, fft::*, get_power_series, log2};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26462,"byte_end":26527,"line_start":547,"line_end":547,"column_start":1,"column_end":66}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement, StarkField};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26528,"byte_end":26607,"line_start":548,"line_end":548,"column_start":1,"column_end":80}},{"value":"/ let offset = BaseElement::GENERATOR;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26608,"byte_end":26648,"line_start":549,"line_end":549,"column_start":1,"column_end":41}},{"value":"/ // p(x) = x^2 + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26649,"byte_end":26670,"line_start":550,"line_end":550,"column_start":1,"column_end":22}},{"value":"/ let p = [","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26671,"byte_end":26684,"line_start":551,"line_end":551,"column_start":1,"column_end":14}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26685,"byte_end":26713,"line_start":552,"line_end":552,"column_start":1,"column_end":29}},{"value":"/     BaseElement::ZERO,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26714,"byte_end":26740,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26741,"byte_end":26769,"line_start":554,"line_end":554,"column_start":1,"column_end":29}},{"value":"/     BaseElement::ZERO,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26770,"byte_end":26796,"line_start":555,"line_end":555,"column_start":1,"column_end":27}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26797,"byte_end":26803,"line_start":556,"line_end":556,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26804,"byte_end":26807,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let g = BaseElement::get_root_of_unity(log2(p.len()));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26808,"byte_end":26866,"line_start":558,"line_end":558,"column_start":1,"column_end":59}},{"value":"/ let domain = get_power_series(g, p.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26867,"byte_end":26913,"line_start":559,"line_end":559,"column_start":1,"column_end":47}},{"value":"/ let shifted_domain = domain.iter().map(|&x| x * offset).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26914,"byte_end":26994,"line_start":560,"line_end":560,"column_start":1,"column_end":81}},{"value":"/ let evaluations = polynom::eval_many(&p, &shifted_domain);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":26995,"byte_end":27057,"line_start":561,"line_end":561,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":27058,"byte_end":27061,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, infer_degree(&evaluations, offset));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":27062,"byte_end":27116,"line_start":563,"line_end":563,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/fft/mod.rs","byte_start":27117,"byte_end":27124,"line_start":564,"line_end":564,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"polynom","qualname":"::polynom","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149}],"decl_id":null,"docs":" Basic polynomial operations.","sig":null,"attributes":[{"value":"/ Basic polynomial operations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34404,"byte_end":34436,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34437,"byte_end":34440,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module provides a set of function for basic polynomial operations, including:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34441,"byte_end":34527,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ - Polynomial evaluation using Horner method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34528,"byte_end":34576,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ - Polynomial interpolation using Lagrange method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34577,"byte_end":34630,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ - Polynomial addition, subtraction, multiplication, and division.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34631,"byte_end":34700,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ - Synthetic polynomial division for efficient division by polynomials of the form","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34701,"byte_end":34786,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/   `x`^`a` - `b`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34787,"byte_end":34807,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34808,"byte_end":34811,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ In the context of this module any slice of field elements is considered to be a polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34812,"byte_end":34906,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ in reverse coefficient form. A few examples:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34907,"byte_end":34955,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34956,"byte_end":34959,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34960,"byte_end":34967,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":34968,"byte_end":35035,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ // p(x) = 2 * x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35036,"byte_end":35059,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/ let p = vec![BaseElement::new(1), BaseElement::new(2)];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35060,"byte_end":35119,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35120,"byte_end":35123,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // p(x) = 4 * x^2 + 3","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35124,"byte_end":35149,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/ let p = [BaseElement::new(3), BaseElement::ZERO, BaseElement::new(4)];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35150,"byte_end":35224,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35225,"byte_end":35232,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36105,"byte_end":36109,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"eval","qualname":"::polynom::eval","value":"pub fn eval<B, E>(&[B], E) -> E where B: FieldElement, E: FieldElement +\nFrom<B>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a polynomial at a single point and returns the result.","sig":null,"attributes":[{"value":"/ Evaluates a polynomial at a single point and returns the result.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35513,"byte_end":35581,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35582,"byte_end":35585,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Evaluates polynomial `p` at coordinate `x` using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35586,"byte_end":35638,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ [Horner's method](https://en.wikipedia.org/wiki/Horner%27s_method).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35639,"byte_end":35710,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35711,"byte_end":35714,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35715,"byte_end":35729,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35730,"byte_end":35737,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35738,"byte_end":35772,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35773,"byte_end":35840,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ // define polynomial: f(x) = 3 * x^2 + 2 * x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35841,"byte_end":35893,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ let p = (1u32..4).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35894,"byte_end":35959,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35960,"byte_end":35963,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // evaluate the polynomial at point 4","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":35964,"byte_end":36005,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ let x = BaseElement::new(4);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36006,"byte_end":36038,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(BaseElement::new(57), eval(&p, x));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36039,"byte_end":36089,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36090,"byte_end":36097,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36970,"byte_end":36979,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"eval_many","qualname":"::polynom::eval_many","value":"pub fn eval_many<B, E>(&[B], &[E]) -> Vec<E> where B: FieldElement,\nE: FieldElement + From<B>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates a polynomial at multiple points and returns a vector of results.","sig":null,"attributes":[{"value":"/ Evaluates a polynomial at multiple points and returns a vector of results.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36315,"byte_end":36393,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36394,"byte_end":36397,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Evaluates polynomial `p` at all coordinates in `xs` slice by repeatedly invoking","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36398,"byte_end":36482,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/ `polynom::eval()` function.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36483,"byte_end":36514,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36515,"byte_end":36518,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36519,"byte_end":36533,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36534,"byte_end":36541,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36542,"byte_end":36576,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36577,"byte_end":36644,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ // define polynomial: f(x) = 3 * x^2 + 2 * x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36645,"byte_end":36697,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ let p = (1_u32..4).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36698,"byte_end":36764,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/ let xs = (3_u32..6).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36765,"byte_end":36832,"line_start":75,"line_end":75,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36833,"byte_end":36836,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let expected = xs.iter().map(|x| eval(&p, *x)).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36837,"byte_end":36908,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(expected, eval_many(&p, &xs));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36909,"byte_end":36954,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":36955,"byte_end":36962,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":38105,"byte_end":38116,"line_start":112,"line_end":112,"column_start":8,"column_end":19},"name":"interpolate","qualname":"::polynom::interpolate","value":"pub fn interpolate<E>(&[E], &[E], bool) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial in coefficient form interpolated from a set of X and Y coordinates.","sig":null,"attributes":[{"value":"/ Returns a polynomial in coefficient form interpolated from a set of X and Y coordinates.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37252,"byte_end":37344,"line_start":91,"line_end":91,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37345,"byte_end":37348,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Uses [Lagrange interpolation](https://en.wikipedia.org/wiki/Lagrange_polynomial) to build a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37349,"byte_end":37444,"line_start":93,"line_end":93,"column_start":1,"column_end":96}},{"value":"/ polynomial from X and Y coordinates. If `remove_leading_zeros = true`, all leading coefficients","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37445,"byte_end":37544,"line_start":94,"line_end":94,"column_start":1,"column_end":100}},{"value":"/ which are ZEROs will be truncated; otherwise, the length of result will be equal to the number","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37545,"byte_end":37643,"line_start":95,"line_end":95,"column_start":1,"column_end":99}},{"value":"/ of X coordinates.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37644,"byte_end":37665,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37666,"byte_end":37669,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37670,"byte_end":37682,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/ Panics if number of X and Y coordinates is not the same.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37683,"byte_end":37743,"line_start":99,"line_end":99,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37744,"byte_end":37747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37748,"byte_end":37761,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37762,"byte_end":37769,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37770,"byte_end":37804,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37805,"byte_end":37872,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37873,"byte_end":37907,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ let xs: Vec<BaseElement> = rand_vector(16);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37908,"byte_end":37955,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"/ let ys: Vec<BaseElement> = rand_vector(16);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":37956,"byte_end":38003,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":38004,"byte_end":38007,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ let p = interpolate(&xs, &ys, false);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":38008,"byte_end":38049,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(ys, eval_many(&p, &xs));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":38050,"byte_end":38089,"line_start":110,"line_end":110,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":38090,"byte_end":38097,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40293,"byte_end":40310,"line_start":179,"line_end":179,"column_start":8,"column_end":25},"name":"interpolate_batch","qualname":"::polynom::interpolate_batch","value":"pub fn interpolate_batch<E, const N: usize>(&[[E; ]], &[[E; ]]) -> Vec<[E; ]>\nwhere E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of polynomials interpolated from the provided X and Y coordinate batches.","sig":null,"attributes":[{"value":"/ Returns a vector of polynomials interpolated from the provided X and Y coordinate batches.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":38996,"byte_end":39090,"line_start":146,"line_end":146,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39091,"byte_end":39094,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Uses [Lagrange interpolation](https://en.wikipedia.org/wiki/Lagrange_polynomial) to build a","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39095,"byte_end":39190,"line_start":148,"line_end":148,"column_start":1,"column_end":96}},{"value":"/ vector of polynomial from X and Y coordinate batches (one polynomial per batch).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39191,"byte_end":39275,"line_start":149,"line_end":149,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39276,"byte_end":39279,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ When the number of batches is larger, this function is significantly faster than using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39280,"byte_end":39370,"line_start":151,"line_end":151,"column_start":1,"column_end":91}},{"value":"/ `polynom::interpolate()` function individually for each batch of coordinates. The speed-up","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39371,"byte_end":39465,"line_start":152,"line_end":152,"column_start":1,"column_end":95}},{"value":"/ is primarily due to computing all inversions as a single batch inversion across all","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39466,"byte_end":39553,"line_start":153,"line_end":153,"column_start":1,"column_end":88}},{"value":"/ coordinate batches.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39554,"byte_end":39577,"line_start":154,"line_end":154,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39578,"byte_end":39581,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39582,"byte_end":39594,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ Panics if the number of X coordinate batches and Y coordinate batches is not the same.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39595,"byte_end":39685,"line_start":157,"line_end":157,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39686,"byte_end":39689,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39690,"byte_end":39704,"line_start":159,"line_end":159,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39705,"byte_end":39712,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # use core::convert::TryInto;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39713,"byte_end":39746,"line_start":161,"line_end":161,"column_start":1,"column_end":34}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39747,"byte_end":39781,"line_start":162,"line_end":162,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39782,"byte_end":39849,"line_start":163,"line_end":163,"column_start":1,"column_end":68}},{"value":"/ # use rand_utils::rand_array;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39850,"byte_end":39883,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/ let x_batches: Vec<[BaseElement; 8]> = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39884,"byte_end":39932,"line_start":165,"line_end":165,"column_start":1,"column_end":49}},{"value":"/     rand_array(),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39933,"byte_end":39954,"line_start":166,"line_end":166,"column_start":1,"column_end":22}},{"value":"/     rand_array(),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39955,"byte_end":39976,"line_start":167,"line_end":167,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39977,"byte_end":39983,"line_start":168,"line_end":168,"column_start":1,"column_end":7}},{"value":"/ let y_batches: Vec<[BaseElement; 8]> = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":39984,"byte_end":40032,"line_start":169,"line_end":169,"column_start":1,"column_end":49}},{"value":"/     rand_array(),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40033,"byte_end":40054,"line_start":170,"line_end":170,"column_start":1,"column_end":22}},{"value":"/     rand_array(),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40055,"byte_end":40076,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40077,"byte_end":40083,"line_start":172,"line_end":172,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40084,"byte_end":40087,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let polys = interpolate_batch(&x_batches, &y_batches);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40088,"byte_end":40146,"line_start":174,"line_end":174,"column_start":1,"column_end":59}},{"value":"/ for ((p, xs), ys) in polys.iter().zip(x_batches).zip(y_batches) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40147,"byte_end":40216,"line_start":175,"line_end":175,"column_start":1,"column_end":70}},{"value":"/     assert_eq!(ys.to_vec(), eval_many(p, &xs));   ","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40217,"byte_end":40271,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40272,"byte_end":40277,"line_start":177,"line_end":177,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":40278,"byte_end":40285,"line_start":178,"line_end":178,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42900,"byte_end":42903,"line_start":250,"line_end":250,"column_start":8,"column_end":11},"name":"add","qualname":"::polynom::add","value":"pub fn add<E>(&[E], &[E]) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial resulting from adding two polynomials together.","sig":null,"attributes":[{"value":"/ Returns a polynomial resulting from adding two polynomials together.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42059,"byte_end":42131,"line_start":227,"line_end":227,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42132,"byte_end":42135,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Polynomials `a` and `b` are expected to be in the coefficient form, and the returned","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42136,"byte_end":42224,"line_start":229,"line_end":229,"column_start":1,"column_end":89}},{"value":"/ polynomial will be in the coefficient form as well. The length of the returned vector","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42225,"byte_end":42314,"line_start":230,"line_end":230,"column_start":1,"column_end":90}},{"value":"/ will be max(a.len(), b.len()).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42315,"byte_end":42349,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42350,"byte_end":42353,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42354,"byte_end":42368,"line_start":233,"line_end":233,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42369,"byte_end":42376,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42377,"byte_end":42411,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42412,"byte_end":42479,"line_start":236,"line_end":236,"column_start":1,"column_end":68}},{"value":"/ // p1(x) = 4 * x^2 + 3 * x + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42480,"byte_end":42514,"line_start":237,"line_end":237,"column_start":1,"column_end":35}},{"value":"/ let p1 = (2_u32..5).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42515,"byte_end":42582,"line_start":238,"line_end":238,"column_start":1,"column_end":68}},{"value":"/ // p2(x) = 2 * x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42583,"byte_end":42607,"line_start":239,"line_end":239,"column_start":1,"column_end":25}},{"value":"/ let p2 = (1_u32..3).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42608,"byte_end":42675,"line_start":240,"line_end":240,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42676,"byte_end":42679,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ // expected result = 4 * x^2 + 5 * x + 3","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42680,"byte_end":42724,"line_start":242,"line_end":242,"column_start":1,"column_end":45}},{"value":"/ let expected = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42725,"byte_end":42749,"line_start":243,"line_end":243,"column_start":1,"column_end":25}},{"value":"/     BaseElement::new(3),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42750,"byte_end":42778,"line_start":244,"line_end":244,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(5),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42779,"byte_end":42807,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(4),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42808,"byte_end":42836,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42837,"byte_end":42843,"line_start":247,"line_end":247,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, add(&p1, &p2));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42844,"byte_end":42884,"line_start":248,"line_end":248,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":42885,"byte_end":42892,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44195,"byte_end":44198,"line_start":288,"line_end":288,"column_start":8,"column_end":11},"name":"sub","qualname":"::polynom::sub","value":"pub fn sub<E>(&[E], &[E]) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial resulting from subtracting one polynomial from another.","sig":null,"attributes":[{"value":"/ Returns a polynomial resulting from subtracting one polynomial from another.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43269,"byte_end":43349,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43350,"byte_end":43353,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ Specifically, subtracts polynomial `b` from polynomial `a` and returns the result. Both","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43354,"byte_end":43445,"line_start":266,"line_end":266,"column_start":1,"column_end":92}},{"value":"/ polynomials are expected to be in the coefficient form, and the returned polynomial will","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43446,"byte_end":43538,"line_start":267,"line_end":267,"column_start":1,"column_end":93}},{"value":"/ be in the coefficient form as well.  The length of the returned vector will be","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43539,"byte_end":43621,"line_start":268,"line_end":268,"column_start":1,"column_end":83}},{"value":"/ max(a.len(), b.len()).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43622,"byte_end":43648,"line_start":269,"line_end":269,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43649,"byte_end":43652,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43653,"byte_end":43667,"line_start":271,"line_end":271,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43668,"byte_end":43675,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43676,"byte_end":43710,"line_start":273,"line_end":273,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43711,"byte_end":43778,"line_start":274,"line_end":274,"column_start":1,"column_end":68}},{"value":"/ // p1(x) = 4 * x^2 + 3 * x + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43779,"byte_end":43813,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/ let p1 = (2_u32..5).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43814,"byte_end":43881,"line_start":276,"line_end":276,"column_start":1,"column_end":68}},{"value":"/ // p2(x) = 2 * x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43882,"byte_end":43906,"line_start":277,"line_end":277,"column_start":1,"column_end":25}},{"value":"/ let p2 = (1_u32..3).map(BaseElement::from).collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43907,"byte_end":43974,"line_start":278,"line_end":278,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43975,"byte_end":43978,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ // expected result = 4 * x^2 + x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":43979,"byte_end":44019,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/ let expected = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44020,"byte_end":44044,"line_start":281,"line_end":281,"column_start":1,"column_end":25}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44045,"byte_end":44073,"line_start":282,"line_end":282,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44074,"byte_end":44102,"line_start":283,"line_end":283,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(4),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44103,"byte_end":44131,"line_start":284,"line_end":284,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44132,"byte_end":44138,"line_start":285,"line_end":285,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, sub(&p1, &p2));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44139,"byte_end":44179,"line_start":286,"line_end":286,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44180,"byte_end":44187,"line_start":287,"line_end":287,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45413,"byte_end":45416,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"mul","qualname":"::polynom::mul","value":"pub fn mul<E>(&[E], &[E]) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial resulting from multiplying two polynomials together.","sig":null,"attributes":[{"value":"/ Returns a polynomial resulting from multiplying two polynomials together.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44564,"byte_end":44641,"line_start":302,"line_end":302,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44642,"byte_end":44645,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ Polynomials `a` and `b` are expected to be in the coefficient form, and the returned","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44646,"byte_end":44734,"line_start":304,"line_end":304,"column_start":1,"column_end":89}},{"value":"/ polynomial will be in the coefficient form as well. The length of the returned vector","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44735,"byte_end":44824,"line_start":305,"line_end":305,"column_start":1,"column_end":90}},{"value":"/ will be a.len() + b.len() - 1.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44825,"byte_end":44859,"line_start":306,"line_end":306,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44860,"byte_end":44863,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44864,"byte_end":44878,"line_start":308,"line_end":308,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44879,"byte_end":44886,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44887,"byte_end":44921,"line_start":310,"line_end":310,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44922,"byte_end":44989,"line_start":311,"line_end":311,"column_start":1,"column_end":68}},{"value":"/ // p1(x) = x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":44990,"byte_end":45010,"line_start":312,"line_end":312,"column_start":1,"column_end":21}},{"value":"/ let p1 = [BaseElement::ONE, BaseElement::ONE];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45011,"byte_end":45061,"line_start":313,"line_end":313,"column_start":1,"column_end":51}},{"value":"/ // p2(x) = x^2 + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45062,"byte_end":45084,"line_start":314,"line_end":314,"column_start":1,"column_end":23}},{"value":"/ let p2 = [BaseElement::new(2), BaseElement::ZERO, BaseElement::ONE];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45085,"byte_end":45157,"line_start":315,"line_end":315,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45158,"byte_end":45161,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ // expected result = x^3 + x^2 + 2 * x + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45162,"byte_end":45208,"line_start":317,"line_end":317,"column_start":1,"column_end":47}},{"value":"/ let expected = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45209,"byte_end":45233,"line_start":318,"line_end":318,"column_start":1,"column_end":25}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45234,"byte_end":45262,"line_start":319,"line_end":319,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45263,"byte_end":45291,"line_start":320,"line_end":320,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45292,"byte_end":45320,"line_start":321,"line_end":321,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45321,"byte_end":45349,"line_start":322,"line_end":322,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45350,"byte_end":45356,"line_start":323,"line_end":323,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, mul(&p1, &p2));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45357,"byte_end":45397,"line_start":324,"line_end":324,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45398,"byte_end":45405,"line_start":325,"line_end":325,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46393,"byte_end":46406,"line_start":364,"line_end":364,"column_start":8,"column_end":21},"name":"mul_by_scalar","qualname":"::polynom::mul_by_scalar","value":"pub fn mul_by_scalar<E>(&[E], E) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial resulting from multiplying a given polynomial by a scalar value.","sig":null,"attributes":[{"value":"/ Returns a polynomial resulting from multiplying a given polynomial by a scalar value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45723,"byte_end":45812,"line_start":341,"line_end":341,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45813,"byte_end":45816,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ Specifically, multiplies every coefficient of polynomial `p` by constant `k` and returns","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45817,"byte_end":45909,"line_start":343,"line_end":343,"column_start":1,"column_end":93}},{"value":"/ the resulting vector.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45910,"byte_end":45935,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45936,"byte_end":45939,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45940,"byte_end":45954,"line_start":346,"line_end":346,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45955,"byte_end":45962,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45963,"byte_end":45997,"line_start":348,"line_end":348,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":45998,"byte_end":46065,"line_start":349,"line_end":349,"column_start":1,"column_end":68}},{"value":"/ let p = [","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46066,"byte_end":46079,"line_start":350,"line_end":350,"column_start":1,"column_end":14}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46080,"byte_end":46108,"line_start":351,"line_end":351,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46109,"byte_end":46137,"line_start":352,"line_end":352,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(3),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46138,"byte_end":46166,"line_start":353,"line_end":353,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46167,"byte_end":46173,"line_start":354,"line_end":354,"column_start":1,"column_end":7}},{"value":"/ let k = BaseElement::new(2);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46174,"byte_end":46206,"line_start":355,"line_end":355,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46207,"byte_end":46210,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ let expected = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46211,"byte_end":46235,"line_start":357,"line_end":357,"column_start":1,"column_end":25}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46236,"byte_end":46264,"line_start":358,"line_end":358,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(4),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46265,"byte_end":46293,"line_start":359,"line_end":359,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(6),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46294,"byte_end":46322,"line_start":360,"line_end":360,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46323,"byte_end":46329,"line_start":361,"line_end":361,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, mul_by_scalar(&p, k));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46330,"byte_end":46377,"line_start":362,"line_end":362,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46378,"byte_end":46385,"line_start":363,"line_end":363,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47798,"byte_end":47801,"line_start":406,"line_end":406,"column_start":8,"column_end":11},"name":"div","qualname":"::polynom::div","value":"pub fn div<E>(&[E], &[E]) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial resulting from dividing one polynomial by another.","sig":null,"attributes":[{"value":"/ Returns a polynomial resulting from dividing one polynomial by another.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46588,"byte_end":46663,"line_start":375,"line_end":375,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46664,"byte_end":46667,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ Specifically, divides polynomial `a` by polynomial `b` and returns the result. If the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46668,"byte_end":46757,"line_start":377,"line_end":377,"column_start":1,"column_end":90}},{"value":"/ polynomials don't divide evenly, the remainder is ignored. Both polynomials are expected to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46758,"byte_end":46853,"line_start":378,"line_end":378,"column_start":1,"column_end":96}},{"value":"/ be in the coefficient form, and the returned polynomial will be in the coefficient form as","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46854,"byte_end":46948,"line_start":379,"line_end":379,"column_start":1,"column_end":95}},{"value":"/ well. The length of the returned vector will be a.len() - b.len() + 1.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":46949,"byte_end":47023,"line_start":380,"line_end":380,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47024,"byte_end":47027,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47028,"byte_end":47040,"line_start":382,"line_end":382,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47041,"byte_end":47055,"line_start":383,"line_end":383,"column_start":1,"column_end":15}},{"value":"/ * Polynomial `b` is empty.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47056,"byte_end":47086,"line_start":384,"line_end":384,"column_start":1,"column_end":31}},{"value":"/ * Degree of polynomial `b` is zero and the constant coefficient is ZERO.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47087,"byte_end":47163,"line_start":385,"line_end":385,"column_start":1,"column_end":77}},{"value":"/ * The degree of polynomial `b` is greater than the degree of polynomial `a`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47164,"byte_end":47244,"line_start":386,"line_end":386,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47245,"byte_end":47248,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47249,"byte_end":47263,"line_start":388,"line_end":388,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47264,"byte_end":47271,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47272,"byte_end":47306,"line_start":390,"line_end":390,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47307,"byte_end":47374,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ // p1(x) = x^3 + x^2 + 2 * x + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47375,"byte_end":47411,"line_start":392,"line_end":392,"column_start":1,"column_end":37}},{"value":"/ let p1 = [","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47412,"byte_end":47426,"line_start":393,"line_end":393,"column_start":1,"column_end":15}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47427,"byte_end":47455,"line_start":394,"line_end":394,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47456,"byte_end":47484,"line_start":395,"line_end":395,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47485,"byte_end":47513,"line_start":396,"line_end":396,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47514,"byte_end":47542,"line_start":397,"line_end":397,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47543,"byte_end":47549,"line_start":398,"line_end":398,"column_start":1,"column_end":7}},{"value":"/ // p2(x) = x^2 + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47550,"byte_end":47572,"line_start":399,"line_end":399,"column_start":1,"column_end":23}},{"value":"/ let p2 = [BaseElement::new(2), BaseElement::ZERO, BaseElement::ONE];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47573,"byte_end":47645,"line_start":400,"line_end":400,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47646,"byte_end":47649,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ // expected result = x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47650,"byte_end":47680,"line_start":402,"line_end":402,"column_start":1,"column_end":31}},{"value":"/ let expected = vec![BaseElement::ONE, BaseElement::ONE];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47681,"byte_end":47741,"line_start":403,"line_end":403,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(expected, div(&p1, &p2));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47742,"byte_end":47782,"line_start":404,"line_end":404,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":47783,"byte_end":47790,"line_start":405,"line_end":405,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49804,"byte_end":49811,"line_start":472,"line_end":472,"column_start":8,"column_end":15},"name":"syn_div","qualname":"::polynom::syn_div","value":"pub fn syn_div<E>(&[E], usize, E) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial resulting from dividing a polynomial by a polynomial of special form.","sig":null,"attributes":[{"value":"/ Returns a polynomial resulting from dividing a polynomial by a polynomial of special form.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48492,"byte_end":48586,"line_start":433,"line_end":433,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48587,"byte_end":48590,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Specifically, divides polynomial `p` by polynomial (x^`a` - `b`) using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48591,"byte_end":48665,"line_start":435,"line_end":435,"column_start":1,"column_end":75}},{"value":"/ [synthetic division](https://en.wikipedia.org/wiki/Synthetic_division) method; if the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48666,"byte_end":48755,"line_start":436,"line_end":436,"column_start":1,"column_end":90}},{"value":"/ polynomials don't divide evenly, the remainder is ignored. Polynomial `p` is expected","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48756,"byte_end":48845,"line_start":437,"line_end":437,"column_start":1,"column_end":90}},{"value":"/ to be in the coefficient form, and the result will be in the coefficient form as well.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48846,"byte_end":48936,"line_start":438,"line_end":438,"column_start":1,"column_end":91}},{"value":"/ The length of the resulting polynomial will be equal to `p.len()`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":48937,"byte_end":49007,"line_start":439,"line_end":439,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49008,"byte_end":49011,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ This function is significantly faster than the generic `polynom::div()` function.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49012,"byte_end":49097,"line_start":441,"line_end":441,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49098,"byte_end":49101,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49102,"byte_end":49114,"line_start":443,"line_end":443,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49115,"byte_end":49129,"line_start":444,"line_end":444,"column_start":1,"column_end":15}},{"value":"/ * `a` is zero;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49130,"byte_end":49148,"line_start":445,"line_end":445,"column_start":1,"column_end":19}},{"value":"/ * `b` is zero;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49149,"byte_end":49167,"line_start":446,"line_end":446,"column_start":1,"column_end":19}},{"value":"/ * `p.len()` is smaller than or equal to `a`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49168,"byte_end":49216,"line_start":447,"line_end":447,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49217,"byte_end":49220,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49221,"byte_end":49235,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49236,"byte_end":49243,"line_start":450,"line_end":450,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49244,"byte_end":49278,"line_start":451,"line_end":451,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49279,"byte_end":49346,"line_start":452,"line_end":452,"column_start":1,"column_end":68}},{"value":"/ // p(x) = x^3 + x^2 + 2 * x + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49347,"byte_end":49382,"line_start":453,"line_end":453,"column_start":1,"column_end":36}},{"value":"/ let p = [","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49383,"byte_end":49396,"line_start":454,"line_end":454,"column_start":1,"column_end":14}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49397,"byte_end":49425,"line_start":455,"line_end":455,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49426,"byte_end":49454,"line_start":456,"line_end":456,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49455,"byte_end":49483,"line_start":457,"line_end":457,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49484,"byte_end":49512,"line_start":458,"line_end":458,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49513,"byte_end":49519,"line_start":459,"line_end":459,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49520,"byte_end":49523,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ // expected result = x^2 + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49524,"byte_end":49556,"line_start":461,"line_end":461,"column_start":1,"column_end":33}},{"value":"/ let expected = vec![","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49557,"byte_end":49581,"line_start":462,"line_end":462,"column_start":1,"column_end":25}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49582,"byte_end":49610,"line_start":463,"line_end":463,"column_start":1,"column_end":29}},{"value":"/     BaseElement::ZERO,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49611,"byte_end":49637,"line_start":464,"line_end":464,"column_start":1,"column_end":27}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49638,"byte_end":49666,"line_start":465,"line_end":465,"column_start":1,"column_end":29}},{"value":"/     BaseElement::ZERO,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49667,"byte_end":49693,"line_start":466,"line_end":466,"column_start":1,"column_end":27}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49694,"byte_end":49700,"line_start":467,"line_end":467,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49701,"byte_end":49704,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ // divide by x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49705,"byte_end":49727,"line_start":469,"line_end":469,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(expected, syn_div(&p, 1, -BaseElement::ONE));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49728,"byte_end":49788,"line_start":470,"line_end":470,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49789,"byte_end":49796,"line_start":471,"line_end":471,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51384,"byte_end":51400,"line_start":524,"line_end":524,"column_start":8,"column_end":24},"name":"syn_div_in_place","qualname":"::polynom::syn_div_in_place","value":"pub fn syn_div_in_place<E>(&mut [E], usize, E) where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Divides a polynomial by a polynomial of special form and saves the result into the original\n polynomial.","sig":null,"attributes":[{"value":"/ Divides a polynomial by a polynomial of special form and saves the result into the original","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":49967,"byte_end":50062,"line_start":481,"line_end":481,"column_start":1,"column_end":96}},{"value":"/ polynomial.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50063,"byte_end":50078,"line_start":482,"line_end":482,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50079,"byte_end":50082,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ Specifically, divides polynomial `p` by polynomial (x^`a` - `b`) using","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50083,"byte_end":50157,"line_start":484,"line_end":484,"column_start":1,"column_end":75}},{"value":"/ [synthetic division](https://en.wikipedia.org/wiki/Synthetic_division) method and saves the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50158,"byte_end":50253,"line_start":485,"line_end":485,"column_start":1,"column_end":96}},{"value":"/ result into `p`. If the polynomials don't divide evenly, the remainder is ignored. Polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50254,"byte_end":50351,"line_start":486,"line_end":486,"column_start":1,"column_end":98}},{"value":"/ `p` is expected to be in the coefficient form, and the result will be in coefficient form as","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50352,"byte_end":50448,"line_start":487,"line_end":487,"column_start":1,"column_end":97}},{"value":"/ well.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50449,"byte_end":50458,"line_start":488,"line_end":488,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50459,"byte_end":50462,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ This function is significantly faster than the generic `polynom::div()` function, and as","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50463,"byte_end":50555,"line_start":490,"line_end":490,"column_start":1,"column_end":93}},{"value":"/ compared to `polynom::syn_div()` function, this function does not allocate any additional","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50556,"byte_end":50649,"line_start":491,"line_end":491,"column_start":1,"column_end":94}},{"value":"/ memory.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50650,"byte_end":50661,"line_start":492,"line_end":492,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50662,"byte_end":50665,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50666,"byte_end":50678,"line_start":494,"line_end":494,"column_start":1,"column_end":13}},{"value":"/ Panics if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50679,"byte_end":50693,"line_start":495,"line_end":495,"column_start":1,"column_end":15}},{"value":"/ * `a` is zero;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50694,"byte_end":50712,"line_start":496,"line_end":496,"column_start":1,"column_end":19}},{"value":"/ * `b` is zero;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50713,"byte_end":50731,"line_start":497,"line_end":497,"column_start":1,"column_end":19}},{"value":"/ * `p.len()` is smaller than or equal to `a`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50732,"byte_end":50780,"line_start":498,"line_end":498,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50781,"byte_end":50784,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50785,"byte_end":50799,"line_start":500,"line_end":500,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50800,"byte_end":50807,"line_start":501,"line_end":501,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50808,"byte_end":50842,"line_start":502,"line_end":502,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50843,"byte_end":50910,"line_start":503,"line_end":503,"column_start":1,"column_end":68}},{"value":"/ // p(x) = x^3 + x^2 + 2 * x + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50911,"byte_end":50946,"line_start":504,"line_end":504,"column_start":1,"column_end":36}},{"value":"/ let mut p = [","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50947,"byte_end":50964,"line_start":505,"line_end":505,"column_start":1,"column_end":18}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50965,"byte_end":50993,"line_start":506,"line_end":506,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":50994,"byte_end":51022,"line_start":507,"line_end":507,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51023,"byte_end":51051,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51052,"byte_end":51080,"line_start":509,"line_end":509,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51081,"byte_end":51087,"line_start":510,"line_end":510,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51088,"byte_end":51091,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ // divide by x + 1","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51092,"byte_end":51114,"line_start":512,"line_end":512,"column_start":1,"column_end":23}},{"value":"/ syn_div_in_place(&mut p, 1, -BaseElement::ONE);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51115,"byte_end":51166,"line_start":513,"line_end":513,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51167,"byte_end":51170,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ // expected result = x^2 + 2","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51171,"byte_end":51203,"line_start":515,"line_end":515,"column_start":1,"column_end":33}},{"value":"/ let expected = [","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51204,"byte_end":51224,"line_start":516,"line_end":516,"column_start":1,"column_end":21}},{"value":"/     BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51225,"byte_end":51253,"line_start":517,"line_end":517,"column_start":1,"column_end":29}},{"value":"/     BaseElement::ZERO,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51254,"byte_end":51280,"line_start":518,"line_end":518,"column_start":1,"column_end":27}},{"value":"/     BaseElement::new(1),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51281,"byte_end":51309,"line_start":519,"line_end":519,"column_start":1,"column_end":29}},{"value":"/     BaseElement::ZERO,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51310,"byte_end":51336,"line_start":520,"line_end":520,"column_start":1,"column_end":27}},{"value":"/ ];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51337,"byte_end":51343,"line_start":521,"line_end":521,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51344,"byte_end":51347,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(expected, p);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":51348,"byte_end":51376,"line_start":523,"line_end":523,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53798,"byte_end":53807,"line_start":591,"line_end":591,"column_start":8,"column_end":17},"name":"degree_of","qualname":"::polynom::degree_of","value":"pub fn degree_of<E>(&[E]) -> usize where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns the degree of the provided polynomial.","sig":null,"attributes":[{"value":"/ Returns the degree of the provided polynomial.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":52861,"byte_end":52911,"line_start":567,"line_end":567,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":52912,"byte_end":52915,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ If the size of the provided slice is much larger than the degree of the polynomial (i.e.,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":52916,"byte_end":53009,"line_start":569,"line_end":569,"column_start":1,"column_end":94}},{"value":"/ a large number of leading coefficients is ZERO), this operation can be quite inefficient.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53010,"byte_end":53103,"line_start":570,"line_end":570,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53104,"byte_end":53107,"line_start":571,"line_end":571,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53108,"byte_end":53122,"line_start":572,"line_end":572,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53123,"byte_end":53130,"line_start":573,"line_end":573,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53131,"byte_end":53165,"line_start":574,"line_end":574,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53166,"byte_end":53233,"line_start":575,"line_end":575,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, degree_of::<BaseElement>(&[]));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53234,"byte_end":53283,"line_start":576,"line_end":576,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(0, degree_of(&[BaseElement::ONE]));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53284,"byte_end":53334,"line_start":577,"line_end":577,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(1, degree_of(&[BaseElement::ONE, BaseElement::new(2)]));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53335,"byte_end":53406,"line_start":578,"line_end":578,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(1, degree_of(&[BaseElement::ONE, BaseElement::new(2), BaseElement::ZERO]));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53407,"byte_end":53497,"line_start":579,"line_end":579,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(2, degree_of(&[BaseElement::ONE, BaseElement::new(2), BaseElement::new(3)]));","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53498,"byte_end":53590,"line_start":580,"line_end":580,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53591,"byte_end":53606,"line_start":581,"line_end":581,"column_start":1,"column_end":16}},{"value":"/     2,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53607,"byte_end":53617,"line_start":582,"line_end":582,"column_start":1,"column_end":11}},{"value":"/     degree_of(&[","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53618,"byte_end":53638,"line_start":583,"line_end":583,"column_start":1,"column_end":21}},{"value":"/         BaseElement::ONE,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53639,"byte_end":53668,"line_start":584,"line_end":584,"column_start":1,"column_end":30}},{"value":"/         BaseElement::new(2),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53669,"byte_end":53701,"line_start":585,"line_end":585,"column_start":1,"column_end":33}},{"value":"/         BaseElement::new(3),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53702,"byte_end":53734,"line_start":586,"line_end":586,"column_start":1,"column_end":33}},{"value":"/         BaseElement::ZERO","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53735,"byte_end":53764,"line_start":587,"line_end":587,"column_start":1,"column_end":30}},{"value":"/     ])","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53765,"byte_end":53775,"line_start":588,"line_end":588,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53776,"byte_end":53782,"line_start":589,"line_end":589,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53783,"byte_end":53790,"line_start":590,"line_end":590,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54596,"byte_end":54616,"line_start":624,"line_end":624,"column_start":8,"column_end":28},"name":"remove_leading_zeros","qualname":"::polynom::remove_leading_zeros","value":"pub fn remove_leading_zeros<E>(&[E]) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a polynomial with all leading ZERO coefficients removed.","sig":null,"attributes":[{"value":"/ Returns a polynomial with all leading ZERO coefficients removed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":53977,"byte_end":54045,"line_start":603,"line_end":603,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54046,"byte_end":54049,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54050,"byte_end":54064,"line_start":605,"line_end":605,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54065,"byte_end":54072,"line_start":606,"line_end":606,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::polynom::*;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54073,"byte_end":54107,"line_start":607,"line_end":607,"column_start":1,"column_end":35}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54108,"byte_end":54175,"line_start":608,"line_end":608,"column_start":1,"column_end":68}},{"value":"/ let a = vec![1u128, 2, 3, 4, 5, 6, 0, 0]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54176,"byte_end":54220,"line_start":609,"line_end":609,"column_start":1,"column_end":45}},{"value":"/     .into_iter()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54221,"byte_end":54241,"line_start":610,"line_end":610,"column_start":1,"column_end":21}},{"value":"/     .map(BaseElement::new)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54242,"byte_end":54272,"line_start":611,"line_end":611,"column_start":1,"column_end":31}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54273,"byte_end":54302,"line_start":612,"line_end":612,"column_start":1,"column_end":30}},{"value":"/ let b = remove_leading_zeros(&a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54303,"byte_end":54340,"line_start":613,"line_end":613,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(6, b.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54341,"byte_end":54368,"line_start":614,"line_end":614,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(a[..6], b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54369,"byte_end":54395,"line_start":615,"line_end":615,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54396,"byte_end":54399,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ let a = vec![0u128, 0, 0, 0]","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54400,"byte_end":54432,"line_start":617,"line_end":617,"column_start":1,"column_end":33}},{"value":"/     .into_iter()","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54433,"byte_end":54453,"line_start":618,"line_end":618,"column_start":1,"column_end":21}},{"value":"/     .map(BaseElement::new)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54454,"byte_end":54484,"line_start":619,"line_end":619,"column_start":1,"column_end":31}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54485,"byte_end":54514,"line_start":620,"line_end":620,"column_start":1,"column_end":30}},{"value":"/ let b = remove_leading_zeros(&a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54515,"byte_end":54552,"line_start":621,"line_end":621,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(0, b.len());","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54553,"byte_end":54580,"line_start":622,"line_end":622,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/polynom/mod.rs","byte_start":54581,"byte_end":54588,"line_start":623,"line_end":623,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":223},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57006,"byte_end":57018,"line_start":29,"line_end":29,"column_start":11,"column_end":23},"name":"FieldElement","qualname":"::field::traits::FieldElement","value":"FieldElement: Copy + Clone + Debug + Display + Default + Send + Sync + Eq + PartialEq +\nSized + Add<Self, Output = Self> + Sub<Self, Output = Self> + Mul<Self, Output\n= Self> + Div<Self, Output = Self> + AddAssign<Self> + SubAssign<Self> +\nMulAssign<Self> + DivAssign<Self> + Neg<Output = Self> +\nFrom<<Self as FieldElement>::BaseField> + From<u128> + From<u64> + From<u32> +\nFrom<u16> + From<u8> + for<'a> TryFrom<&'a [u8]> + AsBytes + Randomizable +\nSerializable + Deserializable","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"decl_id":null,"docs":" Defines an element in a finite field.","sig":null,"attributes":[{"value":"/ Defines an element in a finite field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56453,"byte_end":56494,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56495,"byte_end":56498,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This trait defines basic arithmetic operations for elements in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56499,"byte_end":56565,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ [finite fields](https://en.wikipedia.org/wiki/Finite_field) (e.g. addition subtraction,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56566,"byte_end":56657,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ multiplication, division) as well as several convenience functions (e.g. double, square cube).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56658,"byte_end":56756,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ Moreover, it defines interfaces for serializing and deserializing field elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56757,"byte_end":56842,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56843,"byte_end":56846,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The elements could be in a prime field or an extension of a prime field. Currently, only","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56847,"byte_end":56939,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/ quadratic and cubic field extensions are supported.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":56940,"byte_end":56995,"line_start":28,"line_end":28,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57757,"byte_end":57772,"line_start":63,"line_end":63,"column_start":10,"column_end":25},"name":"PositiveInteger","qualname":"::field::traits::FieldElement::PositiveInteger","value":"type PositiveInteger: Debug\n        + Copy\n        + PartialEq\n        + PartialOrd\n        + ShrAssign\n        + Shl<u32, Output = Self::PositiveInteger>\n        + Shr<u32, Output = Self::PositiveInteger>\n        + BitAnd<Output = Self::PositiveInteger>\n        + From<u32>\n        + From<u64>;","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" A type defining positive integers big enough to describe a field modulus for\n `Self::BaseField` with no loss of precision.\n","sig":null,"attributes":[{"value":"/ A type defining positive integers big enough to describe a field modulus for","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57614,"byte_end":57694,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ `Self::BaseField` with no loss of precision.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57699,"byte_end":57747,"line_start":62,"line_end":62,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":226},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58168,"byte_end":58177,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"BaseField","qualname":"::field::traits::FieldElement::BaseField","value":"type BaseField: StarkField;","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Base field type for this finite field. For prime fields, `BaseField` should be set\n to `Self`.\n","sig":null,"attributes":[{"value":"/ Base field type for this finite field. For prime fields, `BaseField` should be set","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58053,"byte_end":58139,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/ to `Self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58144,"byte_end":58158,"line_start":75,"line_end":75,"column_start":5,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":227},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58254,"byte_end":58267,"line_start":79,"line_end":79,"column_start":11,"column_end":24},"name":"ELEMENT_BYTES","qualname":"::field::traits::FieldElement::ELEMENT_BYTES","value":"usize","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Number of bytes needed to encode an element\n","sig":null,"attributes":[{"value":"/ Number of bytes needed to encode an element","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58196,"byte_end":58243,"line_start":78,"line_end":78,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":228},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58387,"byte_end":58399,"line_start":82,"line_end":82,"column_start":11,"column_end":23},"name":"IS_CANONICAL","qualname":"::field::traits::FieldElement::IS_CANONICAL","value":"bool","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" True if internal representation of the element is the same as its canonical representation.\n","sig":null,"attributes":[{"value":"/ True if internal representation of the element is the same as its canonical representation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58281,"byte_end":58376,"line_start":81,"line_end":81,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":229},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58449,"byte_end":58453,"line_start":85,"line_end":85,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::field::traits::FieldElement::ZERO","value":"Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" The additive identity.\n","sig":null,"attributes":[{"value":"/ The additive identity.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58412,"byte_end":58438,"line_start":84,"line_end":84,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":230},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58509,"byte_end":58512,"line_start":88,"line_end":88,"column_start":11,"column_end":14},"name":"ONE","qualname":"::field::traits::FieldElement::ONE","value":"Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" The multiplicative identity.\n","sig":null,"attributes":[{"value":"/ The multiplicative identity.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58466,"byte_end":58498,"line_start":87,"line_end":87,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58726,"byte_end":58732,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"double","qualname":"::field::traits::FieldElement::double","value":"pub fn double(Self) -> Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns this field element added to itself.\n","sig":null,"attributes":[{"value":"/ Returns this field element added to itself.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58641,"byte_end":58688,"line_start":93,"line_end":93,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58693,"byte_end":58702,"line_start":94,"line_end":94,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58707,"byte_end":58718,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58867,"byte_end":58873,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"square","qualname":"::field::traits::FieldElement::square","value":"pub fn square(Self) -> Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns this field element raised to power 2.\n","sig":null,"attributes":[{"value":"/ Returns this field element raised to power 2.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58780,"byte_end":58829,"line_start":100,"line_end":100,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58834,"byte_end":58843,"line_start":101,"line_end":101,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58848,"byte_end":58859,"line_start":102,"line_end":102,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59008,"byte_end":59012,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"cube","qualname":"::field::traits::FieldElement::cube","value":"pub fn cube(Self) -> Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns this field element raised to power 3.\n","sig":null,"attributes":[{"value":"/ Returns this field element raised to power 3.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58921,"byte_end":58970,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58975,"byte_end":58984,"line_start":108,"line_end":108,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":58989,"byte_end":59000,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59149,"byte_end":59152,"line_start":116,"line_end":116,"column_start":8,"column_end":11},"name":"exp","qualname":"::field::traits::FieldElement::exp","value":"pub fn exp(Self, Self::PositiveInteger) -> Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Exponentiates this field element by `power` parameter.\n","sig":null,"attributes":[{"value":"/ Exponentiates this field element by `power` parameter.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59067,"byte_end":59125,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59130,"byte_end":59141,"line_start":115,"line_end":115,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59863,"byte_end":59866,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"inv","qualname":"::field::traits::FieldElement::inv","value":"pub fn inv(Self) -> Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns a multiplicative inverse of this field element. If this element is ZERO, ZERO is\n returned.\n","sig":null,"attributes":[{"value":"/ Returns a multiplicative inverse of this field element. If this element is ZERO, ZERO is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59729,"byte_end":59821,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/ returned.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59826,"byte_end":59839,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"must_use","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59844,"byte_end":59855,"line_start":143,"line_end":143,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59957,"byte_end":59966,"line_start":148,"line_end":148,"column_start":8,"column_end":17},"name":"conjugate","qualname":"::field::traits::FieldElement::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns a conjugate of this field element.\n","sig":null,"attributes":[{"value":"/ Returns a conjugate of this field element.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59887,"byte_end":59933,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"must_use","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":59938,"byte_end":59949,"line_start":147,"line_end":147,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60410,"byte_end":60427,"line_start":158,"line_end":158,"column_start":8,"column_end":25},"name":"elements_as_bytes","qualname":"::field::traits::FieldElement::elements_as_bytes","value":"pub fn elements_as_bytes(&[Self]) -> &[u8]","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Converts a list of elements into a list of bytes.","sig":null,"attributes":[{"value":"/ Converts a list of elements into a list of bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60128,"byte_end":60181,"line_start":153,"line_end":153,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60186,"byte_end":60189,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The elements may be in the internal representation rather than in the canonical","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60194,"byte_end":60277,"line_start":155,"line_end":155,"column_start":5,"column_end":88}},{"value":"/ representation. This conversion is intended to be zero-copy (i.e. by re-interpreting the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60282,"byte_end":60374,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ underlying memory).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60379,"byte_end":60402,"line_start":157,"line_end":157,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61189,"byte_end":61206,"line_start":174,"line_end":174,"column_start":15,"column_end":32},"name":"bytes_as_elements","qualname":"::field::traits::FieldElement::bytes_as_elements","value":"pub unsafe fn bytes_as_elements(&[u8])\n-> Result<&[Self], DeserializationError>","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Converts a list of bytes into a list of field elements.","sig":null,"attributes":[{"value":"/ Converts a list of bytes into a list of field elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60462,"byte_end":60521,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60526,"byte_end":60529,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The elements are assumed to encoded in the internal representation rather than in the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60534,"byte_end":60623,"line_start":162,"line_end":162,"column_start":5,"column_end":94}},{"value":"/ canonical representation. The conversion is intended to be zero-copy (i.e. by","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60628,"byte_end":60709,"line_start":163,"line_end":163,"column_start":5,"column_end":86}},{"value":"/ re-interpreting the underlying memory).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60714,"byte_end":60757,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60762,"byte_end":60765,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60770,"byte_end":60782,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/ An error is returned if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60787,"byte_end":60815,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/ * Memory alignment of `bytes` does not match memory alignment of field element data.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60820,"byte_end":60908,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/ * Length of `bytes` does not divide into whole number of elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60913,"byte_end":60983,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60988,"byte_end":60991,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":60996,"byte_end":61008,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ This function is unsafe because it does not check whether underlying bytes represent valid","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61013,"byte_end":61107,"line_start":172,"line_end":172,"column_start":5,"column_end":99}},{"value":"/ field elements according to their internal representation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61112,"byte_end":61174,"line_start":173,"line_end":173,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61572,"byte_end":61585,"line_start":182,"line_end":182,"column_start":8,"column_end":21},"name":"zeroed_vector","qualname":"::field::traits::FieldElement::zeroed_vector","value":"pub fn zeroed_vector(usize) -> Vec<Self>","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Returns a vector of length `n` initialized with all ZERO elements.","sig":null,"attributes":[{"value":"/ Returns a vector of length `n` initialized with all ZERO elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61386,"byte_end":61456,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61461,"byte_end":61464,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Specialized implementations of this function may be faster than the generic implementation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61469,"byte_end":61564,"line_start":181,"line_end":181,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61967,"byte_end":61983,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"as_base_elements","qualname":"::field::traits::FieldElement::as_base_elements","value":"pub fn as_base_elements(&[Self]) -> &[Self::BaseField]","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Converts a list of field elements into a list of elements in the underlying base field.","sig":null,"attributes":[{"value":"/ Converts a list of field elements into a list of elements in the underlying base field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61650,"byte_end":61741,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61746,"byte_end":61749,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ For base STARK fields, the input and output lists are the same. For extension field, the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61754,"byte_end":61846,"line_start":188,"line_end":188,"column_start":5,"column_end":97}},{"value":"/ output list will contain decompositions of each extension element into underlying base","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61851,"byte_end":61941,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/ elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":61946,"byte_end":61959,"line_start":190,"line_end":190,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":241},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62466,"byte_end":62476,"line_start":202,"line_end":202,"column_start":11,"column_end":21},"name":"StarkField","qualname":"::field::traits::StarkField","value":"StarkField: FieldElement<BaseField = Self>","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" Defines an element in a STARK-friendly finite field.","sig":null,"attributes":[{"value":"/ Defines an element in a STARK-friendly finite field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62145,"byte_end":62201,"line_start":197,"line_end":197,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62202,"byte_end":62205,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ A STARK-friendly field is defined as a prime field with high two-addicity. That is, the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62206,"byte_end":62297,"line_start":199,"line_end":199,"column_start":1,"column_end":92}},{"value":"/ the modulus of the field should be a prime number of the form `k` * 2^`n` + 1 (a Proth prime),","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62298,"byte_end":62396,"line_start":200,"line_end":200,"column_start":1,"column_end":99}},{"value":"/ where `n` is relatively large (e.g., greater than 32).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62397,"byte_end":62455,"line_start":201,"line_end":201,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":242},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62666,"byte_end":62673,"line_start":205,"line_end":205,"column_start":11,"column_end":18},"name":"MODULUS","qualname":"::field::traits::StarkField::MODULUS","value":"Self::PositiveInteger","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Prime modulus of the field. Must be of the form `k` * 2^`n` + 1 (a Proth prime).\n This ensures that the field has high 2-adicity.\n","sig":null,"attributes":[{"value":"/ Prime modulus of the field. Must be of the form `k` * 2^`n` + 1 (a Proth prime).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62515,"byte_end":62599,"line_start":203,"line_end":203,"column_start":5,"column_end":89}},{"value":"/ This ensures that the field has high 2-adicity.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62604,"byte_end":62655,"line_start":204,"line_end":204,"column_start":5,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":243},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62774,"byte_end":62786,"line_start":208,"line_end":208,"column_start":11,"column_end":23},"name":"MODULUS_BITS","qualname":"::field::traits::StarkField::MODULUS_BITS","value":"u32","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" The number of bits needed to represents `Self::MODULUS`.\n","sig":null,"attributes":[{"value":"/ The number of bits needed to represents `Self::MODULUS`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62703,"byte_end":62763,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":244},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62853,"byte_end":62862,"line_start":211,"line_end":211,"column_start":11,"column_end":20},"name":"GENERATOR","qualname":"::field::traits::StarkField::GENERATOR","value":"Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" A multiplicative generator of the field.\n","sig":null,"attributes":[{"value":"/ A multiplicative generator of the field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62798,"byte_end":62842,"line_start":210,"line_end":210,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":245},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62952,"byte_end":62963,"line_start":214,"line_end":214,"column_start":11,"column_end":22},"name":"TWO_ADICITY","qualname":"::field::traits::StarkField::TWO_ADICITY","value":"u32","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Let Self::MODULUS = `k` * 2^`n` + 1; then, TWO_ADICITY is `n`.\n","sig":null,"attributes":[{"value":"/ Let Self::MODULUS = `k` * 2^`n` + 1; then, TWO_ADICITY is `n`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62875,"byte_end":62941,"line_start":213,"line_end":213,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":246},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63119,"byte_end":63141,"line_start":218,"line_end":218,"column_start":11,"column_end":33},"name":"TWO_ADIC_ROOT_OF_UNITY","qualname":"::field::traits::StarkField::TWO_ADIC_ROOT_OF_UNITY","value":"Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Let Self::MODULUS = `k` * 2^`n` + 1; then, TWO_ADIC_ROOT_OF_UNITY is 2^`n` root of unity\n computed as Self::GENERATOR^`k`.\n","sig":null,"attributes":[{"value":"/ Let Self::MODULUS = `k` * 2^`n` + 1; then, TWO_ADIC_ROOT_OF_UNITY is 2^`n` root of unity","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62975,"byte_end":63067,"line_start":216,"line_end":216,"column_start":5,"column_end":97}},{"value":"/ computed as Self::GENERATOR^`k`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63072,"byte_end":63108,"line_start":217,"line_end":217,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63322,"byte_end":63339,"line_start":224,"line_end":224,"column_start":8,"column_end":25},"name":"get_root_of_unity","qualname":"::field::traits::StarkField::get_root_of_unity","value":"pub fn get_root_of_unity(u32) -> Self","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Returns the root of unity of order 2^`n`.","sig":null,"attributes":[{"value":"/ Returns the root of unity of order 2^`n`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63154,"byte_end":63199,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63204,"byte_end":63207,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63212,"byte_end":63224,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/ Panics if the root of unity for the specified order does not exist in this field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63229,"byte_end":63314,"line_start":223,"line_end":223,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63785,"byte_end":63805,"line_start":236,"line_end":236,"column_start":8,"column_end":28},"name":"get_modulus_le_bytes","qualname":"::field::traits::StarkField::get_modulus_le_bytes","value":"pub fn get_modulus_le_bytes() -> Vec<u8>","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Returns byte representation of the field modulus in little-endian byte order.\n","sig":null,"attributes":[{"value":"/ Returns byte representation of the field modulus in little-endian byte order.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63696,"byte_end":63777,"line_start":235,"line_end":235,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63902,"byte_end":63908,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"as_int","qualname":"::field::traits::StarkField::as_int","value":"pub fn as_int(&Self) -> Self::PositiveInteger","parent":{"krate":0,"index":241},"children":[],"decl_id":null,"docs":" Returns a canonical integer representation of this field element.\n","sig":null,"attributes":[{"value":"/ Returns a canonical integer representation of this field element.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":63825,"byte_end":63894,"line_start":238,"line_end":238,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64573,"byte_end":64588,"line_start":253,"line_end":253,"column_start":11,"column_end":26},"name":"ExtensibleField","qualname":"::field::traits::ExtensibleField","value":"ExtensibleField<const N: usize>: StarkField","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":259}],"decl_id":null,"docs":" Defines basic arithmetic in an extension of a StarkField of a given degree.","sig":null,"attributes":[{"value":"/ Defines basic arithmetic in an extension of a StarkField of a given degree.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64066,"byte_end":64145,"line_start":245,"line_end":245,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64146,"byte_end":64149,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ This trait defines how to perform multiplication and compute a Frobenius automorphisms of an","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64150,"byte_end":64246,"line_start":247,"line_end":247,"column_start":1,"column_end":97}},{"value":"/ element in an extension of degree N for a given [StarkField]. It as assumed that an element in","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64247,"byte_end":64345,"line_start":248,"line_end":248,"column_start":1,"column_end":99}},{"value":"/ degree N extension field can be represented by N field elements in the base field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64346,"byte_end":64432,"line_start":249,"line_end":249,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64433,"byte_end":64436,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Implementation of this trait implicitly defines the irreducible polynomial over which the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64437,"byte_end":64530,"line_start":251,"line_end":251,"column_start":1,"column_end":94}},{"value":"/ extension field is defined.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64531,"byte_end":64562,"line_start":252,"line_end":252,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64707,"byte_end":64710,"line_start":255,"line_end":255,"column_start":8,"column_end":11},"name":"mul","qualname":"::field::traits::ExtensibleField::mul","value":"pub fn mul([Self; ], [Self; ]) -> [Self; ]","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Returns a product of `a` and `b` in the field defined by this extension.\n","sig":null,"attributes":[{"value":"/ Returns a product of `a` and `b` in the field defined by this extension.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64623,"byte_end":64699,"line_start":254,"line_end":254,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64849,"byte_end":64858,"line_start":258,"line_end":258,"column_start":8,"column_end":17},"name":"frobenius","qualname":"::field::traits::ExtensibleField::frobenius","value":"pub fn frobenius([Self; ]) -> [Self; ]","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Returns Frobenius automorphisms for `x` in the field defined by this extension.\n","sig":null,"attributes":[{"value":"/ Returns Frobenius automorphisms for `x` in the field defined by this extension.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64758,"byte_end":64841,"line_start":257,"line_end":257,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64978,"byte_end":64990,"line_start":261,"line_end":261,"column_start":8,"column_end":20},"name":"is_supported","qualname":"::field::traits::ExtensibleField::is_supported","value":"pub fn is_supported() -> bool","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Returns true if this extension is supported for the underlying base field.\n","sig":null,"attributes":[{"value":"/ Returns true if this extension is supported for the underlying base field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64892,"byte_end":64970,"line_start":260,"line_end":260,"column_start":5,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":270},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"f128","qualname":"::field::f128","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":384},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":429},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"decl_id":null,"docs":" An implementation of a 128-bit STARK-friendly prime field with modulus $2^{128} - 45 \\cdot 2^{40} + 1$.","sig":null,"attributes":[{"value":"/ An implementation of a 128-bit STARK-friendly prime field with modulus $2^{128} - 45 \\cdot 2^{40} + 1$.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":65207,"byte_end":65314,"line_start":6,"line_end":6,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":65315,"byte_end":65318,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Operations in this field are implemented using Barret reduction and are stored in their","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":65319,"byte_end":65410,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ canonical form using `u128` as the backing type. However, this field was not chosen with any","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":65411,"byte_end":65507,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ significant thought given to performance, and the implementations of most operations are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":65508,"byte_end":65600,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ sub-optimal as well.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":65601,"byte_end":65625,"line_start":11,"line_end":11,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66830,"byte_end":66841,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"BaseElement","qualname":"::field::f128::BaseElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a base field element.","sig":null,"attributes":[{"value":"/ Represents a base field element.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66616,"byte_end":66652,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66653,"byte_end":66656,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Internal values are stored in their canonical form in the range [0, M). The backing type is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66657,"byte_end":66752,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ `u128`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66753,"byte_end":66764,"line_start":52,"line_end":52,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":67114,"byte_end":67117,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<BaseElement>::new","value":"pub const fn new(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new field element from a u128 value. If the value is greater than or equal to\n the field modulus, modular reduction is silently performed. This function can also be used\n to initialize constants.\n","sig":null,"attributes":[{"value":"/ Creates a new field element from a u128 value. If the value is greater than or equal to","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66873,"byte_end":66964,"line_start":57,"line_end":57,"column_start":5,"column_end":96}},{"value":"/ the field modulus, modular reduction is silently performed. This function can also be used","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66969,"byte_end":67063,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ to initialize constants.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":67068,"byte_end":67096,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":477},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"f62","qualname":"::field::f62","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":591},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":639},{"krate":0,"index":648},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":664},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" An implementation of a 62-bit STARK-friendly prime field with modulus $2^{62} - 111 \\cdot 2^{39} + 1$.","sig":null,"attributes":[{"value":"/ An implementation of a 62-bit STARK-friendly prime field with modulus $2^{62} - 111 \\cdot 2^{39} + 1$.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":83119,"byte_end":83225,"line_start":6,"line_end":6,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":83226,"byte_end":83229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ All operations in this field are implemented using Montgomery arithmetic. It supports very","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":83230,"byte_end":83324,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ fast modular arithmetic including branchless multiplication and addition. Base elements are","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":83325,"byte_end":83420,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ stored in the Montgomery form using `u64` as the backing type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":83421,"byte_end":83487,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84969,"byte_end":84980,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"BaseElement","qualname":"::field::f62::BaseElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents base field element in the field.","sig":null,"attributes":[{"value":"/ Represents base field element in the field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84743,"byte_end":84790,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84791,"byte_end":84794,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Internal values are stored in Montgomery representation and can be in the range [0; 2M). The","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84795,"byte_end":84891,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/ backing type is `u64`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84892,"byte_end":84918,"line_start":58,"line_end":58,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":85150,"byte_end":85153,"line_start":65,"line_end":65,"column_start":18,"column_end":21},"name":"new","qualname":"<BaseElement>::new","value":"pub const fn new(u64) -> BaseElement","parent":null,"children":[],"decl_id":null,"docs":" Creates a new field element from the provided `value`; the value is converted into\n Montgomery representation.\n","sig":null,"attributes":[{"value":"/ Creates a new field element from the provided `value`; the value is converted into","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":85011,"byte_end":85097,"line_start":63,"line_end":63,"column_start":5,"column_end":91}},{"value":"/ Montgomery representation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":85102,"byte_end":85132,"line_start":64,"line_end":64,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":682},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"f64","qualname":"::field::f64","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":794},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":842},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":865},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878}],"decl_id":null,"docs":" An implementation of a 64-bit STARK-friendly prime field with modulus $2^{64} - 2^{32} + 1$.","sig":null,"attributes":[{"value":"/ An implementation of a 64-bit STARK-friendly prime field with modulus $2^{64} - 2^{32} + 1$.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101489,"byte_end":101585,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101586,"byte_end":101589,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This field supports very fast modular arithmetic and has a number of other attractive","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101590,"byte_end":101679,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ properties, including:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101680,"byte_end":101706,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/ * Multiplication of two 32-bit values does not overflow field modulus.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101707,"byte_end":101781,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ * Field arithmetic in this field can be implemented using a few 32-bit addition, subtractions,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101782,"byte_end":101880,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/   and shifts.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101881,"byte_end":101898,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/ * $8$ is the 64th root of unity which opens up potential for optimized FFT implementations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101899,"byte_end":101994,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101995,"byte_end":101998,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Internally, the values are stored in the range $[0, 2^{64})$ using `u64` as the backing type.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":101999,"byte_end":102096,"line_start":15,"line_end":15,"column_start":1,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103256,"byte_end":103267,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"BaseElement","qualname":"::field::f64::BaseElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents base field element in the field.","sig":null,"attributes":[{"value":"/ Represents base field element in the field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103072,"byte_end":103119,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103120,"byte_end":103123,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Internal values are stored in the range [0, 2^64). The backing type is `u64`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103124,"byte_end":103205,"line_start":56,"line_end":56,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103483,"byte_end":103486,"line_start":63,"line_end":63,"column_start":18,"column_end":21},"name":"new","qualname":"<BaseElement>::new","value":"pub const fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new field element from the provided `value`. If the value is greater than or\n equal to the field modulus, modular reduction is silently performed.\n","sig":null,"attributes":[{"value":"/ Creates a new field element from the provided `value`. If the value is greater than or","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103298,"byte_end":103388,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ equal to the field modulus, modular reduction is silently performed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103393,"byte_end":103465,"line_start":62,"line_end":62,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120659,"byte_end":120672,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"QuadExtension","qualname":"::field::extensions::quadratic::QuadExtension","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents an element in a quadratic extension of a [StarkField](crate::StarkField).","sig":null,"attributes":[{"value":"/ Represents an element in a quadratic extension of a [StarkField](crate::StarkField).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120279,"byte_end":120367,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120368,"byte_end":120371,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The extension element is defined as α + β * φ, where φ is a root of in irreducible polynomial","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120372,"byte_end":120473,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ defined by the implementation of the [ExtensibleField] trait, and α and β are base field","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120474,"byte_end":120568,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120569,"byte_end":120582,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"repr(C)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120583,"byte_end":120593,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120848,"byte_end":120851,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<QuadExtension<B>>::new","value":"pub fn new(B, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new extension element instantiated from the provided base elements.\n","sig":null,"attributes":[{"value":"/ Returns a new extension element instantiated from the provided base elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120755,"byte_end":120836,"line_start":31,"line_end":31,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":121011,"byte_end":121023,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"is_supported","qualname":"<QuadExtension<B>>::is_supported","value":"pub fn is_supported() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the base field specified by B type parameter supports quadratic extensions.\n","sig":null,"attributes":[{"value":"/ Returns true if the base field specified by B type parameter supports quadratic extensions.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120904,"byte_end":120999,"line_start":36,"line_end":36,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134501,"byte_end":134514,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"CubeExtension","qualname":"::field::extensions::cubic::CubeExtension","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents an element in a cubic extension of a [StarkField](crate::StarkField).","sig":null,"attributes":[{"value":"/ Represents an element in a cubic extension of a [StarkField](crate::StarkField).","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134112,"byte_end":134196,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134197,"byte_end":134200,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The extension element is defined as α + β * φ + γ * φ^2, where φ is a root of in irreducible","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134201,"byte_end":134303,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ polynomial defined by the implementation of the [ExtensibleField] trait, and α, β, γ are base","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134304,"byte_end":134404,"line_start":24,"line_end":24,"column_start":1,"column_end":98}},{"value":"/ field elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134405,"byte_end":134424,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134425,"byte_end":134435,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134693,"byte_end":134696,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<CubeExtension<B>>::new","value":"pub fn new(B, B, B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new extension element instantiated from the provided base elements.\n","sig":null,"attributes":[{"value":"/ Returns a new extension element instantiated from the provided base elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134600,"byte_end":134681,"line_start":31,"line_end":31,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134861,"byte_end":134873,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"is_supported","qualname":"<CubeExtension<B>>::is_supported","value":"pub fn is_supported() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the base field specified by B type parameter supports cubic extensions.\n","sig":null,"attributes":[{"value":"/ Returns true if the base field specified by B type parameter supports cubic extensions.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134758,"byte_end":134849,"line_start":36,"line_end":36,"column_start":5,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5031,"byte_end":5037,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"fields","qualname":"::fields","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319}],"decl_id":null,"docs":" Finite field implementations.","sig":null,"attributes":[{"value":"/ Finite field implementations.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5044,"byte_end":5077,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5082,"byte_end":5085,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This module contains concrete implementations of base STARK fields as well as extensions","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5090,"byte_end":5182,"line_start":104,"line_end":104,"column_start":5,"column_end":97}},{"value":"/ of these field.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":5187,"byte_end":5206,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149462,"byte_end":149478,"line_start":36,"line_end":36,"column_start":8,"column_end":24},"name":"get_power_series","qualname":"::utils::get_power_series","value":"pub fn get_power_series<E>(E, usize) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector containing successive powers of a given base.","sig":null,"attributes":[{"value":"/ Returns a vector containing successive powers of a given base.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":148797,"byte_end":148863,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":148864,"byte_end":148867,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ More precisely, for base `b`, generates a vector with values [1, b, b^2, b^3, ..., b^(n-1)].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":148868,"byte_end":148964,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":148965,"byte_end":148968,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, series generation is done concurrently in multiple","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":148969,"byte_end":149061,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149062,"byte_end":149074,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149075,"byte_end":149078,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149079,"byte_end":149093,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149094,"byte_end":149101,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::get_power_series;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149102,"byte_end":149142,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149143,"byte_end":149210,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149211,"byte_end":149228,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ let b = BaseElement::from(3u8);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149229,"byte_end":149264,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149265,"byte_end":149268,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let expected = (0..n)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149269,"byte_end":149294,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/     .map(|p| b.exp((p as u64).into()))","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149295,"byte_end":149337,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149338,"byte_end":149367,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149368,"byte_end":149371,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let actual = get_power_series(b, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149372,"byte_end":149412,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(expected, actual);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149413,"byte_end":149446,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149447,"byte_end":149454,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150587,"byte_end":150615,"line_start":71,"line_end":71,"column_start":8,"column_end":36},"name":"get_power_series_with_offset","qualname":"::utils::get_power_series_with_offset","value":"pub fn get_power_series_with_offset<E>(E, E, usize) -> Vec<E> where\nE: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector containing successive powers of a given base offset by the specified value.","sig":null,"attributes":[{"value":"/ Returns a vector containing successive powers of a given base offset by the specified value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149790,"byte_end":149886,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149887,"byte_end":149890,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ More precisely, for base `b` and offset `s`, generates a vector with values","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149891,"byte_end":149970,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ [s, s * b, s * b^2, s * b^3, ..., s * b^(n-1)].","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":149971,"byte_end":150022,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150023,"byte_end":150026,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, series generation is done concurrently in multiple","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150027,"byte_end":150119,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150120,"byte_end":150132,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150133,"byte_end":150136,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150137,"byte_end":150151,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150152,"byte_end":150159,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::get_power_series_with_offset;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150160,"byte_end":150212,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150213,"byte_end":150280,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/ let n = 2048;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150281,"byte_end":150298,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/ let b = BaseElement::from(3u8);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150299,"byte_end":150334,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/ let s = BaseElement::from(7u8);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150335,"byte_end":150370,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150371,"byte_end":150374,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let expected = (0..n)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150375,"byte_end":150400,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/     .map(|p| s * b.exp((p as u64).into()))","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150401,"byte_end":150447,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150448,"byte_end":150477,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150478,"byte_end":150481,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let actual = get_power_series_with_offset(b, s, n);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150482,"byte_end":150537,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(expected, actual);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150538,"byte_end":150571,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150572,"byte_end":150579,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151660,"byte_end":151672,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"add_in_place","qualname":"::utils::add_in_place","value":"pub fn add_in_place<E>(&mut [E], &[E]) where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Computes element-wise sum of the provided vectors, and stores the result in the first vector.","sig":null,"attributes":[{"value":"/ Computes element-wise sum of the provided vectors, and stores the result in the first vector.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":150937,"byte_end":151034,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151035,"byte_end":151038,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the summation is performed concurrently in multiple","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151039,"byte_end":151132,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"/ threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151133,"byte_end":151145,"line_start":86,"line_end":86,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151146,"byte_end":151149,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151150,"byte_end":151162,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/ Panics if lengths of `a` and `b` vectors are not the same.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151163,"byte_end":151225,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151226,"byte_end":151229,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151230,"byte_end":151244,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151245,"byte_end":151252,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::add_in_place;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151253,"byte_end":151289,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151290,"byte_end":151357,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151358,"byte_end":151392,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ let a: Vec<BaseElement> = rand_vector(2048);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151393,"byte_end":151441,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/ let b: Vec<BaseElement> = rand_vector(2048);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151442,"byte_end":151490,"line_start":97,"line_end":97,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151491,"byte_end":151494,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let mut c = a.clone();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151495,"byte_end":151521,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/ add_in_place(&mut c, &b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151522,"byte_end":151551,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151552,"byte_end":151555,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ for ((a, b), c) in a.into_iter().zip(b).zip(c) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151556,"byte_end":151608,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(a + b, c);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151609,"byte_end":151638,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151639,"byte_end":151644,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151645,"byte_end":151652,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152727,"byte_end":152734,"line_start":143,"line_end":143,"column_start":8,"column_end":15},"name":"mul_acc","qualname":"::utils::mul_acc","value":"pub fn mul_acc<B, E>(&mut [E], &[B], E) where B: FieldElement,\nE: FieldElement + From<B>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies a sequence of values by a scalar and accumulates the results.","sig":null,"attributes":[{"value":"/ Multiplies a sequence of values by a scalar and accumulates the results.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151893,"byte_end":151969,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151970,"byte_end":151973,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ More precisely, computes `a[i]` + `b[i]` * `c` for all `i` and saves result into `a[i]`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":151974,"byte_end":152066,"line_start":119,"line_end":119,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152067,"byte_end":152070,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the computation is performed concurrently in multiple","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152071,"byte_end":152166,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152167,"byte_end":152179,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152180,"byte_end":152183,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152184,"byte_end":152196,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/ Panics if lengths of `a` and `b` slices are not the same.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152197,"byte_end":152258,"line_start":125,"line_end":125,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152259,"byte_end":152262,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152263,"byte_end":152277,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152278,"byte_end":152285,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::mul_acc;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152286,"byte_end":152317,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152318,"byte_end":152385,"line_start":130,"line_end":130,"column_start":1,"column_end":68}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152386,"byte_end":152420,"line_start":131,"line_end":131,"column_start":1,"column_end":35}},{"value":"/ let a: Vec<BaseElement> = rand_vector(2048);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152421,"byte_end":152469,"line_start":132,"line_end":132,"column_start":1,"column_end":49}},{"value":"/ let b: Vec<BaseElement> = rand_vector(2048);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152470,"byte_end":152518,"line_start":133,"line_end":133,"column_start":1,"column_end":49}},{"value":"/ let c = BaseElement::new(12345);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152519,"byte_end":152555,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152556,"byte_end":152559,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let mut d = a.clone();","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152560,"byte_end":152586,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"/ mul_acc(&mut d, &b, c);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152587,"byte_end":152614,"line_start":137,"line_end":137,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152615,"byte_end":152618,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ for ((a, b), d) in a.into_iter().zip(b).zip(d) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152619,"byte_end":152671,"line_start":139,"line_end":139,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(a + b * c, d);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152672,"byte_end":152705,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152706,"byte_end":152711,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":152712,"byte_end":152719,"line_start":142,"line_end":142,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153799,"byte_end":153814,"line_start":177,"line_end":177,"column_start":8,"column_end":23},"name":"batch_inversion","qualname":"::utils::batch_inversion","value":"pub fn batch_inversion<E>(&[E]) -> Vec<E> where E: FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Computes a multiplicative inverse of a sequence of elements using batch inversion method.","sig":null,"attributes":[{"value":"/ Computes a multiplicative inverse of a sequence of elements using batch inversion method.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153006,"byte_end":153099,"line_start":155,"line_end":155,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153100,"byte_end":153103,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Any ZEROs in the provided sequence are ignored.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153104,"byte_end":153155,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153156,"byte_end":153159,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the inversion is performed concurrently in multiple","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153160,"byte_end":153253,"line_start":159,"line_end":159,"column_start":1,"column_end":94}},{"value":"/ threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153254,"byte_end":153266,"line_start":160,"line_end":160,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153267,"byte_end":153270,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This function is significantly faster than inverting elements one-by-one because it","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153271,"byte_end":153358,"line_start":162,"line_end":162,"column_start":1,"column_end":88}},{"value":"/ essentially transforms `n` inversions into `4 * n` multiplications + 1 inversion.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153359,"byte_end":153444,"line_start":163,"line_end":163,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153445,"byte_end":153448,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153449,"byte_end":153463,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153464,"byte_end":153471,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::batch_inversion;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153472,"byte_end":153511,"line_start":167,"line_end":167,"column_start":1,"column_end":40}},{"value":"/ # use winter_math::{fields::{f128::BaseElement}, FieldElement};","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153512,"byte_end":153579,"line_start":168,"line_end":168,"column_start":1,"column_end":68}},{"value":"/ # use rand_utils::rand_vector;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153580,"byte_end":153614,"line_start":169,"line_end":169,"column_start":1,"column_end":35}},{"value":"/ let a: Vec<BaseElement> = rand_vector(2048);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153615,"byte_end":153663,"line_start":170,"line_end":170,"column_start":1,"column_end":49}},{"value":"/ let b = batch_inversion(&a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153664,"byte_end":153696,"line_start":171,"line_end":171,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153697,"byte_end":153700,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ for (&a, &b) in a.iter().zip(b.iter()) {","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153701,"byte_end":153745,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     assert_eq!(a.inv(), b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153746,"byte_end":153777,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153778,"byte_end":153783,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":153784,"byte_end":153791,"line_start":176,"line_end":176,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154504,"byte_end":154508,"line_start":203,"line_end":203,"column_start":8,"column_end":12},"name":"log2","qualname":"::utils::log2","value":"pub fn log2(usize) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns base 2 logarithm of `n`, where `n` is a power of two.","sig":null,"attributes":[{"value":"/ Returns base 2 logarithm of `n`, where `n` is a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154175,"byte_end":154240,"line_start":190,"line_end":190,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154241,"byte_end":154244,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154245,"byte_end":154257,"line_start":192,"line_end":192,"column_start":1,"column_end":13}},{"value":"/ Panics if `n` is not a power of two.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154258,"byte_end":154298,"line_start":193,"line_end":193,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154299,"byte_end":154302,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154303,"byte_end":154317,"line_start":195,"line_end":195,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154318,"byte_end":154325,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/ # use winter_math::log2;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154326,"byte_end":154354,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(log2(1), 0);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154355,"byte_end":154382,"line_start":198,"line_end":198,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(log2(16), 4);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154383,"byte_end":154411,"line_start":199,"line_end":199,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(log2(1 << 20), 20);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154412,"byte_end":154446,"line_start":200,"line_end":200,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(log2(2usize.pow(20)), 20);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154447,"byte_end":154488,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/utils/mod.rs","byte_start":154489,"byte_end":154496,"line_start":202,"line_end":202,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66855,"byte_end":66866,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":67235,"byte_end":67246,"line_start":65,"line_end":65,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":69568,"byte_end":69579,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":70450,"byte_end":70461,"line_start":164,"line_end":164,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":70634,"byte_end":70645,"line_start":172,"line_end":172,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":70887,"byte_end":70898,"line_start":181,"line_end":181,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71025,"byte_end":71036,"line_start":189,"line_end":189,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71131,"byte_end":71142,"line_start":195,"line_end":195,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71269,"byte_end":71280,"line_start":203,"line_end":203,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71376,"byte_end":71387,"line_start":209,"line_end":209,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71514,"byte_end":71525,"line_start":217,"line_end":217,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71620,"byte_end":71631,"line_start":223,"line_end":223,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71763,"byte_end":71774,"line_start":231,"line_end":231,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71869,"byte_end":71880,"line_start":237,"line_end":237,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":72372,"byte_end":72383,"line_start":251,"line_end":251,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":72950,"byte_end":72961,"line_start":269,"line_end":269,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":435},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73349,"byte_end":73360,"line_start":287,"line_end":287,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73622,"byte_end":73633,"line_start":295,"line_end":295,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73787,"byte_end":73798,"line_start":302,"line_end":302,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73952,"byte_end":73963,"line_start":309,"line_end":309,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":74116,"byte_end":74127,"line_start":316,"line_end":316,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":74285,"byte_end":74296,"line_start":323,"line_end":323,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":74714,"byte_end":74725,"line_start":333,"line_end":333,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":75442,"byte_end":75453,"line_start":354,"line_end":354,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":75844,"byte_end":75855,"line_start":365,"line_end":365,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":76003,"byte_end":76014,"line_start":371,"line_end":371,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84993,"byte_end":85004,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":85494,"byte_end":85505,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":88223,"byte_end":88234,"line_start":159,"line_end":159,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":89282,"byte_end":89293,"line_start":194,"line_end":194,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":89466,"byte_end":89477,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":89727,"byte_end":89738,"line_start":211,"line_end":211,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90010,"byte_end":90021,"line_start":220,"line_end":220,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90164,"byte_end":90175,"line_start":225,"line_end":225,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90302,"byte_end":90313,"line_start":233,"line_end":233,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90408,"byte_end":90419,"line_start":239,"line_end":239,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90546,"byte_end":90557,"line_start":247,"line_end":247,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90653,"byte_end":90664,"line_start":253,"line_end":253,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90791,"byte_end":90802,"line_start":261,"line_end":261,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90897,"byte_end":90908,"line_start":267,"line_end":267,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":91040,"byte_end":91051,"line_start":275,"line_end":275,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":91146,"byte_end":91157,"line_start":281,"line_end":281,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":91649,"byte_end":91660,"line_start":295,"line_end":295,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":92350,"byte_end":92361,"line_start":314,"line_end":314,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":94304,"byte_end":94315,"line_start":359,"line_end":359,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95281,"byte_end":95292,"line_start":381,"line_end":381,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95552,"byte_end":95563,"line_start":389,"line_end":389,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95721,"byte_end":95732,"line_start":396,"line_end":396,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95889,"byte_end":95900,"line_start":403,"line_end":403,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":96061,"byte_end":96072,"line_start":410,"line_end":410,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":96542,"byte_end":96553,"line_start":421,"line_end":421,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":97962,"byte_end":97973,"line_start":456,"line_end":456,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":98351,"byte_end":98362,"line_start":467,"line_end":467,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":98597,"byte_end":98608,"line_start":474,"line_end":474,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103280,"byte_end":103291,"line_start":60,"line_end":60,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103564,"byte_end":103575,"line_start":68,"line_end":68,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":107303,"byte_end":107314,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":108354,"byte_end":108365,"line_start":239,"line_end":239,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":108538,"byte_end":108549,"line_start":247,"line_end":247,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":108799,"byte_end":108810,"line_start":256,"line_end":256,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109114,"byte_end":109125,"line_start":265,"line_end":265,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109268,"byte_end":109279,"line_start":270,"line_end":270,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109556,"byte_end":109567,"line_start":281,"line_end":281,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109676,"byte_end":109687,"line_start":288,"line_end":288,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109966,"byte_end":109977,"line_start":299,"line_end":299,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110087,"byte_end":110098,"line_start":306,"line_end":306,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110286,"byte_end":110297,"line_start":316,"line_end":316,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110406,"byte_end":110417,"line_start":323,"line_end":323,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110599,"byte_end":110610,"line_start":333,"line_end":333,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110719,"byte_end":110730,"line_start":340,"line_end":340,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":111332,"byte_end":111343,"line_start":360,"line_end":360,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":112360,"byte_end":112371,"line_start":385,"line_end":385,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114114,"byte_end":114125,"line_start":430,"line_end":430,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114387,"byte_end":114398,"line_start":438,"line_end":438,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114651,"byte_end":114662,"line_start":446,"line_end":446,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114813,"byte_end":114824,"line_start":453,"line_end":453,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114974,"byte_end":114985,"line_start":460,"line_end":460,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":115139,"byte_end":115150,"line_start":467,"line_end":467,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":115613,"byte_end":115624,"line_start":478,"line_end":478,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":117033,"byte_end":117044,"line_start":513,"line_end":513,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":117422,"byte_end":117433,"line_start":524,"line_end":524,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":117668,"byte_end":117679,"line_start":531,"line_end":531,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120732,"byte_end":120745,"line_start":30,"line_end":30,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":121816,"byte_end":121829,"line_start":58,"line_end":58,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":124333,"byte_end":124346,"line_start":132,"line_end":132,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":124550,"byte_end":124563,"line_start":140,"line_end":140,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":124844,"byte_end":124857,"line_start":149,"line_end":149,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125036,"byte_end":125049,"line_start":158,"line_end":158,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125184,"byte_end":125197,"line_start":165,"line_end":165,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125376,"byte_end":125389,"line_start":174,"line_end":174,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125525,"byte_end":125538,"line_start":181,"line_end":181,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125794,"byte_end":125807,"line_start":191,"line_end":191,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125942,"byte_end":125955,"line_start":198,"line_end":198,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126163,"byte_end":126176,"line_start":208,"line_end":208,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126311,"byte_end":126324,"line_start":215,"line_end":215,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126597,"byte_end":126610,"line_start":227,"line_end":227,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126729,"byte_end":126742,"line_start":233,"line_end":233,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126872,"byte_end":126885,"line_start":239,"line_end":239,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127014,"byte_end":127027,"line_start":245,"line_end":245,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127156,"byte_end":127169,"line_start":251,"line_end":251,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127297,"byte_end":127310,"line_start":257,"line_end":257,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127450,"byte_end":127463,"line_start":263,"line_end":263,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":128504,"byte_end":128517,"line_start":288,"line_end":288,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":128920,"byte_end":128933,"line_start":299,"line_end":299,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":129123,"byte_end":129136,"line_start":306,"line_end":306,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134577,"byte_end":134590,"line_start":30,"line_end":30,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":135667,"byte_end":135680,"line_start":58,"line_end":58,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":138514,"byte_end":138527,"line_start":140,"line_end":140,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":138731,"byte_end":138744,"line_start":148,"line_end":148,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139037,"byte_end":139050,"line_start":157,"line_end":157,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139245,"byte_end":139258,"line_start":166,"line_end":166,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139393,"byte_end":139406,"line_start":173,"line_end":173,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139601,"byte_end":139614,"line_start":182,"line_end":182,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139750,"byte_end":139763,"line_start":189,"line_end":189,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140057,"byte_end":140070,"line_start":200,"line_end":200,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140205,"byte_end":140218,"line_start":207,"line_end":207,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140426,"byte_end":140439,"line_start":217,"line_end":217,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140574,"byte_end":140587,"line_start":224,"line_end":224,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140869,"byte_end":140882,"line_start":236,"line_end":236,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141010,"byte_end":141023,"line_start":242,"line_end":242,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141162,"byte_end":141175,"line_start":248,"line_end":248,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141313,"byte_end":141326,"line_start":254,"line_end":254,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141464,"byte_end":141477,"line_start":260,"line_end":260,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141614,"byte_end":141627,"line_start":266,"line_end":266,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141776,"byte_end":141789,"line_start":272,"line_end":272,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":142830,"byte_end":142843,"line_start":297,"line_end":297,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":143246,"byte_end":143259,"line_start":308,"line_end":308,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":143484,"byte_end":143497,"line_start":316,"line_end":316,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4929,"byte_end":4932,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/lib.rs","byte_start":4942,"byte_end":4949,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/mod.rs","byte_start":55742,"byte_end":55746,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":270}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/mod.rs","byte_start":55756,"byte_end":55759,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":477}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/mod.rs","byte_start":55769,"byte_end":55772,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":682}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57024,"byte_end":57028,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":3026},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57035,"byte_end":57040,"line_start":31,"line_end":31,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57047,"byte_end":57052,"line_start":32,"line_end":32,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":9396},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57059,"byte_end":57066,"line_start":33,"line_end":33,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":9403},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57073,"byte_end":57080,"line_start":34,"line_end":34,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57087,"byte_end":57091,"line_start":35,"line_end":35,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57098,"byte_end":57102,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57109,"byte_end":57111,"line_start":37,"line_end":37,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2672},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57118,"byte_end":57127,"line_start":38,"line_end":38,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2667},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57134,"byte_end":57139,"line_start":39,"line_end":39,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57146,"byte_end":57149,"line_start":40,"line_end":40,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3083},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57177,"byte_end":57180,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3088},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57208,"byte_end":57211,"line_start":42,"line_end":42,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3093},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57239,"byte_end":57242,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3098},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57270,"byte_end":57279,"line_start":44,"line_end":44,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":3114},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57292,"byte_end":57301,"line_start":45,"line_end":45,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":3118},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57314,"byte_end":57323,"line_start":46,"line_end":46,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":3122},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57336,"byte_end":57345,"line_start":47,"line_end":47,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":3126},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57358,"byte_end":57361,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3110},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57383,"byte_end":57387,"line_start":49,"line_end":49,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2922},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57429,"byte_end":57433,"line_start":50,"line_end":50,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2922},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57446,"byte_end":57450,"line_start":51,"line_end":51,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2922},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57462,"byte_end":57466,"line_start":52,"line_end":52,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2922},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57478,"byte_end":57482,"line_start":53,"line_end":53,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2922},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57494,"byte_end":57498,"line_start":54,"line_end":54,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2922},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57517,"byte_end":57524,"line_start":55,"line_end":55,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2929},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57541,"byte_end":57548,"line_start":56,"line_end":56,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":18,"index":148},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57555,"byte_end":57567,"line_start":57,"line_end":57,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":18,"index":185},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57574,"byte_end":57586,"line_start":58,"line_end":58,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":18,"index":57},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":57593,"byte_end":57607,"line_start":59,"line_end":59,"column_start":7,"column_end":21},"kind":"SuperTrait","from":{"krate":18,"index":97},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":62478,"byte_end":62490,"line_start":202,"line_end":202,"column_start":23,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":223},"to":{"krate":0,"index":241}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/traits.rs","byte_start":64606,"byte_end":64616,"line_start":253,"line_end":253,"column_start":44,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":241},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":66855,"byte_end":66866,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":67235,"byte_end":67246,"line_start":65,"line_end":65,"column_start":23,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":69568,"byte_end":69579,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":241}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":70450,"byte_end":70461,"line_start":164,"line_end":164,"column_start":23,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":185}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":70634,"byte_end":70645,"line_start":172,"line_end":172,"column_start":18,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":70887,"byte_end":70898,"line_start":181,"line_end":181,"column_start":14,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71025,"byte_end":71036,"line_start":189,"line_end":189,"column_start":20,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71131,"byte_end":71142,"line_start":195,"line_end":195,"column_start":14,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71269,"byte_end":71280,"line_start":203,"line_end":203,"column_start":20,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71376,"byte_end":71387,"line_start":209,"line_end":209,"column_start":14,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71514,"byte_end":71525,"line_start":217,"line_end":217,"column_start":20,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71620,"byte_end":71631,"line_start":223,"line_end":223,"column_start":14,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71763,"byte_end":71774,"line_start":231,"line_end":231,"column_start":20,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3126}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":71869,"byte_end":71880,"line_start":237,"line_end":237,"column_start":14,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":72372,"byte_end":72383,"line_start":251,"line_end":251,"column_start":29,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":72950,"byte_end":72961,"line_start":269,"line_end":269,"column_start":29,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73349,"byte_end":73360,"line_start":287,"line_end":287,"column_start":21,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73622,"byte_end":73633,"line_start":295,"line_end":295,"column_start":20,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73787,"byte_end":73798,"line_start":302,"line_end":302,"column_start":20,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":73952,"byte_end":73963,"line_start":309,"line_end":309,"column_start":20,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":74116,"byte_end":74127,"line_start":316,"line_end":316,"column_start":19,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":74285,"byte_end":74296,"line_start":323,"line_end":323,"column_start":25,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":74714,"byte_end":74725,"line_start":333,"line_end":333,"column_start":32,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":75442,"byte_end":75453,"line_start":354,"line_end":354,"column_start":18,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":148}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":75844,"byte_end":75855,"line_start":365,"line_end":365,"column_start":23,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f128/mod.rs","byte_start":76003,"byte_end":76014,"line_start":371,"line_end":371,"column_start":25,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1376},"to":{"krate":18,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":84993,"byte_end":85004,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":85494,"byte_end":85505,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":88223,"byte_end":88234,"line_start":159,"line_end":159,"column_start":21,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":241}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":89282,"byte_end":89293,"line_start":194,"line_end":194,"column_start":23,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":18,"index":185}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":89466,"byte_end":89477,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":89727,"byte_end":89738,"line_start":211,"line_end":211,"column_start":20,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90010,"byte_end":90021,"line_start":220,"line_end":220,"column_start":13,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90164,"byte_end":90175,"line_start":225,"line_end":225,"column_start":14,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90302,"byte_end":90313,"line_start":233,"line_end":233,"column_start":20,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90408,"byte_end":90419,"line_start":239,"line_end":239,"column_start":14,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90546,"byte_end":90557,"line_start":247,"line_end":247,"column_start":20,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90653,"byte_end":90664,"line_start":253,"line_end":253,"column_start":14,"column_end":25},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90791,"byte_end":90802,"line_start":261,"line_end":261,"column_start":20,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":90897,"byte_end":90908,"line_start":267,"line_end":267,"column_start":14,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":91040,"byte_end":91051,"line_start":275,"line_end":275,"column_start":20,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3126}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":91146,"byte_end":91157,"line_start":281,"line_end":281,"column_start":14,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":91649,"byte_end":91660,"line_start":295,"line_end":295,"column_start":29,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":92350,"byte_end":92361,"line_start":314,"line_end":314,"column_start":29,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":94304,"byte_end":94315,"line_start":359,"line_end":359,"column_start":21,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95281,"byte_end":95292,"line_start":381,"line_end":381,"column_start":20,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95552,"byte_end":95563,"line_start":389,"line_end":389,"column_start":20,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95721,"byte_end":95732,"line_start":396,"line_end":396,"column_start":20,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":95889,"byte_end":95900,"line_start":403,"line_end":403,"column_start":19,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":96061,"byte_end":96072,"line_start":410,"line_end":410,"column_start":24,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":96542,"byte_end":96553,"line_start":421,"line_end":421,"column_start":32,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":97962,"byte_end":97973,"line_start":456,"line_end":456,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1393},"to":{"krate":18,"index":148}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":98351,"byte_end":98362,"line_start":467,"line_end":467,"column_start":23,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1393},"to":{"krate":18,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f62/mod.rs","byte_start":98597,"byte_end":98608,"line_start":474,"line_end":474,"column_start":25,"column_end":36},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1393},"to":{"krate":18,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103280,"byte_end":103291,"line_start":60,"line_end":60,"column_start":6,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":103564,"byte_end":103575,"line_start":68,"line_end":68,"column_start":23,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":107303,"byte_end":107314,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":241}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":108354,"byte_end":108365,"line_start":239,"line_end":239,"column_start":23,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1403},"to":{"krate":18,"index":185}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":108538,"byte_end":108549,"line_start":247,"line_end":247,"column_start":18,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":108799,"byte_end":108810,"line_start":256,"line_end":256,"column_start":20,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109114,"byte_end":109125,"line_start":265,"line_end":265,"column_start":13,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109268,"byte_end":109279,"line_start":270,"line_end":270,"column_start":14,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109556,"byte_end":109567,"line_start":281,"line_end":281,"column_start":20,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109676,"byte_end":109687,"line_start":288,"line_end":288,"column_start":14,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":109966,"byte_end":109977,"line_start":299,"line_end":299,"column_start":20,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110087,"byte_end":110098,"line_start":306,"line_end":306,"column_start":14,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110286,"byte_end":110297,"line_start":316,"line_end":316,"column_start":20,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110406,"byte_end":110417,"line_start":323,"line_end":323,"column_start":14,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110599,"byte_end":110610,"line_start":333,"line_end":333,"column_start":20,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3126}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":110719,"byte_end":110730,"line_start":340,"line_end":340,"column_start":14,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":111332,"byte_end":111343,"line_start":360,"line_end":360,"column_start":29,"column_end":40},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":112360,"byte_end":112371,"line_start":385,"line_end":385,"column_start":29,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114114,"byte_end":114125,"line_start":430,"line_end":430,"column_start":21,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114387,"byte_end":114398,"line_start":438,"line_end":438,"column_start":20,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114651,"byte_end":114662,"line_start":446,"line_end":446,"column_start":20,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114813,"byte_end":114824,"line_start":453,"line_end":453,"column_start":20,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":114974,"byte_end":114985,"line_start":460,"line_end":460,"column_start":19,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":115139,"byte_end":115150,"line_start":467,"line_end":467,"column_start":24,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":115613,"byte_end":115624,"line_start":478,"line_end":478,"column_start":32,"column_end":43},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":117033,"byte_end":117044,"line_start":513,"line_end":513,"column_start":18,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1403},"to":{"krate":18,"index":148}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":117422,"byte_end":117433,"line_start":524,"line_end":524,"column_start":23,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1403},"to":{"krate":18,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/f64/mod.rs","byte_start":117668,"byte_end":117679,"line_start":531,"line_end":531,"column_start":25,"column_end":36},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1403},"to":{"krate":18,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":120732,"byte_end":120745,"line_start":30,"line_end":30,"column_start":29,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":121816,"byte_end":121829,"line_start":58,"line_end":58,"column_start":46,"column_end":59},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1413},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":124333,"byte_end":124346,"line_start":132,"line_end":132,"column_start":46,"column_end":59},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1413},"to":{"krate":18,"index":185}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":124550,"byte_end":124563,"line_start":140,"line_end":140,"column_start":46,"column_end":59},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":124844,"byte_end":124857,"line_start":149,"line_end":149,"column_start":37,"column_end":50},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125036,"byte_end":125049,"line_start":158,"line_end":158,"column_start":43,"column_end":56},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125184,"byte_end":125197,"line_start":165,"line_end":165,"column_start":37,"column_end":50},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125376,"byte_end":125389,"line_start":174,"line_end":174,"column_start":43,"column_end":56},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125525,"byte_end":125538,"line_start":181,"line_end":181,"column_start":37,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125794,"byte_end":125807,"line_start":191,"line_end":191,"column_start":43,"column_end":56},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":125942,"byte_end":125955,"line_start":198,"line_end":198,"column_start":37,"column_end":50},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126163,"byte_end":126176,"line_start":208,"line_end":208,"column_start":43,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3126}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126311,"byte_end":126324,"line_start":215,"line_end":215,"column_start":37,"column_end":50},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126597,"byte_end":126610,"line_start":227,"line_end":227,"column_start":41,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126729,"byte_end":126742,"line_start":233,"line_end":233,"column_start":44,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":126872,"byte_end":126885,"line_start":239,"line_end":239,"column_start":43,"column_end":56},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127014,"byte_end":127027,"line_start":245,"line_end":245,"column_start":43,"column_end":56},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127156,"byte_end":127169,"line_start":251,"line_end":251,"column_start":43,"column_end":56},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127297,"byte_end":127310,"line_start":257,"line_end":257,"column_start":42,"column_end":55},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":127450,"byte_end":127463,"line_start":263,"line_end":263,"column_start":55,"column_end":68},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1413},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":128504,"byte_end":128517,"line_start":288,"line_end":288,"column_start":41,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1413},"to":{"krate":18,"index":148}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":128920,"byte_end":128933,"line_start":299,"line_end":299,"column_start":46,"column_end":59},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1413},"to":{"krate":18,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/quadratic.rs","byte_start":129123,"byte_end":129136,"line_start":306,"line_end":306,"column_start":48,"column_end":61},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1413},"to":{"krate":18,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":134577,"byte_end":134590,"line_start":30,"line_end":30,"column_start":29,"column_end":42},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":135667,"byte_end":135680,"line_start":58,"line_end":58,"column_start":46,"column_end":59},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1449},"to":{"krate":0,"index":223}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":138514,"byte_end":138527,"line_start":140,"line_end":140,"column_start":46,"column_end":59},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1449},"to":{"krate":18,"index":185}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":138731,"byte_end":138744,"line_start":148,"line_end":148,"column_start":46,"column_end":59},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139037,"byte_end":139050,"line_start":157,"line_end":157,"column_start":37,"column_end":50},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139245,"byte_end":139258,"line_start":166,"line_end":166,"column_start":43,"column_end":56},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139393,"byte_end":139406,"line_start":173,"line_end":173,"column_start":37,"column_end":50},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139601,"byte_end":139614,"line_start":182,"line_end":182,"column_start":43,"column_end":56},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":139750,"byte_end":139763,"line_start":189,"line_end":189,"column_start":37,"column_end":50},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140057,"byte_end":140070,"line_start":200,"line_end":200,"column_start":43,"column_end":56},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3122}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140205,"byte_end":140218,"line_start":207,"line_end":207,"column_start":37,"column_end":50},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140426,"byte_end":140439,"line_start":217,"line_end":217,"column_start":43,"column_end":56},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3126}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140574,"byte_end":140587,"line_start":224,"line_end":224,"column_start":37,"column_end":50},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":140869,"byte_end":140882,"line_start":236,"line_end":236,"column_start":41,"column_end":54},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141010,"byte_end":141023,"line_start":242,"line_end":242,"column_start":44,"column_end":57},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141162,"byte_end":141175,"line_start":248,"line_end":248,"column_start":43,"column_end":56},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141313,"byte_end":141326,"line_start":254,"line_end":254,"column_start":43,"column_end":56},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141464,"byte_end":141477,"line_start":260,"line_end":260,"column_start":43,"column_end":56},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141614,"byte_end":141627,"line_start":266,"line_end":266,"column_start":42,"column_end":55},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":141776,"byte_end":141789,"line_start":272,"line_end":272,"column_start":55,"column_end":68},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":142830,"byte_end":142843,"line_start":297,"line_end":297,"column_start":41,"column_end":54},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1449},"to":{"krate":18,"index":148}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":143246,"byte_end":143259,"line_start":308,"line_end":308,"column_start":46,"column_end":59},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1449},"to":{"krate":18,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-math-0.3.0/src/field/extensions/cubic.rs","byte_start":143484,"byte_end":143497,"line_start":316,"line_end":316,"column_start":48,"column_end":61},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1449},"to":{"krate":18,"index":97}}]}