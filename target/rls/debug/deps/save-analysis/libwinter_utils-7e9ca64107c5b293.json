{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0","program":"/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","winter_utils","--edition=2021","/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=7e9ca64107c5b293","-C","extra-filename=-7e9ca64107c5b293","--out-dir","/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","-L","dependency=/Users/verloop/web3/winterfell-nft/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/verloop/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/verloop/web3/winterfell-nft/target/rls/debug/deps/libwinter_utils-7e9ca64107c5b293.rmeta"},"prelude":{"crate_id":{"name":"winter_utils","disambiguator":[6543379861855309929,0]},"crate_root":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src","external_crates":[{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}}],"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":182,"byte_end":19931,"line_start":6,"line_end":615,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":1378},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20596,"byte_end":20604,"line_start":19,"line_end":19,"column_start":28,"column_end":36},"alias_span":null,"name":"BTreeMap","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":5,"index":7443},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20606,"byte_end":20614,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"alias_span":null,"name":"BTreeSet","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":5,"index":6281},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20655,"byte_end":20658,"line_start":22,"line_end":22,"column_start":14,"column_end":17},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":5,"index":7063},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20674,"byte_end":20677,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":5,"index":7606},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":21265,"byte_end":21271,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":31}},{"kind":"Use","ref_id":{"krate":5,"index":5722},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":21273,"byte_end":21281,"line_start":16,"line_end":16,"column_start":31,"column_end":39},"alias_span":null,"name":"ToString","value":"","parent":{"krate":0,"index":31}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":592,"byte_end":612,"line_start":26,"line_end":26,"column_start":17,"column_end":37},"alias_span":null,"name":"DeserializationError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":182,"byte_end":19931,"line_start":6,"line_end":615,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":81},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":137},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191}],"decl_id":null,"docs":" This crate contains utility traits, functions, and macros used by other crates of Winterfell\n STARK prover and verifier.\n","sig":null,"attributes":[{"value":"/ This crate contains utility traits, functions, and macros used by other crates of Winterfell","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":182,"byte_end":278,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ STARK prover and verifier.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":279,"byte_end":309,"line_start":7,"line_end":7,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25}],"decl_id":null,"docs":" Feature-based re-export of common collection components.","sig":null,"attributes":[{"value":"/ Feature-based re-export of common collection components.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20115,"byte_end":20175,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20176,"byte_end":20179,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ When `std` feature is enabled, this module exports collections from the Rust standard library.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20180,"byte_end":20278,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ When `alloc` feature is enabled, same collected are provided without relying on the Rust","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20279,"byte_end":20371,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/ standard library.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/collections.rs","byte_start":20372,"byte_end":20393,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::string","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36}],"decl_id":null,"docs":" Feature-based re-export of common string components.","sig":null,"attributes":[{"value":"/ Feature-based re-export of common string components.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":20863,"byte_end":20919,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":20920,"byte_end":20923,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ When `std` feature is enabled, this module exports string components from the Rust standard","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":20924,"byte_end":21019,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ library. When `alloc` feature is enabled, same components are provided without relying on the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":21020,"byte_end":21117,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ Rust standard library.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/string.rs","byte_start":21118,"byte_end":21144,"line_start":10,"line_end":10,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/iterators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterators","qualname":"::iterators","value":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/iterators.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" Components needed for parallel iterators.","sig":null,"attributes":[{"value":"/ Components needed for parallel iterators.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/iterators.rs","byte_start":21467,"byte_end":21512,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/iterators.rs","byte_start":21513,"byte_end":21516,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, this module re-exports `rayon::prelude`. Otherwise,","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/iterators.rs","byte_start":21517,"byte_end":21610,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ this is an empty module.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/iterators.rs","byte_start":21611,"byte_end":21639,"line_start":9,"line_end":9,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":195},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25647,"byte_end":25659,"line_start":16,"line_end":16,"column_start":5,"column_end":17},"name":"InvalidValue","qualname":"::errors::DeserializationError::InvalidValue","value":"DeserializationError::InvalidValue(String)","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Bytes in the input do not represent a valid value.\n","sig":null,"attributes":[{"value":"/ Bytes in the input do not represent a valid value.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25588,"byte_end":25642,"line_start":15,"line_end":15,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25753,"byte_end":25766,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"UnexpectedEOF","qualname":"::errors::DeserializationError::UnexpectedEOF","value":"DeserializationError::UnexpectedEOF","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" An end of input was reached before a valid value could be deserialized.\n","sig":null,"attributes":[{"value":"/ An end of input was reached before a valid value could be deserialized.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25673,"byte_end":25748,"line_start":17,"line_end":17,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":200},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25847,"byte_end":25862,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UnconsumedBytes","qualname":"::errors::DeserializationError::UnconsumedBytes","value":"DeserializationError::UnconsumedBytes","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Deserialization has finished but not all bytes have been consumed.\n","sig":null,"attributes":[{"value":"/ Deserialization has finished but not all bytes have been consumed.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25772,"byte_end":25842,"line_start":19,"line_end":19,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25907,"byte_end":25919,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"name":"UnknownError","qualname":"::errors::DeserializationError::UnknownError","value":"DeserializationError::UnknownError(String)","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" An unknown error has occurred.\n","sig":null,"attributes":[{"value":"/ An unknown error has occurred.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25868,"byte_end":25902,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":194},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25561,"byte_end":25581,"line_start":14,"line_end":14,"column_start":10,"column_end":30},"name":"DeserializationError","qualname":"::errors::DeserializationError","value":"pub enum DeserializationError {\n    InvalidValue(String),\n    UnexpectedEOF,\n    UnconsumedBytes,\n    UnknownError(String),\n}","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202}],"decl_id":null,"docs":" Defines errors which can occur during deserialization.\n","sig":null,"attributes":[{"value":"/ Defines errors which can occur during deserialization.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25465,"byte_end":25523,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":912,"byte_end":924,"line_start":41,"line_end":41,"column_start":11,"column_end":23},"name":"Serializable","qualname":"::Serializable","value":"Serializable: Sized","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63}],"decl_id":null,"docs":" Defines how to serialize `Self` into bytes.\n","sig":null,"attributes":[{"value":"/ Defines how to serialize `Self` into bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":854,"byte_end":901,"line_start":40,"line_end":40,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1144,"byte_end":1154,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"write_into","qualname":"::Serializable::write_into","value":"pub fn write_into<W: ByteWriter>(&Self, &mut W)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Serializes `self` into bytes and writes these bytes into the `target`.\n","sig":null,"attributes":[{"value":"/ Serializes `self` into bytes and writes these bytes into the `target`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1062,"byte_end":1136,"line_start":44,"line_end":44,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1377,"byte_end":1385,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::Serializable::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Serializes `self` into a vector of bytes.\n","sig":null,"attributes":[{"value":"/ Serializes `self` into a vector of bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1324,"byte_end":1369,"line_start":50,"line_end":50,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1750,"byte_end":1766,"line_start":61,"line_end":61,"column_start":8,"column_end":24},"name":"write_batch_into","qualname":"::Serializable::write_batch_into","value":"pub fn write_batch_into<W: ByteWriter>(&[Self], &mut W)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Serializes all elements of the `source` and writes these bytes into the `target`.","sig":null,"attributes":[{"value":"/ Serializes all elements of the `source` and writes these bytes into the `target`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1537,"byte_end":1622,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1627,"byte_end":1630,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This method does not write any metadata (e.g. number of serialized elements) into the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1635,"byte_end":1724,"line_start":59,"line_end":59,"column_start":5,"column_end":94}},{"value":"/ `target`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1729,"byte_end":1742,"line_start":60,"line_end":60,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":2040,"byte_end":2053,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"get_size_hint","qualname":"::Serializable::get_size_hint","value":"pub fn get_size_hint(&Self) -> usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Returns an estimate of how many bytes are needed to represent self.","sig":null,"attributes":[{"value":"/ Returns an estimate of how many bytes are needed to represent self.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1904,"byte_end":1975,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1980,"byte_end":1983,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns zero.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":1988,"byte_end":2032,"line_start":69,"line_end":69,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3528,"byte_end":3542,"line_start":122,"line_end":122,"column_start":11,"column_end":25},"name":"Deserializable","qualname":"::Deserializable","value":"Deserializable: Sized","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100}],"decl_id":null,"docs":" Defines how to deserialize `Self` from bytes.\n","sig":null,"attributes":[{"value":"/ Defines how to deserialize `Self` from bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3468,"byte_end":3517,"line_start":121,"line_end":121,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4039,"byte_end":4048,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"read_from","qualname":"::Deserializable::read_from","value":"pub fn read_from<R: ByteReader>(&mut R) -> Result<Self, DeserializationError>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Reads a sequence of bytes from the provided `source`, attempts to deserialize these bytes\n into `Self`, and returns the result.","sig":null,"attributes":[{"value":"/ Reads a sequence of bytes from the provided `source`, attempts to deserialize these bytes","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3681,"byte_end":3774,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ into `Self`, and returns the result.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3779,"byte_end":3819,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3824,"byte_end":3827,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3832,"byte_end":3844,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3849,"byte_end":3873,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/ * The `source` does not contain enough bytes to deserialize `Self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3878,"byte_end":3949,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ * Bytes read from the `source` do not represent a valid value for `Self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3954,"byte_end":4031,"line_start":132,"line_end":132,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4850,"byte_end":4865,"line_start":150,"line_end":150,"column_start":8,"column_end":23},"name":"read_batch_from","qualname":"::Deserializable::read_batch_from","value":"pub fn read_batch_from<R: ByteReader>(&mut R, usize)\n-> Result<Vec<Self>, DeserializationError>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Reads a sequence of bytes from the provided `source`, attempts to deserialize these bytes\n into a vector with the specified number of `Self` elements, and returns the result.","sig":null,"attributes":[{"value":"/ Reads a sequence of bytes from the provided `source`, attempts to deserialize these bytes","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4249,"byte_end":4342,"line_start":138,"line_end":138,"column_start":5,"column_end":98}},{"value":"/ into a vector with the specified number of `Self` elements, and returns the result.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4347,"byte_end":4434,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4439,"byte_end":4442,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4447,"byte_end":4459,"line_start":141,"line_end":141,"column_start":5,"column_end":17}},{"value":"/ Returns an error if:","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4464,"byte_end":4488,"line_start":142,"line_end":142,"column_start":5,"column_end":29}},{"value":"/ * The `source` does not contain enough bytes to deserialize the specified number of","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4493,"byte_end":4580,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/   elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4585,"byte_end":4600,"line_start":144,"line_end":144,"column_start":5,"column_end":20}},{"value":"/ * Bytes read from the `source` do not represent a valid value for `Self` for any of the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4605,"byte_end":4696,"line_start":145,"line_end":145,"column_start":5,"column_end":96}},{"value":"/   elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4701,"byte_end":4716,"line_start":146,"line_end":146,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4721,"byte_end":4724,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Note: if the error occurs, the reader is not rolled back to the state prior to calling","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4729,"byte_end":4819,"line_start":148,"line_end":148,"column_start":5,"column_end":95}},{"value":"/ this function.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":4824,"byte_end":4842,"line_start":149,"line_end":149,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5368,"byte_end":5378,"line_start":167,"line_end":167,"column_start":11,"column_end":21},"name":"ByteReader","qualname":"::ByteReader","value":"ByteReader","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112}],"decl_id":null,"docs":" Defines how primitive values are to be read from `Self`.\n","sig":null,"attributes":[{"value":"/ Defines how primitive values are to be read from `Self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5297,"byte_end":5357,"line_start":166,"line_end":166,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5530,"byte_end":5537,"line_start":172,"line_end":172,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::ByteReader::read_u8","value":"pub fn read_u8(&mut Self) -> Result<u8, DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a single byte read from `self`.","sig":null,"attributes":[{"value":"/ Returns a single byte read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5385,"byte_end":5428,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5433,"byte_end":5436,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5441,"byte_end":5453,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ Returns a [DeserializationError] error the reader is at EOF.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5458,"byte_end":5522,"line_start":171,"line_end":171,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5780,"byte_end":5788,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::ByteReader::read_u16","value":"pub fn read_u16(&mut Self) -> Result<u16, DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a u16 value read from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Returns a u16 value read from `self` in little-endian byte order.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5591,"byte_end":5660,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5665,"byte_end":5668,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5673,"byte_end":5685,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ Returns a [DeserializationError] if a u16 value could not be read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5690,"byte_end":5772,"line_start":177,"line_end":177,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6032,"byte_end":6040,"line_start":184,"line_end":184,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::ByteReader::read_u32","value":"pub fn read_u32(&mut Self) -> Result<u32, DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a u32 value read from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Returns a u32 value read from `self` in little-endian byte order.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5843,"byte_end":5912,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5917,"byte_end":5920,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5925,"byte_end":5937,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/ Returns a [DeserializationError] if a u32 value could not be read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":5942,"byte_end":6024,"line_start":183,"line_end":183,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6284,"byte_end":6292,"line_start":190,"line_end":190,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::ByteReader::read_u64","value":"pub fn read_u64(&mut Self) -> Result<u64, DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a u64 value read from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Returns a u64 value read from `self` in little-endian byte order.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6095,"byte_end":6164,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6169,"byte_end":6172,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6177,"byte_end":6189,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/ Returns a [DeserializationError] if a u64 value could not be read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6194,"byte_end":6276,"line_start":189,"line_end":189,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6538,"byte_end":6547,"line_start":196,"line_end":196,"column_start":8,"column_end":17},"name":"read_u128","qualname":"::ByteReader::read_u128","value":"pub fn read_u128(&mut Self) -> Result<u128, DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a u128 value read from `self` in little-endian byte order.","sig":null,"attributes":[{"value":"/ Returns a u128 value read from `self` in little-endian byte order.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6347,"byte_end":6417,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6422,"byte_end":6425,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6430,"byte_end":6442,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/ Returns a [DeserializationError] if a u128 value could not be read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6447,"byte_end":6530,"line_start":195,"line_end":195,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6819,"byte_end":6830,"line_start":203,"line_end":203,"column_start":8,"column_end":19},"name":"read_u8_vec","qualname":"::ByteReader::read_u8_vec","value":"pub fn read_u8_vec(&mut Self, usize) -> Result<Vec<u8>, DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a byte vector of the specified length read from `self`.","sig":null,"attributes":[{"value":"/ Returns a byte vector of the specified length read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6603,"byte_end":6670,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6675,"byte_end":6678,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6683,"byte_end":6695,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/ Returns a [DeserializationError] if a vector of the specified length could not be read","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6700,"byte_end":6790,"line_start":201,"line_end":201,"column_start":5,"column_end":95}},{"value":"/ from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6795,"byte_end":6811,"line_start":202,"line_end":202,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6966,"byte_end":6979,"line_start":206,"line_end":206,"column_start":8,"column_end":21},"name":"read_u8_array","qualname":"::ByteReader::read_u8_array","value":"pub fn read_u8_array<const N: usize>(&mut Self)\n-> Result<[u8; ], DeserializationError>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns a byte array of length `N` reade from `self`.\n","sig":null,"attributes":[{"value":"/ Returns a byte array of length `N` reade from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":6901,"byte_end":6958,"line_start":205,"line_end":205,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7131,"byte_end":7145,"line_start":209,"line_end":209,"column_start":8,"column_end":22},"name":"has_more_bytes","qualname":"::ByteReader::has_more_bytes","value":"pub fn has_more_bytes(&Self) -> bool","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":" Returns true if there are more bytes left to be read from `self`.\n","sig":null,"attributes":[{"value":"/ Returns true if there are more bytes left to be read from `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7054,"byte_end":7123,"line_start":208,"line_end":208,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7349,"byte_end":7360,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Implements [ByteReader] trait for a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Implements [ByteReader] trait for a slice of bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7282,"byte_end":7337,"line_start":215,"line_end":215,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7507,"byte_end":7510,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceReader>::new","value":"pub fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new slice reader from the specified slice.\n","sig":null,"attributes":[{"value":"/ Creates a new slice reader from the specified slice.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7439,"byte_end":7495,"line_start":222,"line_end":222,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":137},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":10951,"byte_end":10961,"line_start":334,"line_end":334,"column_start":11,"column_end":21},"name":"ByteWriter","qualname":"::ByteWriter","value":"ByteWriter: Sized","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Defines how primitive values are to be written into `Self`.\n","sig":null,"attributes":[{"value":"/ Defines how primitive values are to be written into `Self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":10877,"byte_end":10940,"line_start":333,"line_end":333,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11231,"byte_end":11239,"line_start":342,"line_end":342,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::ByteWriter::write_u8","value":"pub fn write_u8(&mut Self, u8)","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Writes a single byte into `self`.","sig":null,"attributes":[{"value":"/ Writes a single byte into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11100,"byte_end":11137,"line_start":338,"line_end":338,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11142,"byte_end":11145,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11150,"byte_end":11162,"line_start":340,"line_end":340,"column_start":5,"column_end":17}},{"value":"/ Panics if the byte could not be written into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11167,"byte_end":11223,"line_start":341,"line_end":341,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11418,"byte_end":11432,"line_start":348,"line_end":348,"column_start":8,"column_end":22},"name":"write_u8_slice","qualname":"::ByteWriter::write_u8_slice","value":"pub fn write_u8_slice(&mut Self, &[u8])","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Writes a sequence of bytes into `self`.","sig":null,"attributes":[{"value":"/ Writes a sequence of bytes into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11268,"byte_end":11311,"line_start":344,"line_end":344,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11316,"byte_end":11319,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11324,"byte_end":11336,"line_start":346,"line_end":346,"column_start":5,"column_end":17}},{"value":"/ Panics if the sequence of bytes could not be written into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11341,"byte_end":11410,"line_start":347,"line_end":347,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11748,"byte_end":11757,"line_start":357,"line_end":357,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::ByteWriter::write_u16","value":"pub fn write_u16(&mut Self, u16)","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Writes a u16 value in little-endian byte order into `self`.","sig":null,"attributes":[{"value":"/ Writes a u16 value in little-endian byte order into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11590,"byte_end":11653,"line_start":353,"line_end":353,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11658,"byte_end":11661,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11666,"byte_end":11678,"line_start":355,"line_end":355,"column_start":5,"column_end":17}},{"value":"/ Panics if the value could not be written into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11683,"byte_end":11740,"line_start":356,"line_end":356,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12003,"byte_end":12012,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::ByteWriter::write_u32","value":"pub fn write_u32(&mut Self, u32)","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Writes a u32 value in little-endian byte order into `self`.","sig":null,"attributes":[{"value":"/ Writes a u32 value in little-endian byte order into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11845,"byte_end":11908,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11913,"byte_end":11916,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11921,"byte_end":11933,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/ Panics if the value could not be written into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":11938,"byte_end":11995,"line_start":364,"line_end":364,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12258,"byte_end":12267,"line_start":373,"line_end":373,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::ByteWriter::write_u64","value":"pub fn write_u64(&mut Self, u64)","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Writes a u64 value in little-endian byte order into `self`.","sig":null,"attributes":[{"value":"/ Writes a u64 value in little-endian byte order into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12100,"byte_end":12163,"line_start":369,"line_end":369,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12168,"byte_end":12171,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12176,"byte_end":12188,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/ Panics if the value could not be written into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12193,"byte_end":12250,"line_start":372,"line_end":372,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12494,"byte_end":12499,"line_start":381,"line_end":381,"column_start":8,"column_end":13},"name":"write","qualname":"::ByteWriter::write","value":"pub fn write<S: Serializable>(&mut Self, S)","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Writes a serializable value into `self`.","sig":null,"attributes":[{"value":"/ Writes a serializable value into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12355,"byte_end":12399,"line_start":377,"line_end":377,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12404,"byte_end":12407,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12412,"byte_end":12424,"line_start":379,"line_end":379,"column_start":5,"column_end":17}},{"value":"/ Panics if the value could not be written into `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12429,"byte_end":12486,"line_start":380,"line_end":380,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12978,"byte_end":12985,"line_start":400,"line_end":400,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":149}],"decl_id":null,"docs":" Defines a zero-copy representation of `Self` as a sequence of bytes.\n","sig":null,"attributes":[{"value":"/ Defines a zero-copy representation of `Self` as a sequence of bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12895,"byte_end":12967,"line_start":399,"line_end":399,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13185,"byte_end":13193,"line_start":405,"line_end":405,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::AsBytes::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Returns a byte representation of `self`.","sig":null,"attributes":[{"value":"/ Returns a byte representation of `self`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12992,"byte_end":13036,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13041,"byte_end":13044,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This method is intended to re-interpret the underlying memory as a sequence of bytes, and","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13049,"byte_end":13142,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ thus, should be zero-copy.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13147,"byte_end":13177,"line_start":404,"line_end":404,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14324,"byte_end":14337,"line_start":437,"line_end":437,"column_start":15,"column_end":28},"name":"uninit_vector","qualname":"::uninit_vector","value":"pub unsafe fn uninit_vector<T>(usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of the specified length with un-initialized memory.","sig":null,"attributes":[{"value":"/ Returns a vector of the specified length with un-initialized memory.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13911,"byte_end":13983,"line_start":429,"line_end":429,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13984,"byte_end":13987,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ This is usually faster than requesting a vector with initialized memory and is useful when we","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":13988,"byte_end":14085,"line_start":431,"line_end":431,"column_start":1,"column_end":98}},{"value":"/ overwrite all contents of the vector immediately after memory allocation.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14086,"byte_end":14163,"line_start":432,"line_end":432,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14164,"byte_end":14167,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14168,"byte_end":14180,"line_start":434,"line_end":434,"column_start":1,"column_end":13}},{"value":"/ Using values from the returned vector before initializing them will lead to undefined behavior.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14181,"byte_end":14280,"line_start":435,"line_end":435,"column_start":1,"column_end":100}},{"value":"allow(clippy :: uninit_vec)","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14281,"byte_end":14309,"line_start":436,"line_end":436,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15110,"byte_end":15131,"line_start":461,"line_end":461,"column_start":8,"column_end":29},"name":"group_vector_elements","qualname":"::group_vector_elements","value":"pub fn group_vector_elements<T, const N: usize>(Vec<T>) -> Vec<[T; ]>","parent":null,"children":[],"decl_id":null,"docs":" Transmutes a vector of `n` elements into a vector of `n` / `N` elements, each of which is\n an array of `N` elements.","sig":null,"attributes":[{"value":"/ Transmutes a vector of `n` elements into a vector of `n` / `N` elements, each of which is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14596,"byte_end":14689,"line_start":446,"line_end":446,"column_start":1,"column_end":94}},{"value":"/ an array of `N` elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14690,"byte_end":14719,"line_start":447,"line_end":447,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14720,"byte_end":14723,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ This function just re-interprets the underlying memory and is thus zero-copy.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14724,"byte_end":14805,"line_start":449,"line_end":449,"column_start":1,"column_end":82}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14806,"byte_end":14818,"line_start":450,"line_end":450,"column_start":1,"column_end":13}},{"value":"/ Panics if `n` is not divisible by `N`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14819,"byte_end":14861,"line_start":451,"line_end":451,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14862,"byte_end":14865,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14866,"byte_end":14879,"line_start":453,"line_end":453,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14880,"byte_end":14887,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/ # use winter_utils::group_vector_elements;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14888,"byte_end":14934,"line_start":455,"line_end":455,"column_start":1,"column_end":47}},{"value":"/ let a = vec![0_u32, 1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14935,"byte_end":14980,"line_start":456,"line_end":456,"column_start":1,"column_end":46}},{"value":"/ let b: Vec<[u32; 2]> = group_vector_elements(a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":14981,"byte_end":15033,"line_start":457,"line_end":457,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15034,"byte_end":15037,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![[0, 1], [2, 3], [4, 5], [6, 7]], b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15038,"byte_end":15094,"line_start":459,"line_end":459,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15095,"byte_end":15102,"line_start":460,"line_end":460,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16040,"byte_end":16060,"line_start":491,"line_end":491,"column_start":8,"column_end":28},"name":"group_slice_elements","qualname":"::group_slice_elements","value":"pub fn group_slice_elements<T, const N: usize>(&[T]) -> &[[T; ]]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes a slice of `n` elements into a slice of `n` / `N` elements, each of which is\n an array of `N` elements.","sig":null,"attributes":[{"value":"/ Transmutes a slice of `n` elements into a slice of `n` / `N` elements, each of which is","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15538,"byte_end":15629,"line_start":476,"line_end":476,"column_start":1,"column_end":92}},{"value":"/ an array of `N` elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15630,"byte_end":15659,"line_start":477,"line_end":477,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15660,"byte_end":15663,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ This function just re-interprets the underlying memory and is thus zero-copy.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15664,"byte_end":15745,"line_start":479,"line_end":479,"column_start":1,"column_end":82}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15746,"byte_end":15758,"line_start":480,"line_end":480,"column_start":1,"column_end":13}},{"value":"/ Panics if `n` is not divisible by `N`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15759,"byte_end":15801,"line_start":481,"line_end":481,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15802,"byte_end":15805,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15806,"byte_end":15819,"line_start":483,"line_end":483,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15820,"byte_end":15827,"line_start":484,"line_end":484,"column_start":1,"column_end":8}},{"value":"/ # use winter_utils::group_slice_elements;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15828,"byte_end":15873,"line_start":485,"line_end":485,"column_start":1,"column_end":46}},{"value":"/ let a = [0_u32, 1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15874,"byte_end":15915,"line_start":486,"line_end":486,"column_start":1,"column_end":42}},{"value":"/ let b: &[[u32; 2]] = group_slice_elements(&a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15916,"byte_end":15966,"line_start":487,"line_end":487,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15967,"byte_end":15970,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&[[0, 1], [2, 3], [4, 5], [6, 7]], b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":15971,"byte_end":16024,"line_start":489,"line_end":489,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16025,"byte_end":16032,"line_start":490,"line_end":490,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16754,"byte_end":16776,"line_start":514,"line_end":514,"column_start":8,"column_end":30},"name":"flatten_slice_elements","qualname":"::flatten_slice_elements","value":"pub fn flatten_slice_elements<T, const N: usize>(&[[T; ]]) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Transmutes a slice of `n` arrays each of length `N`, into a slice of `N` * `n` elements.","sig":null,"attributes":[{"value":"/ Transmutes a slice of `n` arrays each of length `N`, into a slice of `N` * `n` elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16354,"byte_end":16446,"line_start":503,"line_end":503,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16447,"byte_end":16450,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ This function just re-interprets the underlying memory and is thus zero-copy.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16451,"byte_end":16532,"line_start":505,"line_end":505,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16533,"byte_end":16546,"line_start":506,"line_end":506,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16547,"byte_end":16554,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"/ # use winter_utils::flatten_slice_elements;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16555,"byte_end":16602,"line_start":508,"line_end":508,"column_start":1,"column_end":48}},{"value":"/ let a = vec![[1, 2, 3, 4], [5, 6, 7, 8]];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16603,"byte_end":16648,"line_start":509,"line_end":509,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16649,"byte_end":16652,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ let b = flatten_slice_elements(&a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16653,"byte_end":16692,"line_start":511,"line_end":511,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&[1, 2, 3, 4, 5, 6, 7, 8], b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16693,"byte_end":16738,"line_start":512,"line_end":512,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16739,"byte_end":16746,"line_start":513,"line_end":513,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17352,"byte_end":17375,"line_start":531,"line_end":531,"column_start":8,"column_end":31},"name":"flatten_vector_elements","qualname":"::flatten_vector_elements","value":"pub fn flatten_vector_elements<T, const N: usize>(Vec<[T; ]>) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Transmutes a vector of `n` arrays each of length `N`, into a vector of `N` * `n` elements.","sig":null,"attributes":[{"value":"/ Transmutes a vector of `n` arrays each of length `N`, into a vector of `N` * `n` elements.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":16946,"byte_end":17040,"line_start":520,"line_end":520,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17041,"byte_end":17044,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ This function just re-interprets the underlying memory and is thus zero-copy.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17045,"byte_end":17126,"line_start":522,"line_end":522,"column_start":1,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17127,"byte_end":17140,"line_start":523,"line_end":523,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17141,"byte_end":17148,"line_start":524,"line_end":524,"column_start":1,"column_end":8}},{"value":"/ # use winter_utils::flatten_vector_elements;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17149,"byte_end":17197,"line_start":525,"line_end":525,"column_start":1,"column_end":49}},{"value":"/ let a = vec![[1, 2, 3, 4], [5, 6, 7, 8]];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17198,"byte_end":17243,"line_start":526,"line_end":526,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17244,"byte_end":17247,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ let b = flatten_vector_elements(a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17248,"byte_end":17287,"line_start":528,"line_end":528,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5, 6, 7, 8], b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17288,"byte_end":17336,"line_start":529,"line_end":529,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17337,"byte_end":17344,"line_start":530,"line_end":530,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18212,"byte_end":18227,"line_start":557,"line_end":557,"column_start":8,"column_end":23},"name":"transpose_slice","qualname":"::transpose_slice","value":"pub fn transpose_slice<T: Copy + Send + Sync, const N: usize>(&[T])\n-> Vec<[T; ]>","parent":null,"children":[],"decl_id":null,"docs":" Transposes a slice of `n` elements into a matrix with `N` columns and `n`/`N` rows.","sig":null,"attributes":[{"value":"/ Transposes a slice of `n` elements into a matrix with `N` columns and `n`/`N` rows.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17732,"byte_end":17819,"line_start":542,"line_end":542,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17820,"byte_end":17823,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ When `concurrent` feature is enabled, the slice will be transposed using multiple threads.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17824,"byte_end":17918,"line_start":544,"line_end":544,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17919,"byte_end":17922,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17923,"byte_end":17935,"line_start":546,"line_end":546,"column_start":1,"column_end":13}},{"value":"/ Panics if `n` is not divisible by `N`.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17936,"byte_end":17978,"line_start":547,"line_end":547,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17979,"byte_end":17982,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17983,"byte_end":17996,"line_start":549,"line_end":549,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":17997,"byte_end":18004,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ # use winter_utils::transpose_slice;","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18005,"byte_end":18045,"line_start":551,"line_end":551,"column_start":1,"column_end":41}},{"value":"/ let a = [0_u32, 1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18046,"byte_end":18087,"line_start":552,"line_end":552,"column_start":1,"column_end":42}},{"value":"/ let b: Vec<[u32; 2]> = transpose_slice(&a);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18088,"byte_end":18135,"line_start":553,"line_end":553,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18136,"byte_end":18139,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![[0, 4], [1, 5], [2, 6], [3, 7]], b);","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18140,"byte_end":18196,"line_start":555,"line_end":555,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18197,"byte_end":18204,"line_start":556,"line_end":556,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18983,"byte_end":18995,"line_start":582,"line_end":582,"column_start":11,"column_end":23},"name":"Randomizable","qualname":"::Randomizable","value":"Randomizable: Sized","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" Defines how `Self` can be read from a sequence of random bytes.\n","sig":null,"attributes":[{"value":"/ Defines how `Self` can be read from a sequence of random bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18905,"byte_end":18972,"line_start":581,"line_end":581,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19194,"byte_end":19204,"line_start":587,"line_end":587,"column_start":11,"column_end":21},"name":"VALUE_SIZE","qualname":"::Randomizable::VALUE_SIZE","value":"usize","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Size of `Self` in bytes.","sig":null,"attributes":[{"value":"/ Size of `Self` in bytes.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19009,"byte_end":19037,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19042,"byte_end":19045,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This is used to determine how many bytes should be passed to the","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19050,"byte_end":19118,"line_start":585,"line_end":585,"column_start":5,"column_end":73}},{"value":"/ [from_random_bytes()](Self::from_random_bytes) function.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19123,"byte_end":19183,"line_start":586,"line_end":586,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19309,"byte_end":19326,"line_start":590,"line_end":590,"column_start":8,"column_end":25},"name":"from_random_bytes","qualname":"::Randomizable::from_random_bytes","value":"pub fn from_random_bytes(&[u8]) -> Option<Self>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Returns `Self` if the set of bytes forms a valid value, otherwise returns None.\n","sig":null,"attributes":[{"value":"/ Returns `Self` if the set of bytes forms a valid value, otherwise returns None.","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":19218,"byte_end":19301,"line_start":589,"line_end":589,"column_start":5,"column_end":88}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25954,"byte_end":25974,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":2220,"byte_end":2223,"line_start":79,"line_end":79,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":2553,"byte_end":2556,"line_start":91,"line_end":91,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7417,"byte_end":7428,"line_start":221,"line_end":221,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7611,"byte_end":7622,"line_start":228,"line_end":228,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12600,"byte_end":12603,"line_start":386,"line_end":386,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":469,"byte_end":480,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":513,"byte_end":519,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":552,"byte_end":561,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":42}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/errors.rs","byte_start":25954,"byte_end":25974,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":926,"byte_end":931,"line_start":41,"line_end":41,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":2220,"byte_end":2223,"line_start":79,"line_end":79,"column_start":40,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":2553,"byte_end":2556,"line_start":91,"line_end":91,"column_start":56,"column_end":59},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":3544,"byte_end":3549,"line_start":122,"line_end":122,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7417,"byte_end":7428,"line_start":221,"line_end":221,"column_start":10,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":7611,"byte_end":7622,"line_start":228,"line_end":228,"column_start":25,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":113},"to":{"krate":0,"index":102}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":10963,"byte_end":10968,"line_start":334,"line_end":334,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":12600,"byte_end":12603,"line_start":386,"line_end":386,"column_start":21,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":7063},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/verloop/.cargo/registry/src/github.com-1ecc6299db9ec823/winter-utils-0.3.0/src/lib.rs","byte_start":18997,"byte_end":19002,"line_start":582,"line_end":582,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":185}}]}